{"version":3,"sources":["pages/Todolist/bg.png","util/constants/settingSystem.js","assets/img/download (1).jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","assets/img/download.jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","util/history.js","pages/Contact/Contact.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","templates/HomeTemplate/HomeTemplate.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/Main/ContentMain.js","redux/constants/Cyberbugs/TaskConstants.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","components/Cyberbugs/MenuCyberbugs.js","redux/constants/Cyberbugs/StatusConstant.js","components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs.js","redux/constants/Cyberbugs/PriorityConstants.js","redux/constants/Cyberbugs/TaskTypeConstants.js","components/Forms/FormCreateTask/FormCreateTask.js","redux/constants/Cyberbugs/ProjectCyberBugsConstants.js","redux/constants/Cyberbugs/UserConstatnts.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject.js/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/DemoDragDrop/DemoDragDrop.js","pages/Demo/Demo.js","pages/DragAndDropDnD/DragAndDropDnD.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","services/CyberbugsService.js","services/baseService.js","services/UserService.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/configStore.js","index.js"],"names":["module","exports","DOMAIN","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","history","createBrowserHistory","Contact","push","LoginCyberBugsWithFormik","withFormik","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","userLogin","singinCyberbugAction","displayName","touched","handleChange","handleBlur","style","height","window","innerHeight","fontSize","width","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","icon","TwitterOutlined","connect","SlideDown","Component","propsSpring","useSpring","marginTop","from","config","duration","div","Login","userName","passWord","setUserLogin","event","newUserLogin","valid","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","Register","htmlFor","selected","DemoHOCModal","LoginWithSlideDown","Detail","match","params","path","Home","UserLoginCyberBugsReducer","avatar","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","HomeTemplate","restParam","render","propsRoute","Sider","Layout","Footer","Content","UserLoginTemplate","Math","round","innerWidth","setSize","onresize","restRoute","backgroundImage","backgroundSize","ContentMain","projectDetail","handleDragEnd","parse","draggableId","projectId","taskId","source","destination","droppableId","taskUpdateStatus","display","onDragEnd","lstTask","taskListDetail","statusId","provided","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","toString","draggableProps","dragHandleProps","priorityTask","priority","assigness","mem","alt","renderCardTaskList","HeaderMain","aria-current","projectName","InfoMain","ReactHtmlParser","description","members","user","renderAvatar","marginLeft","MenuCyberbugs","Select","Option","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","ProjectReducer","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","content","setContent","actionType","tabIndex","role","aria-hidden","typeId","tp","taskType","paddingRight","cursor","data-dismiss","jsxDescription","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","renderDescription","background","marginBottom","userId","options","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","children","i","frmCreateTask","enableReinitialize","arrProject","listUserAsign","taskObject","ProjectCyberBugsReducer","arrUser","userOptions","setFieldValue","setValues","React","timeTracking","setTimetracking","submitFunction","keyWord","idProject","project","statusItem","mode","defaultValue","SidebarCyberbugs","collapsed","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","Item","PlusOutlined","title","SearchOutlined","CyberbugsTemplate","IndexCyberBugs","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","prjectUpdate","disabled","ProjectManagement","projectList","userSearch","setValue","searchRef","useRef","filteredInfo","sortedInfo","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","borderRadius","userProject","length","valueSelect","option","onSearch","current","clearTimeout","setTimeout","projectEditModel","FormOutlined","onConfirm","okText","cancelText","DeleteOutlined","order","columnKey","rowKey","dataSource","pagination","filters","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","DemoDragDrop","setTaskList","tagDrag","tagDragEnter","bottom","reset","set","handleDragStart","handleDragEnter","taskDragEnter","taskListUpdate","indexDragTag","indexDragEnter","temp","onDragOver","stopPropagation","onDrop","cssDragTag","position","interpolate","numBottom","onDragStart","onDragEnter","draggable","Demo","rotate","cssDrag","cssDragEnter","transform","r","onDragLeave","DragAndDropDnD","toDo","items","inProgress","done","itemCopy","splice","_","statusTask","App","useHistory","exact","LoginCyberBugs","indexCyberBugs","CreateProject","component","Boolean","hostname","initialState","stateDefault","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","default","cyberbugsService","headers","projectUpdate","baseService","model","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","signinSaga","theoDoiSignin","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","accessToken","lstUserSearch","statusCode","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","notifiFunction","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUdpateTask","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","ToDoListSaga","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","historyState","usLogin","propsValue","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","ModalReducer","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,gC,sDCA3C,2NAAO,IAAMC,EAAS,6BAETC,EAAkB,sCAElBC,EAAQ,cACRC,EAAa,aAEbC,EAAc,CACvBC,QAAU,IACVC,UAAW,IACXC,aAAa,M,oBCVjBT,EAAOC,QAAU,IAA0B,2C,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,sC,0DCD9BD,EAAOC,QAAU,IAA0B,qC,0CCA3CD,EAAOC,QAAU,IAA0B,gC,8DCA3CD,EAAOC,QAAU,IAA0B,uC,wLCI5B,SAASS,IAIpB,OAFsBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,kBAAzCC,UAIA,yBAAKC,UAAWC,IAAaC,WACzB,yBAAKC,IAAKC,EAAQ,QAInB,G,mBCZA,SAASC,IAGpB,OACI,yBAAKL,UAAU,+CACX,kBAAC,IAAD,CAASA,UAAU,eAAeM,GAAG,KAArC,cACA,4BAAQN,UAAU,2BAA2BO,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,sBACpL,yBAAKZ,UAAU,2BAA2Ba,GAAG,oBACzC,wBAAIb,UAAU,mCACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,SAAtG,UAEJ,wBAAIN,UAAU,YACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,UAAtG,UAEJ,wBAAIN,UAAU,qBACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,YAAtG,YAEJ,wBAAIN,UAAU,qBACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,UAAtG,UAEJ,wBAAIN,UAAU,qBACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,YAAtG,YAEJ,wBAAIN,UAAU,YACV,kBAAC,IAAD,CAASc,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUhB,UAAU,WAAWM,GAAG,iBAAtG,cAEJ,wBAAIN,UAAU,qBACV,uBAAGA,UAAU,2BAA2BiB,KAAK,IAAIJ,GAAG,aAAaL,cAAY,WAAWU,gBAAc,OAAOP,gBAAc,SAA3H,mBACA,yBAAKX,UAAU,gBAAgBmB,kBAAgB,cAC3C,kBAAC,IAAD,CAASnB,UAAU,gBAAgBM,GAAG,gBAAtC,kBACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,gBAAtC,kBACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,kBAAtC,oBACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,iBAAtC,mBACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,aAAtC,gBACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,SAAtC,QACA,kBAAC,IAAD,CAASN,UAAU,gBAAgBM,GAAG,oBAAtC,oBAOZ,0BAAMN,UAAU,4BACZ,2BAAOA,UAAU,uBAAuBO,KAAK,OAAOa,YAAY,WAChE,4BAAQpB,UAAU,uCAAuCO,KAAK,UAA9D,aC9CL,SAASc,IACpB,OACI,sC,6CCGO,SAASC,EAAmBC,GAEvC,IAAMC,EAAWC,cACVC,EAAY9B,aAAY,SAAAC,GAAK,OAAIA,EAAM8B,mBAAvCD,SAHuC,EAMtBE,mBAAS,CAC7BF,SAAU,GACVG,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJD,SAAU,MAZ4B,mBAMzCjC,EANyC,KAMlCmC,EANkC,KAiDxCC,EAAU,SAACC,GACbA,EAAEC,iBACFX,EAAS,CACLjB,KCrDgB,eDsDhBuB,SAAUjC,EAAMgC,OAAOC,YAI/BM,qBAAU,WAIN,OAlBAZ,EAAS,CACLjB,KC9CoB,qBD+DjB,eAGR,IAGH,IAkBM8B,EAAU,SAACP,GACbQ,QAAQC,IAAIT,GACZN,EAAS,CACLjB,KCvFmB,kBDwFnBuB,SAASA,KAiDjB,OACI,yBAAK9B,UAAU,QACX,4BAAQA,UAAU,kBAAkBwC,QAAS,WACzChB,EAAS,CACLjB,KAAK,uBAFb,mCAKA,yBAAKP,UAAU,gBACX,yBAAKG,IAAKC,EAAQ,QAGtB,0BAAMJ,UAAU,aAAayC,SAAUR,GACnC,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,eACX,wCACA,gDAEJ,yBAAKA,UAAU,aACX,2BAAOa,GAAG,UAAU6B,KAAK,WAAWnC,KAAK,OAAOa,YAAY,uBAAuBuB,SA5IlF,SAACT,GAAO,IAAD,EACFA,EAAEU,OAAlBC,EADkB,EAClBA,MAAOH,EADW,EACXA,KACTI,EAAS,eAAQjD,EAAMgC,QAE3BiB,EAAS,2BAAQA,GAAR,kBAAoBJ,EAAOG,IAEpC,IAAIE,EAAS,eAAQlD,EAAMkC,QAET,eAEDiB,KAAKH,IAA2B,KAAjBA,EAAMI,OAGlCF,EAAUL,GAAQ,GAFlBK,EAAUL,GAAQA,EAAO,aAM7BV,EAAS,2BACFnC,GADC,IAEJgC,OAAQiB,EACRf,OAAQgB,QAyHI,4BAAQlC,GAAG,UAAUN,KAAK,SAASiC,QAASP,GACxC,uBAAGjC,UAAU,iBAGrB,yBAAKA,UAAU,cAEX,wBAAIA,UAAU,OAAOa,GAAG,QApEjCa,EAASwB,QAAO,SAAAC,GAAI,OAAKA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GACpD,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WA5BlD,IAACV,IA6BWqB,EAAKrB,SA5BjCN,EAAS,CACLjB,KC9EoB,iBD+EpBuB,eA4Bc,uBAAG9B,UAAU,wBACb,uBAAGA,UAAU,+BA2Db,wBAAIA,UAAU,OAAOa,GAAG,aAlDjCa,EAASwB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GACnD,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WA3DjD,IAACV,IA4DWqB,EAAKrB,SA3DhCN,EAAS,CACLjB,KCnEmB,kBDoEnBuB,eA2DY,uBAAG9B,UAAU,gBACb,uBAAGA,UAAU,2B,aEvIxBwD,EAAUC,cCCR,SAASC,IACpB,OACI,+CAEE,4BAAQlB,QAAS,WAAKgB,EAAQG,KAAK,mBAAnC,Q,iEC4CV,IAAMC,EAA4BC,YAAW,CACzCC,iBAAkB,iBAAO,CACrBC,MAAO,GACPC,SAAS,KAEbC,iBAAkBC,MAAaC,MAAM,CACjCJ,MAAMG,MAAaE,SAAS,sBAAsBL,MAAM,qBACxDC,SAASE,MAAaG,IAAI,EAAE,uCAAuCC,IAAI,GAAG,sCAG9EC,aAAc,cAAgD,IAA9CR,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,SAAYzC,EAA2B,EAA3BA,OAU9BiD,EAVyD,EAApBA,gBAUvB,GACdjD,EAAMC,SCpEsB,SAACuC,EAAOC,GACxC,MAAO,CACHzD,KCNuB,kBDOvBkE,UAAW,CACPV,MAAOA,EACPC,SAAUA,ID+DCU,CAAqBX,EAAMC,KAM9CW,YAAa,kBA3BiBd,EA3ClC,SAAwBtC,GAWdA,EANFM,OAMEN,EALFqD,QANwB,IAOxB7C,EAIER,EAJFQ,OACA8C,EAGEtD,EAHFsD,aAEAN,GACEhD,EAFFuD,WAEEvD,EADFgD,cAGJ,OACI,0BAAM9B,SAAU8B,EAAcvE,UAAU,YAAY+E,MAAO,CAAEC,OAAQC,OAAOC,cACxE,yBAAKlF,UAAU,+DAA+D+E,MAAO,CAAEC,OAAQC,OAAOC,cAClG,wBAAIlF,UAAU,cAAc+E,MAAO,CAAC/D,WAAW,IAAImE,SAAS,KAA5D,mBACA,yBAAKnF,UAAU,eACX,kBAAC,IAAD,CAAO2C,SAAUkC,EAAcE,MAAO,CAAEK,MAAO,OAAQC,SAAU,KAAO3C,KAAK,QAAQ4C,KAAK,QAAQlE,YAAY,QAAQmE,OAAQ,kBAACC,EAAA,EAAD,SAElI,yBAAKxF,UAAU,eAAe+B,EAAOgC,OACrC,yBAAK/D,UAAU,eACX,kBAAC,IAAD,CAAO2C,SAAUkC,EAAcE,MAAO,CAAEK,MAAO,OAAQC,SAAU,KAAO9E,KAAK,WAAWmC,KAAK,WAAW4C,KAAK,QAAQlE,YAAY,WAAWmE,OAAQ,kBAACE,EAAA,EAAD,SAExJ,yBAAKzF,UAAU,eAAe+B,EAAOiC,UAErC,kBAAC,IAAD,CAAQ0B,SAAS,SAASJ,KAAK,QAAQP,MAAO,CAAEM,SAAU,IAAKM,gBAAiB,mBAAoBC,MAAO,QAAU5F,UAAU,QAA/H,SAGA,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAAQ+E,MAAO,CAACY,gBAAgB,kBAAoBxB,MAAM,SAASmB,KAAM,SACrE,0BAAMtF,UAAU,mBAAmB+E,MAAO,CAACa,MAAM,SAAjD,MAEJ,kBAAC,IAAD,CAAQrF,KAAK,eAAe4D,MAAM,SAAS0B,KAAM,kBAACC,EAAA,EAAD,MAAqBR,KAAM,gBA2CjFS,gBAAWnC,G,QGhFX,SAASoC,EAAUC,GAE9B,IAAMC,EAAcC,YAAU,CAC1B7F,GAAI,CACA8F,UAAW,KACZC,KAAM,CACLD,UAAW,UAEbE,OAAQ,CACNC,SAAS,OAKjB,OACI,6BACI,kBAAC,IAASC,IAAV,CAAczB,MAAOmB,GACjB,kBAACD,EAAD,QCfD,SAASQ,EAAMlF,GAAQ,IAAD,EAEAK,mBAAS,CAAC8E,SAAS,GAAGC,SAAS,GAAGvD,QAAO,IAFzC,mBAE1BqB,EAF0B,KAEhBmC,EAFgB,KAKjCtE,QAAQC,IAAIkC,GACZ,IAAMI,EAAe,SAACgC,GAAW,IAAD,EACPA,EAAMjE,OAApBF,EADqB,EACrBA,KAAKG,EADgB,EAChBA,MAENiE,EAAY,2BACXrC,GADW,kBAEb/B,EAAMG,IAIPkE,GAAQ,EACZ,IAAI,IAAIxD,KAAOuD,EACA,WAARvD,GAC+B,KAA3BuD,EAAavD,GAAKN,SACjB8D,GAAQ,GAQhBD,EAAa1D,QAHb2D,EAMJH,EAAaE,IAsBjB,OACI,0BAAM9G,UAAU,YAAYyC,SApBZ,SAACoE,GACjBA,EAAM1E,iBACoB,eAAvBsC,EAAUiC,UAAkD,eAArBjC,EAAUkC,UAQhDpF,EAAMiC,QAAQwD,SACdC,aAAaC,QAAQ,YAAYC,KAAKC,UAAU3C,KAGhD4C,MAAM,kBAON,wBAAIrH,UAAU,aAAd,SACA,yBAAKA,UAAU,cACX,wCACA,2BAAO0C,KAAK,WAAW1C,UAAU,eAAe2C,SAAUkC,KAE9D,yBAAK7E,UAAU,cACX,uCACA,2BAAO0C,KAAK,WAAW1C,UAAU,eAAe2C,SAAUkC,KAE9D,yBAAK7E,UAAU,cACZ,4BAAQA,UAAU,mBAAlB,6BAEH,kBAAC,IAAD,CAAQsH,KAAM7C,EAAUrB,OAAQmE,QAAS,SAACC,GACtC,MAAO,2ECvER,SAASC,IACpB,OACI,8BACI,yBAAKzH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAO0H,QAAQ,eAAf,SACA,2BAAOnH,KAAK,QAAQP,UAAU,eAAea,GAAG,cAAcO,YAAY,WAE9E,yBAAKpB,UAAU,uBACX,2BAAO0H,QAAQ,kBAAf,YACA,2BAAOnH,KAAK,WAAWP,UAAU,eAAea,GAAG,iBAAiBO,YAAY,eAGxF,yBAAKpB,UAAU,cACX,2BAAO0H,QAAQ,gBAAf,WACA,2BAAOnH,KAAK,OAAOP,UAAU,eAAea,GAAG,eAAeO,YAAY,kBAE9E,yBAAKpB,UAAU,cACX,2BAAO0H,QAAQ,iBAAf,aACA,2BAAOnH,KAAK,OAAOP,UAAU,eAAea,GAAG,gBAAgBO,YAAY,iCAE/E,yBAAKpB,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAO0H,QAAQ,aAAf,QACA,2BAAOnH,KAAK,OAAOP,UAAU,eAAea,GAAG,eAEnD,yBAAKb,UAAU,uBACX,2BAAO0H,QAAQ,cAAf,SACA,4BAAQ7G,GAAG,aAAab,UAAU,gBAC9B,4BAAQ2H,UAAQ,GAAhB,aACA,yCAGR,yBAAK3H,UAAU,uBACX,2BAAO0H,QAAQ,YAAf,OACA,2BAAOnH,KAAK,OAAOP,UAAU,eAAea,GAAG,eAGvD,yBAAKb,UAAU,cACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,mBAAmBO,KAAK,WAAWM,GAAG,cACvD,2BAAOb,UAAU,mBAAmB0H,QAAQ,aAA5C,kBAKR,4BAAQnH,KAAK,SAASP,UAAU,mBAAhC,YCvCG,SAAS4H,IACpB,IAAMC,EAAqB,kBAAO,IAAI7B,EAAUS,IAE1CjF,EAAWC,cAEjB,OACI,6BAEI,4BAAQe,QAAS,WACbhB,EAAS,CACLjB,KAAK,YACL0F,UAAW,kBAACQ,EAAD,SAIhBlG,KAAK,SAASP,UAAU,yBAAyBQ,cAAY,QAAQC,cAAY,YAPpF,4BAWA,4BAAQ+B,QAAS,WACbhB,EAAS,CACLjB,KAAK,YACL0F,UAAU,kBAACwB,EAAD,SAGflH,KAAK,SAASP,UAAU,yBAAyBQ,cAAY,QAAQC,cAAY,YANpF,wBAUA,kBAACoH,EAAD,OCpCG,SAASC,EAAOvG,GAE3B,OACI,8DACsBA,EAAMwG,MAAMC,OAAOnH,GACrC,6BAFJ,iCAGyBU,EAAMwG,MAAME,MCL9B,SAASC,EAAK3G,GACzB,IAAMkD,EAAY7E,aAAY,SAAAC,GAAK,OAAIA,EAAMsI,0BAA0B1D,aACvE,OACI,oCACKA,QADL,IACKA,OADL,EACKA,EAAW/B,KACZ,yBAAKvC,IAAG,OAAEsE,QAAF,IAAEA,OAAF,EAAEA,EAAW2D,UCNlB,SAASC,EAAa9G,GACjC,OACI,gEAC0BA,EAAMwG,MAAMO,KCF/B,SAASC,EAAQhH,GAG5B,OAAI0F,aAAauB,QAAQ,aAEjB,yCAKJnB,MAAM,2EACC,kBAAC,IAAD,CAAU/G,GAAG,Y,oCCVPmI,G,mNAEjB5I,MAAQ,CACJ6B,SAAU,GACVG,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJD,SAAU,K,EAIlB4G,YAAc,WACV,IAAIC,EAAUC,IAAM,CAChBN,IAAK,iDACLO,OAAQ,QAGZF,EAAQG,MAAK,SAACC,GACVzG,QAAQC,IAAIwG,EAAOC,MAGnB,EAAKhH,SAAS,CACVN,SAAUqH,EAAOC,OAGrB1G,QAAQC,IAAI,uBAIhBoG,EAAQM,OAAM,SAACC,GACX5G,QAAQC,IAAI,sBAEZD,QAAQC,IAAI2G,EAAIC,SAASH,U,EAIjCI,eAAiB,WACb,OAAO,EAAKvJ,MAAM6B,SAASwB,QAAO,SAAAC,GAAI,OAAKA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GAC/D,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9C,EAAKH,QAAQc,EAAKrB,YAElB,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WAChD,EAAK6G,UAAUlG,EAAKrB,YAEpB,uBAAG9B,UAAU,wBACb,uBAAGA,UAAU,+B,EAQjCsJ,mBAAqB,WACjB,OAAO,EAAKzJ,MAAM6B,SAASwB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GAC9D,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9C,EAAKH,QAAQc,EAAKrB,YAElB,uBAAG9B,UAAU,qBAEjB,4BAASO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WACjD,EAAK+G,WAAWpG,EAAKrB,YAErB,uBAAG9B,UAAU,gBACb,uBAAGA,UAAU,uB,EAQjCuJ,WAAa,SAACzH,GACV,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA4DxG,GAC/D+G,OAAO,QAGXF,EAAQG,MAAK,SAAAU,GACTnC,MAAMmC,EAAIR,MACV,EAAKN,iBAGTC,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,U,EAM3BK,UAAY,SAACvH,GACT,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,yDAAD,OAA0DxG,GAC7D+G,OAAO,QAGXF,EAAQG,MAAK,SAAAU,GACTnC,MAAMmC,EAAIR,MACV,EAAKN,iBAGTC,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,U,EAM3B3G,QAAU,SAACP,GACP,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA6DxG,GAChE+G,OAAQ,WAGZF,EAAQG,MAAK,SAAAC,GACT1B,MAAM0B,EAAOC,MACb,EAAKN,iBAGTC,EAAQM,OAAM,SAAAlH,GACVsF,MAAMtF,EAAOoH,SAASH,U,EAW9BnE,aAAe,SAAC3C,GAAO,IAAD,EACIA,EAAEU,OAAlBC,EADY,EACZA,MAAOH,EADK,EACLA,KACbJ,QAAQC,IAAIM,EAAOH,GACnB,IAAII,EAAS,eAAQ,EAAKjD,MAAMgC,QAEhCiB,EAAS,2BAAQA,GAAR,kBAAoBJ,EAAOG,IAEpC,IAAIE,EAAS,eAAQ,EAAKlD,MAAMkC,QAEd,eAEDiB,KAAKH,IAA2B,KAAjBA,EAAMI,OAGlCF,EAAUL,GAAQ,GAFlBK,EAAUL,GAAQA,EAAO,aAM7B,EAAKV,SAAL,2BACO,EAAKnC,OADZ,IAEIgC,OAAQiB,EACRf,OAAQgB,M,EAIhBd,QAAU,SAACC,GACPA,EAAEC,iBACFG,QAAQC,IAAI,EAAK1C,MAAMgC,OAAOC,UAE9B,IAAI6G,EAAUC,IAAM,CAChBN,IAAK,8CACLO,OAAQ,OACRG,KAAM,CAAElH,SAAU,EAAKjC,MAAMgC,OAAOC,YAIxC6G,EAAQG,MAAK,SAAAC,GAET,EAAKL,iBAKTC,EAAQM,OAAM,SAAAlH,GACVsF,MAAMtF,EAAOoH,SAASH,U,kEAhD1BS,KAAKf,gB,+BAuDL,OACI,0BAAMjG,SAAUgH,KAAKxH,SAEjB,yBAAKjC,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKG,IAAKC,EAAQ,QAGtB,yBAAKJ,UAAU,cACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,wCACA,gDAEJ,yBAAKA,UAAU,aACX,2BAAO0C,KAAK,WAAWC,SAAU8G,KAAK5E,aAAchE,GAAG,UAAUN,KAAK,OAAOa,YAAY,yBAEzF,4BAAQP,GAAG,UAAU2B,QAASiH,KAAKxH,SAC/B,uBAAGjC,UAAU,iBAGrB,0BAAMA,UAAU,oBAAoByJ,KAAK5J,MAAMkC,OAAOD,WAG1D,yBAAK9B,UAAU,yBAEX,wBAAIA,UAAU,OAAOa,GAAG,QACnB4I,KAAKL,kBAGV,wBAAIpJ,UAAU,OAAOa,GAAG,aACnB4I,KAAKH,+B,GA/NJrD,c,kCCKzByD,EAAiB,WAG1B,8CAAO,WAAMlI,GAAN,mBAAAmI,EAAA,+EAGsCf,IAAM,CACvCN,IAAK,iDACLO,OAAQ,QALb,gBAGOG,EAHP,EAGOA,KAAM5F,EAHb,EAGaA,OAHb,iCAOgB,MAAXA,GACA5B,EAAS,CACLjB,KfpBQ,eeqBRmB,SAAUsH,IAVnB,kDAcC1G,QAAQC,IAAI,KAAI4G,SAASH,MAd1B,0DAAP,uDCLW,SAASY,EAAcrI,GAAO,IAGlCG,EAAY9B,aAAY,SAAAC,GAAK,OAAIA,EAAM8B,mBAAvCD,SACDF,EAAWC,cAJwB,EAMjBG,mBAAS,CAE7BC,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJD,SAAU,MAZuB,mBAMpCjC,EANoC,KAM7BmC,EAN6B,KA6CnCC,EAAU,SAACC,GDAK,IAACJ,ECCnBI,EAAEC,iBACFG,QAAQC,IAAI1C,EAAMgC,OAAOC,UAGzBN,GDLmBM,ECKCjC,EAAMgC,OAAOC,SDJrC,uCAAO,WAAMN,GAAN,iBAAAmI,EAAA,+EAI2Bf,IAAM,CAC5BN,IAAK,8CACLO,OAAQ,OACRG,KAAM,CAAElH,SAAUA,KAPvB,gBAIMsB,EAJN,EAIMA,OAJN,EAIa4F,KAMG,MAAX5F,GACA5B,EAASkI,KAXd,gDAcCpH,QAAQC,IAAI,KAAI4G,SAASH,MAd1B,yDAAP,yDCQA5G,qBAAU,WAIN,OAhBDZ,EAASkI,KAgBD,eAGR,IAGH,IAAMH,EAAa,SAACzH,GAChBN,EDmDqB,SAACM,GAC1B,OAAO,SAAAN,GACH,IAAImH,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA6DxG,GAChE+G,OAAQ,QAGZF,EAAQG,MAAK,SAAAU,GACTnC,MAAMmC,EAAIR,MACVxH,EAASkI,QAGbf,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,UChEda,CAAc/H,KAKtBuH,EAAY,SAACvH,GACdN,ED2BoB,SAACM,GACzB,OAAO,SAAAN,GACH,IAAImH,EAAUC,IAAM,CAChBN,IAAI,yDAAD,OAA2DxG,GAC9D+G,OAAQ,QAGZF,EAAQG,MAAK,SAAAU,GACThI,EAASkI,QAGbf,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,UCvCdc,CAAahI,KAKpBO,EAAU,SAACP,GACbN,EDGqB,SAACM,GAC1B,OAAO,SAAAN,GACH,IAAImH,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA6DxG,GAChE+G,OAAQ,WAGZF,EAAQG,MAAK,SAAAC,GAETvH,EAASkI,QAGbf,EAAQM,OAAM,SAAAlH,GACVsF,MAAMtF,EAAOoH,SAASH,UChBjBe,CAAcjI,KAgD3B,OACI,yBAAK9B,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKG,IAAKC,EAAQ,QAGtB,0BAAMJ,UAAU,aAAayC,SAAUR,GACnC,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,eACX,wCACA,gDAEJ,yBAAKA,UAAU,aACX,2BAAOa,GAAG,UAAU6B,KAAK,WAAWnC,KAAK,OAAOa,YAAY,uBAAuBuB,SA1HlF,SAACT,GAAO,IAAD,EACFA,EAAEU,OAAlBC,EADkB,EAClBA,MAAOH,EADW,EACXA,KACTI,EAAS,eAAQjD,EAAMgC,QAE3BiB,EAAS,2BAAQA,GAAR,kBAAoBJ,EAAOG,IAEpC,IAAIE,EAAS,eAAQlD,EAAMkC,QAET,eAEDiB,KAAKH,IAA2B,KAAjBA,EAAMI,OAGlCF,EAAUL,GAAQ,GAFlBK,EAAUL,GAAQA,EAAO,aAM7BV,EAAS,2BACFnC,GADC,IAEJgC,OAAQiB,EACRf,OAAQgB,QAuGI,4BAAQlC,GAAG,UAAUN,KAAK,SAASiC,QAASP,GACxC,uBAAGjC,UAAU,iBAGrB,yBAAKA,UAAU,cAEX,wBAAIA,UAAU,OAAOa,GAAG,QA/DjCa,EAASwB,QAAO,SAAAC,GAAI,OAAKA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GACpD,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WAChD6G,EAAUlG,EAAKrB,YAEf,uBAAG9B,UAAU,wBACb,uBAAGA,UAAU,+BAsDb,wBAAIA,UAAU,OAAOa,GAAG,aA7CjCa,EAASwB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GACnD,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,WAChD+G,EAAWpG,EAAKrB,YAEhB,uBAAG9B,UAAU,gBACb,uBAAGA,UAAU,2BCzHtB,SAASgK,EAAYzI,GAAQ,IAAD,EAEfK,mBAAS,CAC7BF,SAAU,GACVG,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJD,SAAU,MARqB,mBAElCjC,EAFkC,KAE3BmC,EAF2B,KAqCjC0G,EAAc,WAChB,IAAIC,EAAUC,IAAM,CAChBN,IAAK,iDACLO,OAAQ,QAGZF,EAAQG,MAAK,SAACC,GACVzG,QAAQC,IAAIwG,EAAOC,MAGnBhH,EAAS,2BACFnC,GADC,IAEJ6B,SAAUqH,EAAOC,QAGrB1G,QAAQC,IAAI,uBAIhBoG,EAAQM,OAAM,SAACC,GACX5G,QAAQC,IAAI,sBAEZD,QAAQC,IAAI2G,EAAIC,SAASH,UAI3B/G,EAAU,SAACC,GACbA,EAAEC,iBACFG,QAAQC,IAAI1C,EAAMgC,OAAOC,UAEzB,IAAI6G,EAAUC,IAAM,CAChBN,IAAK,8CACLO,OAAQ,OACRG,KAAM,CAAElH,SAAUjC,EAAMgC,OAAOC,YAInC6G,EAAQG,MAAK,SAAAC,GAETL,OAKJC,EAAQM,OAAM,SAAAlH,GACVsF,MAAMtF,EAAOoH,SAASH,UAK9B5G,qBAAU,WAIN,OAHAsG,IAGO,eAGR,IAGH,IAoCMrG,EAAU,SAACP,GACb,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA6DxG,GAChE+G,OAAQ,WAGZF,EAAQG,MAAK,SAAAC,GACT1B,MAAM0B,EAAOC,MACbN,OAGJC,EAAQM,OAAM,SAAAlH,GACVsF,MAAMtF,EAAOoH,SAASH,UAiD9B,OACI,yBAAKhJ,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKG,IAAKC,EAAQ,QAGtB,0BAAMJ,UAAU,aAAayC,SAAUR,GACnC,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,eACX,wCACA,gDAEJ,yBAAKA,UAAU,aACX,2BAAOa,GAAG,UAAU6B,KAAK,WAAWnC,KAAK,OAAOa,YAAY,uBAAuBuB,SAnMlF,SAACT,GAAO,IAAD,EACFA,EAAEU,OAAlBC,EADkB,EAClBA,MAAOH,EADW,EACXA,KACTI,EAAS,eAAQjD,EAAMgC,QAE3BiB,EAAS,2BAAQA,GAAR,kBAAoBJ,EAAOG,IAEpC,IAAIE,EAAS,eAAQlD,EAAMkC,QAET,eAEDiB,KAAKH,IAA2B,KAAjBA,EAAMI,OAGlCF,EAAUL,GAAQ,GAFlBK,EAAUL,GAAQA,EAAO,aAM7BV,EAAS,2BACFnC,GADC,IAEJgC,OAAQiB,EACRf,OAAQgB,QAgLI,4BAAQlC,GAAG,UAAUN,KAAK,SAASiC,QAASP,GACxC,uBAAGjC,UAAU,iBAGrB,yBAAKA,UAAU,cAEX,wBAAIA,UAAU,OAAOa,GAAG,QA/DjChB,EAAM6B,SAASwB,QAAO,SAAAC,GAAI,OAAKA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GAC1D,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,YA7ClD,SAACV,GACf,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,yDAAD,OAA0DxG,GAC7D+G,OAAO,QAGXF,EAAQG,MAAK,SAAAU,GACTnC,MAAMmC,EAAIR,MACVN,OAGJC,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,SAkCPK,CAAUlG,EAAKrB,YAEf,uBAAG9B,UAAU,wBACb,uBAAGA,UAAU,+BAsDb,wBAAIA,UAAU,OAAOa,GAAG,aA7CjChB,EAAM6B,SAASwB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAQC,KAAI,SAACF,EAAMG,GACzD,OAAO,wBAAIC,IAAKD,GACZ,8BAAOH,EAAKrB,UACZ,yBAAK9B,UAAU,WACX,4BAAQA,UAAU,SAASO,KAAK,SAASiC,QAAS,WAC9CH,EAAQc,EAAKrB,YAEb,uBAAG9B,UAAU,qBAEjB,4BAAQO,KAAK,SAASP,UAAU,WAAWwC,QAAS,YArFjD,SAACV,GAChB,IAAI6G,EAAUC,IAAM,CAChBN,IAAI,2DAAD,OAA4DxG,GAC/D+G,OAAO,QAGXF,EAAQG,MAAK,SAAAU,GACTnC,MAAMmC,EAAIR,MACVN,OAGJC,EAAQM,OAAM,SAAAC,GACV7B,MAAM6B,EAAIC,SAASH,SA0EPO,CAAWpG,EAAKrB,YAEhB,uBAAG9B,UAAU,gBACb,uBAAGA,UAAU,2BCtL9B,IAAMiK,GAAe,SAAC1I,GAAW,IAE7B0E,EAA0B1E,EAA1B0E,UAAaiE,EAFe,YAEF3I,EAFE,eAGnC,OAAO,kBAAC,IAAD,iBAAW2I,EAAX,CAAsBC,OAAQ,SAACC,GAClC,OAAO,oCACH,kBAAC,EAAD,MACA,kBAACnE,EAAcmE,S,UCTHC,IAAmBC,KAAnCjK,OAAmCiK,KAA3BC,OAA2BD,KAAnBD,OAAOG,GAAYF,KAAZE,QAQlBC,GAAoB,SAAClJ,GAAW,IAAD,EAEPK,mBAAS,CAACwD,MAAMsF,KAAKC,MAAM1F,OAAO2F,YAAY5F,OAAO0F,KAAKC,MAAM1F,OAAOC,eAFhE,0BAEhCE,EAFgC,EAEhCA,MAAMJ,EAF0B,EAE1BA,OAAQ6F,EAFkB,KAIxCzI,qBAAU,WACN6C,OAAO6F,SAAW,WACdD,EAAQ,CACJzF,MAAOsF,KAAKC,MAAM1F,OAAO2F,YACzB5F,OAAO0F,KAAKC,MAAM1F,OAAOC,kBAGnC,IAXsC,IAcnCe,EAA2B1E,EAA3B0E,UAAa8E,EAdsB,YAcRxJ,EAdQ,eAgBxC,OAAO,kBAAC,IAAD,iBAAWwJ,EAAX,CAAsBZ,OAAQ,SAACC,GAClC,OAAO,oCACH,kBAAC,KAAD,KACI,kBAACC,GAAD,CAAOjF,MAAOA,EAAM,EAAGL,MAAO,CAACC,OAAOA,EAAOgG,gBAAgB,6BAAD,OAA8BN,KAAKC,MAAMvF,EAAM,GAA/C,YAAqDJ,EAArD,KAA+DiG,eAAe,UAG1I,kBAACT,GAAD,KACI,kBAACvE,EAAcmE,W,UC/BpB,SAASc,GAAY3J,GAAQ,IAEhC4J,EAAkB5J,EAAlB4J,cACF3J,EAAWC,cAEX2J,EAAgB,SAACrC,GAAY,IAAD,EACL5B,KAAKkE,MAAOtC,EAAOuC,aAAvCC,EADyB,EACzBA,UAAUC,EADe,EACfA,OAEflJ,QAAQC,IAAI,CAACgJ,YAAUC,WAHO,IAIxBC,EAAwB1C,EAAxB0C,OAAQC,EAAgB3C,EAAhB2C,YACT3C,EAAO2C,cAGRD,EAAOnI,QAAUoI,EAAYpI,OAASmI,EAAOE,cAAgBD,EAAYC,aAO7EnK,EAAS,CACLjB,KCjB2B,0BDkB3BqL,iBAAkB,CACd,OAAUJ,EACV,SAAYE,EAAYC,YACxB,UAAYJ,OAwExB,OACI,yBAAKvL,UAAU,UAAU+E,MAAO,CAAE8G,QAAS,SApEpB,WAAO,IAAD,EAC7B,OAAO,kBAAC,KAAD,CAAiBC,UAAWV,GAA5B,UAECD,EAAcY,eAFf,aAEC,EAAuB1I,KAAI,SAAC2I,EAAgB1I,GACxC,OAAO,kBAAC,KAAD,CAAWC,IAAKD,EAAOqI,YAAaK,EAAeC,WACrD,SAACC,GACE,OAAO,yBAAKlM,UAAU,YAAY+E,MAAO,CAAEK,MAAO,QAASJ,OAAQ,SAC/D,yBAAKhF,UAAU,eACVgM,EAAeG,YAEpB,uCACIC,IAAKF,EAASG,UACVH,EAASI,eAFjB,CAGI/I,IAAKD,EACLtD,UAAU,8BAA8B+E,MAAO,CAAEC,OAAQ,UACxDgH,EAAeO,cAAclJ,KAAI,SAACmJ,EAAMlJ,GACrC,OAAO,kBAAC,KAAD,CAAWC,IAAKiJ,EAAKhB,OAAOiB,WAAYnJ,MAAOA,EAAOgI,YAAanE,KAAKC,UAAU,CAACmE,UAAUiB,EAAKjB,UAAUC,OAAOgB,EAAKhB,WAC1H,SAACU,GACE,OAAO,uCACHE,IAAKF,EAASG,UACVH,EAASQ,eACTR,EAASS,gBAHV,CAIHpJ,IAAKD,EAAOtD,UAAU,kBAAkBQ,cAAY,QAAQC,cAAY,aAAa+B,QAAS,WAC1FhB,EAAS,CAAEjB,KCzD/B,uBDyD2DiL,OAAQgB,EAAKhB,YAGxD,uBAAGxL,UAAU,mBACRwM,EAAK1K,UAEV,yBAAK9B,UAAU,QAAQ+E,MAAO,CAAE8G,QAAS,SACrC,yBAAK7L,UAAU,cACX,uBAAGA,UAAU,eAAewM,EAAKI,aAAaC,WAIlD,yBAAK7M,UAAU,eACX,yBAAKA,UAAU,eAAe+E,MAAO,CAAE8G,QAAS,SAC3CW,EAAKM,UAAUzJ,KAAI,SAAC0J,EAAKzJ,GACtB,OAAO,yBAAKtD,UAAU,SAASuD,IAAKD,GAChC,yBAAKnD,IAAK4M,EAAI3E,OAAQ4E,IAAKD,EAAI3E,uBAalE8D,EAAS9K,qBAkBjC6L,IEtGE,SAASC,GAAW3L,GAAQ,IAEhC4J,EAAiB5J,EAAjB4J,cAEP,OACI,yBAAKnL,UAAU,UACX,yBAAKY,aAAW,cACZ,wBAAIZ,UAAU,aAAa+E,MAAO,CAAEY,gBAAiB,UACjD,wBAAI3F,UAAU,mBAAd,WACA,wBAAIA,UAAU,mBAAd,cACA,wBAAIA,UAAU,mBAAd,sBACA,wBAAIA,UAAU,yBAAyBmN,eAAa,QAC/ChC,EAAciC,gB,yBCVxB,SAASC,GAAS9L,GAAQ,IAE9B4J,EAAiB5J,EAAjB4J,cAaP,OACI,oCACI,4BAAKA,EAAciC,aAEnB,iCACKE,KAAgBnC,EAAcoC,cAEnC,yBAAKvN,UAAU,OAAO+E,MAAO,CAAE8G,QAAS,SACpC,yBAAK7L,UAAU,gBACX,2BAAOA,UAAU,WACjB,uBAAGA,UAAU,kBAEjB,yBAAKA,UAAU,eAAe+E,MAAO,CAAE8G,QAAS,SAvBvC,WAAO,IAAD,EAGvB,iBAAOV,EAAcqC,eAArB,aAAO,EAAuBnK,KAAI,SAACoK,EAAKnK,GACpC,OAAS,yBAAKC,IAAKD,EAAOtD,UAAU,UACpC,yBAAKG,IAAKsN,EAAKrF,OAAQ4E,IAAKS,EAAKrF,aAmBxBsF,IAEL,yBAAK3I,MAAO,CAAE4I,WAAY,IAAM3N,UAAU,QAA1C,kBACA,yBAAK+E,MAAO,CAAE4I,WAAY,IAAM3N,UAAU,QAA1C,sBChCD,SAAS4N,KACpB,OACI,yBAAK5N,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKG,IAAKC,EAAQ,KAAmC4M,IAAI,SAE7D,yBAAKhN,UAAU,gBACX,4CACA,4CAGR,yBAAKA,UAAU,WACX,6BACI,uBAAGA,UAAU,2BACb,kBAAC,IAAD,CAASA,UAAU,YAAYe,YAAa,CAAC6E,MAAM,QAAStF,GAAG,aAAaQ,gBAAgB,wCAA5F,gBAEJ,6BACI,uBAAGd,UAAU,mBACb,kBAAC,IAAD,CAASA,UAAU,YAAae,YAAa,CAAC6E,MAAM,QAAStF,GAAG,qBAAqBQ,gBAAgB,yCAArG,uBAEJ,6BACI,uBAAGd,UAAU,mBACb,kBAAC,IAAD,CAASA,UAAU,YAAae,YAAa,CAAC6E,MAAM,QAAStF,GAAG,iBAAiBQ,gBAAgB,yCAAjG,oBAIR,yBAAKd,UAAU,WACX,6BACI,uBAAGA,UAAU,qBACb,2CAEJ,6BACI,uBAAGA,UAAU,sBACb,qDAEJ,6BACI,uBAAGA,UAAU,qBACb,wCAEJ,6BACI,uBAAGA,UAAU,8BACb,0CAEJ,6BACI,uBAAGA,UAAU,cACb,+CCjDb,I,mBCUY6N,KAAXC,OAGO,SAASC,GAAexM,GAAQ,IAAD,IAElCyM,EAAoBpO,aAAY,SAAAC,GAAK,OAAIA,EAAMoO,eAA/CD,gBACAE,EAActO,aAAY,SAAAC,GAAK,OAAIA,EAAMsO,iBAAzCD,UACAE,EAAgBxO,aAAY,SAAAC,GAAK,OAAIA,EAAMwO,mBAA3CD,YACAE,EAAgB1O,aAAY,SAAAC,GAAK,OAAIA,EAAM0O,mBAA3CD,YAEAnD,EAAkBvL,aAAY,SAAAC,GAAK,OAAIA,EAAM2O,kBAA7CrD,cAPkC,EAQAvJ,oBAAS,GART,mBAQnC6M,EARmC,KAQpBC,EARoB,OASE9M,mBAASoM,EAAgBT,aAT3B,mBASnCoB,EATmC,KASnBC,EATmB,OAUZhN,mBAASoM,EAAgBT,aAVb,mBAUnCsB,EAVmC,KAU1BC,EAV0B,KAWpCtN,EAAWC,cAEjBW,qBAAU,WACNZ,EAAS,CAAEjB,KD3BgB,wBC4B3BiB,EAAS,CAAEjB,KC3BkB,0BD4B7BiB,EAAS,CAAEjB,KE5BmB,6BF6B/B,IAGH+B,QAAQC,IAAI,kBAAmByL,GAG/B,IA4DMnJ,EAAe,SAAC3C,GAAO,IAAD,EACAA,EAAEU,OAAlBF,EADgB,EAChBA,KAAMG,EADU,EACVA,MAGdrB,EAAS,CACLjB,KLzF+B,8BK0F/BwO,WLlGqB,oBKmGrBrM,OACAG,WA8CR,OACI,yBAAK7C,UAAU,aAAaa,GAAG,YAAYmO,UAAW,EAAGC,KAAK,SAAS9N,kBAAgB,YAAY+N,cAAY,QAC3G,yBAAKlP,UAAU,2BACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,mBACb,4BAAQ0C,KAAK,SAASG,MAAOmL,EAAgBmB,OAAQxM,SAAUkC,GAC1DyJ,EAAYjL,KAAI,SAAC+L,EAAI9L,GAClB,OAAO,4BAAQC,IAAKD,EAAOT,MAAOuM,EAAGvO,IAAKuO,EAAGC,cAIrD,8BAAOrB,EAAgBlM,WAE3B,yBAAKiD,MAAO,CAAE8G,QAAS,QAAU7L,UAAU,cACvC,6BACI,uBAAGA,UAAU,0BACb,0BAAM+E,MAAO,CAAEuK,aAAc,KAA7B,kBAEJ,6BACI,uBAAGtP,UAAU,eACb,0BAAM+E,MAAO,CAAEuK,aAAc,KAA7B,cAEJ,uBAAGtP,UAAU,wBAAwB+E,MAAO,CAAEwK,OAAQ,aACtD,4BAAQhP,KAAK,SAASP,UAAU,QAAQwP,eAAa,QAAQ5O,aAAW,SACpE,0BAAMsO,cAAY,QAAlB,WAIZ,yBAAKlP,UAAU,cACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,SAAb,mCACA,yBAAKA,UAAU,eACX,0CAtJV,WACtB,IAAMyP,EAAiBnC,KAAgBU,EAAgBT,aACvD,OAAO,6BACFkB,EAAgB,iCAAM,kBAAC,KAAD,CACnB/L,KAAK,cACLgN,aAAc1B,EAAgBT,YAC9BoC,KAAM,CACFC,SAAU,sBACV5K,OAAQ,IACR6K,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QACI,mNAIRC,eAAgB,SAACnB,EAASoB,GACtBnB,EAAWD,MAIf,4BAAQ7O,UAAU,sBAAsBwC,QAAS,WAC7ChB,EAAS,CACLjB,KLnDmB,8BKoDnBwO,WL5DS,oBK6DTrM,KAAM,cACNG,MAAOgM,IAEXH,GAAiB,KAPrB,QASA,4BAAQ1O,UAAU,sBAAsBwC,QAAS,WAC7ChB,EAAS,CACLjB,KL5DmB,8BK6DnBwO,WLrES,oBKsETrM,KAAM,cACNG,MAAO8L,IAQXD,GAAiB,KAbrB,UAeK,yBAAKlM,QAAS,WAEnBoM,EAAkBZ,EAAgBT,aAClCmB,GAAkBD,KAElBgB,IAiGyBS,IAEL,yBAAKlQ,UAAU,WACX,uCACA,yBAAKA,UAAU,gBAAgB+E,MAAO,CAAE8G,QAAS,SAC7C,yBAAK7L,UAAU,UACX,yBAAKG,IAAKC,EAAQ,KAA0C4M,IAAI,SAEpE,yBAAKhN,UAAU,iBACX,2BAAOO,KAAK,OAAOa,YAAY,sBAC/B,2BACI,0BAAM2D,MAAO,CAAE/D,WAAY,IAAK4E,MAAO,SAAvC,WACA,sCAC5B,0BAAMb,MAAO,CAAE/D,WAAY,OAAQmP,WAAY,UAAWvK,MAAO,YAAjE,KAD4B,iBAMZ,yBAAK5F,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,kBAAkB+E,MAAO,CAAE8G,QAAS,SAC/C,yBAAK7L,UAAU,UACX,yBAAKG,IAAKC,EAAQ,KAA0C4M,IAAI,SAEpE,6BACI,uBAAGjI,MAAO,CAAEqL,aAAc,IAA1B,cACe,8CAEf,uBAAGrL,MAAO,CAAEqL,aAAc,IAA1B,qJAMA,6BACI,0BAAMrL,MAAO,CAAEa,MAAO,YAAtB,QADJ,SAG9B,0BAAMb,MAAO,CAAEa,MAAO,YAAtB,iBAQM,yBAAK5F,UAAU,SACX,yBAAKA,UAAU,UACX,sCACA,4BAAQ0C,KAAK,WAAW1C,UAAU,gBAAgB6C,MAAOmL,EAAgB/B,SAAUtJ,SAAU,SAACT,GAE1F2C,EAAa3C,KAsBZgM,EAAU7K,KAAI,SAACD,EAAQE,GACpB,OAAO,4BAAQT,MAAOO,EAAO6I,SAAU1I,IAAKD,GAAQF,EAAO+I,iBAIvE,yBAAKnM,UAAU,aACX,yCACA,yBAAKA,UAAU,OAAf,UAEQgO,EAAgBlB,iBAFxB,aAEQ,EAA2BzJ,KAAI,SAACoK,EAAMnK,GAClC,OAAO,yBAAKtD,UAAU,mBAAmBuD,IAAKD,GAC1C,yBAAKC,IAAKD,EAAOyB,MAAO,CAAE8G,QAAS,QAAU7L,UAAU,QAGnD,yBAAKA,UAAU,UACX,yBAAKG,IAAKsN,EAAKrF,OAAQ4E,IAAKS,EAAKrF,UAErC,uBAAGpI,UAAU,kBACRyN,EAAK/K,KACN,uBAAG1C,UAAU,cAAc+E,MAAO,CAAE4I,WAAY,EAAE4B,OAAO,WAAc/M,QAAS,WAE5EhB,EAAS,CACLjB,KL7Q7B,8BK8Q6BwO,WLpRtC,qBKqRsCsB,OAAO5C,EAAK5M,cAcxC,yBAAKb,UAAU,oBAEX,kBAAC,KAAD,CACIsQ,QAAO,UAAInF,EAAcqC,eAAlB,aAAI,EAAuBtK,QAAO,SAAA6J,GAAQ,IAAD,EAE5C,OAAe,KADN,UAAGiB,EAAgBlB,iBAAnB,aAAG,EAA2ByD,WAAU,SAAAC,GAAE,OAAIA,EAAG3P,KAAOkM,EAAIsD,cAKtEhN,KAAI,SAAC0J,EAAKzJ,GACT,MAAO,CAACT,MAAMkK,EAAIsD,OAAOI,MAAM1D,EAAIrK,SAEvCgO,iBAAiB,QACjB3L,MAAO,CAAEK,MAAO,QAChB1C,KAAK,UACLG,MAAM,aACN7C,UAAU,eACV2Q,SAAU,SAAC9N,GACP,GAAa,KAATA,EAAJ,CAGA,IAAI+N,EAAezF,EAAcqC,QAAQqD,MAAK,SAAA9D,GAAG,OAAIA,EAAIsD,QAAUxN,KACnE+N,EAAY,2BAAQA,GAAR,IAAsB/P,GAAI+P,EAAaP,SAEnD7O,EAAS,CACLjB,KLtTjB,8BKuTiBwO,WL9T5B,mBK+T4B6B,wBA2BxB,yBAAK5Q,UAAU,WAAW+E,MAAO,CAAEqL,aAAc,KAC7C,wCACA,4BAAQ1N,KAAK,aAAa1C,UAAU,eAAe6C,MAAOmL,EAAgB8C,WAAYnO,SAAU,SAACT,GAC7F2C,EAAa3C,KAEZkM,EAAY/K,KAAI,SAACF,EAAMG,GACpB,OAAO,4BAAQC,IAAKD,EAAOT,MAAOM,EAAK2N,YAAa3N,EAAK0J,eAMrE,yBAAK7M,UAAU,YACX,yDACA,2BAAO0C,KAAK,mBAAmBnC,KAAK,OAAOP,UAAU,iBAAiB6C,MAAOmL,EAAgB+C,iBAAkBpO,SAAU,SAACT,GACtH2C,EAAa3C,OAGrB,yBAAKlC,UAAU,iBACX,6CA/PT,WAAO,IAEtBgR,EAA6ChD,EAA7CgD,kBAAmBC,EAA0BjD,EAA1BiD,sBAErB3M,EAAM4M,OAAOF,GAAqBE,OAAOD,GACzCE,EAAUzG,KAAKC,MAAMuG,OAAOF,GAAqB1M,EAAM,KAE7D,OAAO,6BACH,yBAAKS,MAAO,CAAE8G,QAAS,SACnB,uBAAG7L,UAAU,gBACb,yBAAK+E,MAAO,CAAEK,MAAO,SAEjB,yBAAKpF,UAAU,YACX,yBAAKA,UAAU,eAAeiP,KAAK,cAAclK,MAAO,CAAEK,MAAM,GAAD,OAAK+L,EAAL,MAAmBC,gBAAeF,OAAOF,GAAoBK,gBAAeH,OAAOD,GAAwBK,gBAAehN,KAE7L,yBAAKS,MAAO,CAAE8G,QAAS,OAAQ0F,eAAgB,kBAC3C,uBAAGvR,UAAU,UAAUkR,OAAOD,GAA9B,YACA,uBAAGjR,UAAU,iBAAiBkR,OAAOD,GAArC,kBAMZ,yBAAKjR,UAAU,OAEX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,eAAe0C,KAAK,oBAAoBC,SAAUkC,KAEvE,yBAAK7E,UAAU,SACX,2BAAOA,UAAU,eAAe0C,KAAK,wBAAwBC,SAAUkC,OAoO/C2M,IAIR,yBAAKzM,MAAO,CAAEa,MAAO,YAArB,yBACA,yBAAKb,MAAO,CAAEa,MAAO,YAArB,sCGxWpC,I,sDAJQkI,GAAWD,KAAXC,OAEF2D,GAAW,GAERC,GAAI,GAAIA,GAAI,GAAIA,KACvBD,GAAS9N,KAAK,kBAAC,GAAD,CAAQJ,IAAKmO,GAAEjF,SAAS,IAAMiF,IAAIA,GAAEjF,SAAS,IAAMiF,KA0NnE,IAAMC,GAAgB9N,YAAW,CAC7B+N,oBAAoB,EACpB9N,iBAAkB,SAACvC,GAAW,IAAD,QAClBsQ,EAAgDtQ,EAAhDsQ,WAAWvD,EAAqC/M,EAArC+M,YAAYF,EAAyB7M,EAAzB6M,YAQ9B,MAAO,CACHtM,SAAU,GACVyL,YAAa,GACbtB,SAAQ,UAX2C1K,EAAb2M,UAWlB,UAAZ,aAAE,EAAcjC,SACxB8E,iBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB1F,UAAS,UAACsG,EAAW,UAAZ,aAAC,EAAehR,GACzBsO,OAAM,UAACb,EAAY,UAAb,aAAC,EAAgBzN,GACvBiQ,WAAU,UAAC1C,EAAY,UAAb,aAAC,EAAgB0C,WAC3BgB,cAAc,KAGtB7N,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC1C,EAAD,GAAuC,IAA5BN,EAA2B,EAA3BA,MAA2B,EAApBiD,cAC5BjD,EAAMC,SAAS,CAACjB,KAAK,mBAAmBwR,WAAWlQ,IACnDS,QAAQC,IAAI,aAAaV,IAE7B8C,YAAa,kBAhCKd,EAxNrB,SAAwBtC,GAAO,IAGrBsQ,EAAcjS,aAAY,SAAAC,GAAK,OAAEA,EAAMmS,2BAAvCH,WACAvD,EAAe1O,aAAY,SAAAC,GAAK,OAAEA,EAAM0O,mBAAxCD,YACAF,EAAexO,aAAY,SAAAC,GAAK,OAAIA,EAAMwO,mBAA1CD,YACA6D,EAAWrS,aAAY,SAAAC,GAAK,OAAIA,EAAMsI,6BAAtC8J,QACA/D,EAAatO,aAAY,SAAAC,GAAK,OAAIA,EAAMsO,iBAAxCD,UAEP5L,QAAQC,IAAI,YAAY2L,GAExB,IAAMgE,EAAcD,EAAQ5O,KAAI,SAACF,EAAKG,GAClC,MAAO,CAACT,MAAMM,EAAKkN,OAAOI,MAAMtN,EAAKT,SAOrCmC,GAKAtD,EARAM,OAQAN,EAPAqD,QAOArD,EANAQ,OAMAR,EALAsD,cAEAN,GAGAhD,EAJAuD,WAIAvD,EAHAgD,cAEA4N,GACA5Q,EAFA6Q,UAEA7Q,EADA4Q,eAGE3Q,EAAWC,cA1BW,EA+BJ4Q,IAAMzQ,SAAS,WA/BX,mBA+BrB0D,EA/BqB,aAiCW1D,mBAAS,CAC5CoP,kBAAkB,EAClBC,sBAAsB,KAnCE,mBAiCrBqB,EAjCqB,KAiCRC,EAjCQ,KAyC5BnQ,qBAAU,WACNZ,EAAS,CAACjB,KC7DkB,yBD8D5BiB,EAAS,CAACjB,KD9DoB,2BC+D9BiB,EAAS,CAACjB,KF/DmB,0BEgE7BiB,EAAS,CAACjB,KJjEiB,wBImE3BiB,EAAS,CAACjB,KAAK,yBAAyBiS,eAAejO,IAEvD/C,EAAS,CAACjB,KAAK,eAAekS,QAAQ,OAExC,IAKF,IAAMhB,EAAW,GACjB,OACI,0BAAMzR,UAAU,YAAYyC,SAAU8B,GAClC,yBAAKvE,UAAU,cACX,sCACA,4BAAS0C,KAAK,YAAY1C,UAAU,eAAe2C,SAAU,SAACT,GAAM,IAG3DW,EAASX,EAAEU,OAAXC,MACLrB,EAAS,CACLjB,KEtFmB,8BFuFnBmS,UAAU7P,IAGdsP,EAAc,YAAYjQ,EAAEU,OAAOC,SAInCgP,EAAWxO,KAAI,SAACsP,EAAQrP,GACrB,OAAO,4BAAQC,IAAKD,EAAOT,MAAO8P,EAAQ9R,IAAK8R,EAAQvF,kBAIlE,yBAAKpN,UAAU,cACX,wCACA,2BAAO0C,KAAK,WAAW1C,UAAU,eAAe2C,SAAUkC,KAE9D,yBAAK7E,UAAU,cACX,qCACA,4BAAQ0C,KAAK,WAAW1C,UAAU,eAAe2C,SAAUkC,GACtDqJ,EAAU7K,KAAI,SAACuP,EAAWtP,GACvB,OAAO,4BAAQC,IAAKD,EAAOT,MAAO+P,EAAW3G,UAAW2G,EAAWzG,iBAI/E,yBAAKnM,UAAU,cACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,uCACA,4BAAQ0C,KAAK,aAAa1C,UAAU,eAAe2C,SAAUkC,GACxDuJ,EAAY/K,KAAI,SAACwJ,EAASvJ,GACvB,OAAO,4BAAQC,IAAKD,EAAOT,MAAOgK,EAASiE,YACtCjE,EAASA,eAK1B,yBAAK7M,UAAU,SACX,wCACA,4BAAQA,UAAU,eAAe0C,KAAK,SAASC,SAAUkC,GACpDyJ,EAAYjL,KAAI,SAACgM,EAAS/L,GACvB,OAAO,4BAAQC,IAAKD,EAAOT,MAAOwM,EAASxO,IAAKwO,EAASA,iBAO7E,yBAAKrP,UAAU,cACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACf,wCACA,kBAAC,KAAD,CAEQ6S,KAAK,WACLvN,KAAMA,EACNgL,QAAS4B,EACT9Q,YAAY,gBACZsP,iBAAiB,QACjB/N,SAAU,SAACd,GAEPsQ,EAAc,gBAAgBtQ,IAElC8O,SAAU,SAAC9N,GAETP,QAAQC,IAAIM,IAGdkC,MAAO,CAAEK,MAAO,SAEfqM,GAET,yBAAKzR,UAAU,YACX,yBAAKA,UAAU,UACX,gDACA,2BAAOO,KAAK,SAAS8D,IAAI,IAAI3B,KAAK,mBAAmBoQ,aAAa,IAAI9S,UAAU,eAAegF,OAAO,KAAKrC,SAAUkC,OAK7H,yBAAK7E,UAAU,SACV,4CAED,kBAAC,KAAD,CAAQ8S,aAAc,GAAIjQ,MAAOyP,EAAatB,kBAAmB1M,IAAK4M,OAAOoB,EAAatB,mBAAqBE,OAAOoB,EAAarB,yBACnI,yBAAKjR,UAAU,OACX,yBAAKA,UAAU,oCAAoCsS,EAAatB,kBAAhE,YACA,yBAAKhR,UAAU,qCAAqCsS,EAAarB,sBAAjE,gBAEJ,yBAAKjR,UAAU,MAAM+E,MAAO,CAACqB,UAAU,IACnC,yBAAKpG,UAAU,SACX,yCACA,2BAAOO,KAAK,SAASuS,aAAa,IAAIzO,IAAI,IAAIrE,UAAU,eAAe0C,KAAK,oBAAoBC,SAAU,SAACT,GACvGqQ,EAAgB,2BACTD,GADQ,IAEXtB,kBAAkB9O,EAAEU,OAAOC,SAG/BsP,EAAc,oBAAoBjQ,EAAEU,OAAOC,WAInD,yBAAK7C,UAAU,SACX,6CACA,2BAAOO,KAAK,SAASuS,aAAa,IAAIzO,IAAI,IAAIrE,UAAU,eAAe0C,KAAK,wBAAyBC,SAAU,SAACT,GAC5GqQ,EAAgB,2BACTD,GADQ,IAEXrB,sBAAsB/O,EAAEU,OAAOC,SAEnCsP,EAAc,wBAAwBjQ,EAAEU,OAAOC,eAUvE,yBAAK7C,UAAU,cACX,0CACA,kBAAC,KAAD,CACI0C,KAAK,cACLiN,KAAM,CACFC,SAAU,sBACV5K,OAAQ,IACR6K,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QACI,mNAIJC,eAAgB,SAACnB,EAASoB,GACtBkC,EAAc,cAActD,WA+DzC9I,gBAVS,SAAClG,GACrB,MAAO,CACHgS,WAAYhS,EAAMmS,wBAAwBH,WAC1CvD,YAAYzO,EAAM0O,gBAAgBD,YAClCF,YAAYvO,EAAMwO,gBAAgBD,YAClCF,UAAUrO,EAAMsO,cAAcD,aAKvBnI,CAA0B4L,IG9QzBtH,IAAmBC,KAA3BjK,OAA2BiK,KAAnBD,OAAmBC,KAAZE,QACR,SAASuI,KAEpB,IAAMvR,EAAWC,cAFsB,EAIbG,mBAAS,CAC/BoR,WAAW,IALwB,mBAIhCnT,EAJgC,KAIzBmC,EAJyB,KAYvC,OACI,6BAEI,kBAAC,GAAD,CAAOiR,QAAS,KAAMC,aAAW,EAACF,UAAWnT,EAAMmT,UAAWjO,MAAO,CAAEC,OAAQ,SAC3E,yBAAKhF,UAAU,kBAAkBwC,QAT9B,WACXR,EAAS,CACLgR,WAAYnT,EAAMmT,cAOqC,kBAACG,GAAA,EAAD,CAAcpO,MAAO,CAAEwK,OAAQ,UAAW3J,MAAO,OAAQT,SAAU,OAEtH,kBAAC,KAAD,CAAMiO,MAAM,OAAOP,KAAK,SAASQ,oBAAqB,CAAC,MACnD,kBAAC,KAAKC,KAAN,CAAW/P,IAAI,IAAIsC,KAAM,kBAAC0N,GAAA,EAAD,CAAcxO,MAAO,CAAEI,SAAU,MAAU3C,QAAS,WACzEhB,EAAS,CACLjB,KAAK,wBACL0F,UAAU,kBAAC,GAAD,MACVuN,MAAM,kBAIV,0BAAMxT,UAAU,QAAhB,gBAEJ,kBAAC,KAAKsT,KAAN,CAAW/P,IAAI,IAAIsC,KAAM,kBAAC4N,GAAA,EAAD,CAAgB1O,MAAO,CAAEI,SAAU,OAA5D,aChCb,IAAMuO,GAAoB,SAACnS,GAAW,IAEjC0E,EAA4B1E,EAA5B0E,UAAciE,EAFkB,YAEJ3I,EAFI,eAGxC,OAAO,kBAAC,IAAD,iBAAW2I,EAAX,CAAsBC,OAAQ,SAACC,GAClC,OAAO,oCACH,yBAAKpK,UAAU,QACX,kBAAC+S,GAAD,MACA,kBAACnF,GAAD,MACI,kBAAC3H,EAAcmE,GACnB,kBAAC2D,GAAD,aCfD,SAAS4F,GAAepS,GAAQ,IAEpC4J,EAAiBvL,aAAY,SAAAC,GAAK,OAAIA,EAAM2O,kBAA5CrD,cACD3J,EAAWC,cAejB,OAbAa,QAAQC,IAAI,gBAAgB4I,GAG5B/I,qBAAU,WAAI,IAEHmJ,EAAahK,EAAMwG,MAAMC,OAAzBuD,UACP/J,EAAS,CACLjB,KAAK,qBACLgL,gBAEN,IAIE,yBAAKvL,UAAU,QACX,kBAACkN,GAAD,CAAY/B,cAAeA,IAE3B,kBAACkC,GAAD,CAAUlC,cAAeA,IAEzB,kBAACD,GAAD,CAAaC,cAAeA,KC+CxC,IAAMyI,GAAoB/P,YAAW,CACjC+N,oBAAoB,EACpB9N,iBAAkB,SAACvC,GAAW,IAAD,EAEzB,OADAe,QAAQC,IAAI,YAAahB,GAClB,CACH6L,YAAa,GACbG,YAAa,GACbsG,WAAU,UAAEtS,EAAMuS,mBAAmB,UAA3B,aAAE,EAA6BjT,KAGjDoD,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC1C,EAAD,GAAuC,IAA5BN,EAA2B,EAA3BA,MAA2B,EAApBiD,cAE5BjD,EAAMC,SAAS,CACXjB,KAAM,sBACNwT,WAAYlS,KAKpB8C,YAAa,uBAvBSd,EAzE1B,SAAuBtC,GAEnB,IAAMuS,EAAqBlU,aAAY,SAAAC,GAAK,OAAIA,EAAMmU,uBAAuBF,sBACvEtS,EAAWC,cAMboD,GAKAtD,EARAM,OAQAN,EAPAqD,QAOArD,EANAQ,OAMAR,EALAsD,cAEAN,GAGAhD,EAJAuD,WAIAvD,EAHAgD,cAEA4N,GACA5Q,EAFA6Q,UAEA7Q,EADA4Q,eAYJ,OATA/P,qBAAU,WAENZ,EAAS,CAAEjB,KAAM,oCAClB,IAOC,yBAAKP,UAAU,iBACX,6CACA,0BAAMA,UAAU,YAAYyC,SAAU8B,EAAc5B,SAAUkC,GAC1D,yBAAK7E,UAAU,cACX,mCACA,2BAAOA,UAAU,eAAe0C,KAAK,iBAEzC,yBAAK1C,UAAU,cACX,0CACA,kBAAC,KAAD,CAEI0C,KAAK,cAELiN,KAAM,CACFC,SAAU,sBAEV5K,OAAQ,IACR6K,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QACI,2NAIRC,eAlCO,SAACnB,EAASoB,GACjCkC,EAAc,cAAetD,OAoCrB,yBAAK7O,UAAU,cACX,4BAAQ0C,KAAK,aAAa1C,UAAU,eAAe2C,SAAUkC,GACxDiP,EAAmBzQ,KAAI,SAACF,EAAMG,GAC3B,OAAO,4BAAQT,MAAOM,EAAKtC,GAAI0C,IAAKD,GAAQH,EAAK8Q,0BAI7D,4BAAQjU,UAAU,0BAA0BO,KAAK,UAAjD,uBA0CDwF,gBAPS,SAAClG,GAAD,MAAY,CAEhCiU,mBAAoBjU,EAAMmU,uBAAuBF,sBAKtC/N,CAAyB6N,I,0FCQxC,IAAMM,GAAkBrQ,YAAW,CAC/B+N,oBAAoB,EACpB9N,iBAAkB,SAACvC,GAAW,IAClB4S,EAAgB5S,EAAhB4S,YAER,MAAO,CACHtT,GAAE,OAAEsT,QAAF,IAAEA,OAAF,EAAEA,EAAatT,GACjBuM,YAAa+G,EAAY/G,YACzBG,YAAa4G,EAAY5G,YACzBsG,WAAYM,EAAYN,aAGhC5P,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC1C,EAAD,GAAuC,IAA5BN,EAA2B,EAA3BA,MAA2B,EAApBiD,cAQ5BjD,EAAMC,SAAS,CACXjB,KAAK,sBACL6T,aAAavS,KAIrB8C,YAAa,mBA9BOd,EAhHxB,SAAyBtC,GACrB,IAAMuS,EAAqBlU,aAAY,SAAAC,GAAK,OAAIA,EAAMmU,uBAAuBF,sBACvEtS,EAAWC,cAIbI,EAQAN,EARAM,OAGAgD,GAKAtD,EAPAqD,QAOArD,EANAQ,OAMAR,EALAsD,cAEAN,GAGAhD,EAJAuD,WAIAvD,EAHAgD,cAEA4N,GACA5Q,EAFA6Q,UAEA7Q,EADA4Q,eA+BJ,OAnBA/P,qBAAU,WAGNZ,EAAS,CAAEjB,KAAM,kCAIjBiB,EAAS,CAAEjB,KAAM,0BAA2BiS,eAAgBjO,MAK7D,IAQC,0BAAMvE,UAAU,kBAAkByC,SAAU8B,GACxC,yBAAKvE,UAAU,OACX,yBAAKA,UAAU,SAEX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,oBAAb,cACA,2BAAO6C,MAAOhB,EAAOhB,GAAIwT,UAAQ,EAACrU,UAAU,eAAe0C,KAAK,SAKxE,yBAAK1C,UAAU,SACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,oBAAb,gBACA,2BAAO6C,MAAOhB,EAAOuL,YAAapN,UAAU,eAAe0C,KAAK,cAAcC,SAAUkC,MAGhG,yBAAK7E,UAAU,SACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,oBAAb,oBACA,4BAAQA,UAAU,eAAe0C,KAAK,aAAaG,MAAOhB,EAAOgS,YAAjE,OACKC,QADL,IACKA,OADL,EACKA,EAAoBzQ,KAAI,SAACF,EAAMG,GAC5B,OAAO,4BAAQC,IAAKD,EAAOT,MAAOM,EAAKtC,IAClCsC,EAAK8Q,2BAQ1B,yBAAKjU,UAAU,UACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,oBAAb,eACA,kBAAC,KAAD,CAEI0C,KAAK,iBACLgN,aAAc7N,EAAO0L,YACrB1K,MAAShB,EAAO0L,YAChBoC,KAAM,CACFC,SAAU,sBACV5K,OAAQ,IAER6K,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QACI,2KAIRC,eA3DG,SAACnB,EAASoB,GACjCkC,EAAc,cAAetD,aAgHtB9I,gBARS,SAAClG,GAAD,MAAY,CAEhCsU,YAAatU,EAAM2O,eAAe2F,eAMvBpO,CAAyBmO,ICvJzB,SAASI,GAAkB/S,GAEtC,IAAMgT,EAAc3U,aAAY,SAAAC,GAAK,OAAIA,EAAMmS,wBAAwBuC,eAE/DC,EAAe5U,aAAY,SAAAC,GAAK,OAAIA,EAAMsI,6BAA1CqM,WAJqC,EAMnB5S,mBAAS,IANU,mBAMtCiB,EANsC,KAM/B4R,EAN+B,KAQvCC,EAAYC,iBAAO,MAGnBnT,EAAWC,cAX4B,EAYnBG,mBAAS,CAC/BgT,aAAc,KACdC,WAAY,OAd6B,mBAYtChV,EAZsC,KAY/BmC,EAZ+B,KAiB7CI,qBAAU,WACNZ,EAAS,CAAEjB,KAAM,4BAClB,IAEH,IA4BMsU,EAA6BhV,EAA7BgV,WAAYD,EAAiB/U,EAAjB+U,aAClBC,EAAaA,GAAc,GAC3BD,EAAeA,GAAgB,GAC/B,IAAME,EAAU,CACZ,CACItB,MAAO,KACPuB,UAAW,KACXxR,IAAK,KACLyR,OAAQ,SAACC,EAAOC,GACZ,OAAOD,EAAMpU,GAAKqU,EAAMrU,IAE5BsU,eAAgB,CAAC,YAGrB,CACI3B,MAAO,cACPuB,UAAW,cACXxR,IAAK,cACL4G,OAAQ,SAACiL,EAAKC,EAAO/R,GACjB,OAAO,kBAAC,IAAD,CAAShD,GAAE,yBAAoB+U,EAAOxU,KAAtC,IAA8CuU,IAEzDJ,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBI,EAAY,UAAGJ,EAAM9H,mBAAT,aAAG,EAAmBnK,OAAOsS,cAE7C,OADgB,UAAGN,EAAM7H,mBAAT,aAAG,EAAmBnK,OAAOsS,eAC1BD,GACP,EAEL,IAkBf,CACI9B,MAAO,WACPuB,UAAW,eACXxR,IAAK,eACLyR,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBM,EAAa,UAAGN,EAAMO,oBAAT,aAAG,EAAoBxS,OAAOsS,cAE/C,OADiB,UAAGN,EAAMQ,oBAAT,aAAG,EAAoBxS,OAAOsS,eAC3BC,GACR,EAEL,IAIf,CACIhC,MAAO,UAEPjQ,IAAK,UACL4G,OAAQ,SAACiL,EAAMC,EAAQ/R,GAAW,IAAD,EAC7B,OAAO,kBAAC,KAAD,CAAKsC,MAAM,SAAX,UAAoByP,EAAOK,eAA3B,aAAoB,EAAgBhT,OAE/CsS,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBS,EAAQ,UAAGT,EAAMQ,eAAT,aAAG,EAAehT,KAAKO,OAAOsS,cAE1C,OADY,UAAGN,EAAMS,eAAT,aAAG,EAAehT,KAAKO,OAAOsS,eAC3BI,GACH,EAEL,IAIf,CACInC,MAAO,UACPjQ,IAAK,UACL4G,OAAQ,SAACiL,EAAMC,EAAQ/R,GAAW,IAAD,IAC7B,OAAO,uCACF+R,EAAO7H,eADL,aACF,EAAgBoI,MAAM,EAAG,GAAGvS,KAAI,SAACwS,EAAQvS,GACtC,OACI,kBAAC,KAAD,CAASC,IAAKD,EAAOwS,UAAU,MAAMtC,MAAM,UAAU3E,QAAS,WAAO,IAAD,EAChE,OAAO,2BAAO7O,UAAU,SACpB,+BACI,4BACI,kCACA,sCACA,oCACA,+BAGR,yCACKqV,EAAO7H,eADZ,aACK,EAAgBnK,KAAI,SAACF,EAAMG,GACxB,OAAO,wBAAIC,IAAKD,GACZ,4BAAKH,EAAKkN,QACV,4BAAI,yBAAKlQ,IAAKgD,EAAKiF,OAAQhD,MAAM,KAAKJ,OAAO,KAAKD,MAAO,CAACgR,aAAa,WACvE,4BAAK5S,EAAKT,MACV,4BACI,4BAAQF,QAAS,WACbhB,EAAS,CACLjB,KAAK,0BACLyV,YAAa,CACT3F,OAAOlN,EAAKkN,OACZ9E,UAAW8J,EAAOxU,OAI3Bb,UAAU,iBAAiB+E,MAAO,CAACgR,aAAa,QATnD,cAgBpB,kBAAC,KAAD,CAAQxS,IAAKD,EAAOnD,IAAK0V,EAAOzN,cAK3C,UAAAiN,EAAO7H,eAAP,eAAgByI,QAAS,EAAI,kBAAC,KAAD,YAAuB,GAErD,kBAAC,KAAD,CAASH,UAAU,WAAWtC,MAAO,WAAY3E,QAAS,WACtD,OAAO,kBAAC,KAAD,CAEHyB,QAAO,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAYnR,KAAI,SAACoK,EAAMnK,GAC5B,MAAO,CAAEmN,MAAOhD,EAAK/K,KAAMG,MAAO4K,EAAK4C,OAAO5D,eAGlD5J,MAAOA,EAEPF,SAAU,SAACyS,GACPX,EAASW,IAGbzE,SAAU,SAACuF,EAAaC,GAEpB1B,EAAS0B,EAAO1F,OAEhBjP,EAAS,CACLjB,KAAM,uBACNyV,YAAa,CACT,UAAaX,EAAOxU,GACpB,OAAUqV,MAMtBnR,MAAO,CAAEK,MAAO,QAAUgR,SAAU,SAACvT,GAE9B6R,EAAU2B,SACTC,aAAa5B,EAAU2B,SAE3B3B,EAAU2B,QAAUE,YAAW,WAC3B/U,EAAS,CACLjB,KAAM,eACNkS,QAAS5P,MAGf,SAGXoQ,QAAQ,SACP,kBAAC,IAAD,CAAQlO,MAAO,CAAEgR,aAAc,QAA/B,SAOhB,CACIvC,MAAO,SACPuB,UAAW,GACXxR,IAAK,IACL4G,OAAQ,SAACiL,EAAMC,EAAQ/R,GACnB,OAAO,6BACH,4BAAQtD,UAAU,uBAAuBwC,QAAS,WAQ9ChB,EAPe,CACXjB,KAAM,yBACNiT,MAAM,eACNvN,UAAW,kBAAC,GAAD,QAUfzE,EAJ0B,CACtBjB,KAAM,eACNiW,iBAAkBnB,MAItB,kBAACoB,GAAA,EAAD,CAAc1R,MAAO,CAAEI,SAAU,OAErC,kBAAC,KAAD,CACIqO,MAAM,uCACNkD,UAAW,WACPlV,EAAS,CAAEjB,KAAM,sBAAuBmS,UAAW2C,EAAOxU,MAG9D8V,OAAO,MACPC,WAAW,MAEX,4BAAQ5W,UAAU,kBACd,kBAAC6W,GAAA,EAAD,CAAgB9R,MAAO,CAAEI,SAAU,YAQ3D,OACI,yBAAKnF,UAAU,uBACX,kDACA,kBAAC,KAAD,CAAO+E,MAAO,CAAEqL,aAAc,KAC1B,kBAAC,IAAD,CAAQ5N,QAnOD,WACfR,EAAS,CACL6S,WAAY,CACRiC,MAAO,UACPC,UAAW,WA+NX,YACA,kBAAC,IAAD,CAAQvU,QA/OC,WACjBR,EAAS,CAAE4S,aAAc,SA8OjB,iBACA,kBAAC,IAAD,CAAQpS,QA5OH,WACbR,EAAS,CACL4S,aAAc,KACdC,WAAY,SAyOR,8BAEJ,kBAAC,KAAD,CAAOC,QAASA,EAASkC,OAAQ,KAAMC,WAAY1C,EAAa5R,SA1PnD,SAACuU,EAAYC,EAASnC,GACvC1S,QAAQC,IAAI,qBAAsB2U,EAAYC,EAASnC,GACvDhT,EAAS,CACL4S,aAAcuC,EACdtC,WAAYG,Q,cC5BT,SAASoC,GAAgB7V,GAAQ,IAAD,EAIsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAMwX,iBAApFC,EAJmC,EAInCA,QAASC,EAJ0B,EAI1BA,uBAAuBC,EAJG,EAIHA,eAAehE,EAJZ,EAIYA,MAEjDhS,EAAWC,cAEjBa,QAAQC,IAAI,UAAW+U,GAGvB,IAIMG,EAAU,WACZjW,EAAS,CAAEjB,KAAM,kBAGrB,OACI,oCAEI,kBAAC,KAAD,CACIiT,MAAOA,EACPpO,MAAO,IACPqS,QAASA,EACTH,QAASA,EACTI,UAAW,CAAEC,cAAe,IAE5BC,OACI,yBACI7S,MAAO,CACH8S,UAAW,UAGf,kBAAC,IAAD,CAAQrV,QAASiV,EAAS1S,MAAO,CAAE+S,YAAa,IAAhD,UAGA,kBAAC,IAAD,CAAQtV,QAASgV,EAAgBjX,KAAK,WAAtC,YAOPgX,I,oBC7CXzE,I,OAAe,CACjB,CAAEjS,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,YAIR,SAASiW,GAAaxW,GAAQ,IAAD,EAERK,mBAASkR,IAFD,mBAEjCpR,EAFiC,KAEvBsW,EAFuB,KAGlCC,EAAUtD,iBAAO,IACjBuD,EAAevD,iBAAO,IAJY,EAMPxO,aAAU,iBAAO,CAAEE,KAAM,CAAE8R,QAAS,IAAM7X,GAAI,CAAE6X,OAAQ,GAAI7R,OAAO,CAACC,SAAS,KAAK6R,OAAM,MANjF,mBAMjClS,EANiC,KAMpBmS,EANoB,KAUlCC,GAVkC,KAUhB,SAACpW,EAAGsK,EAAMlJ,GAC9BhB,QAAQC,IAAIL,EAAEU,QACdN,QAAQC,IAAI,WAEZ0V,EAAQ5B,QAAU7J,IAIhB+L,EAAkB,SAACrW,EAAGsW,EAAelV,GAKvC+U,EAAI,CAACF,OAAO,IACZD,EAAa7B,QAAb,eAA4BmC,GAE5B,IAAIC,EAAc,aAAO/W,GAErBgX,EAAeD,EAAelI,WAAU,SAAA/D,GAAI,OAAIA,EAAK3L,KAAOoX,EAAQ5B,QAAQxV,MAE5E8X,EAAiBF,EAAelI,WAAU,SAAA/D,GAAI,OAAIA,EAAK3L,KAAO2X,EAAc3X,MAG5E+X,EAAOH,EAAeC,GAE1BD,EAAeC,GAAgBD,EAAeE,GAE9CF,EAAeE,GAAkBC,EAIjCZ,EAAYS,IAWhB,OACI,yBAAKzY,UAAU,YAAY6Y,WAAY,SAAC3W,GACpCA,EAAE4W,kBACD5W,EAAEC,kBAEF4W,OAAQ,SAAC7W,GAEV+V,EAAQ5B,QAAU,GAClB/T,QAAQC,IAAI,WACZyV,EAAY,aAAItW,MAGhB,yBAAK1B,UAAU,yBAAf,aACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,qBACV0B,EAAS2B,KAAI,SAACmJ,EAAMlJ,GAEjB,IAAI0V,EAAaxM,EAAK3L,KAAOoX,EAAQ5B,QAAQxV,GAAK,UAAY,GAE9D,OAAI2L,EAAK3L,KAAOqX,EAAa7B,QAAQxV,GAC1B,kBAAC,IAAS2F,IAAV,CACHzB,MAAO,CACHkU,SAAS,WACTd,OAAQjS,EAAYiS,OAAOe,aAAY,SAAAC,GAAS,gBAAOA,EAAP,UAEpDC,YAAa,SAAClX,GAAQoW,EAAgBpW,EAAGsK,IACzC6M,YAAa,SAACnX,GAAQqW,EAAgBrW,EAAGsK,IACzCV,UAAW,SAAC5J,KACZoX,UAAU,OACV/V,IAAKD,EACLtD,UAAS,iCAIRwM,EAAK1K,UAMP,yBACHsX,YAAa,SAAClX,GAAQoW,EAAgBpW,EAAGsK,IACzC6M,YAAa,SAACnX,GAAQqW,EAAgBrW,EAAGsK,IACzCV,UAAW,SAAC5J,KACZoX,UAAU,OACV/V,IAAKD,EACLtD,UAAS,wCAAmCgZ,IAC3CxM,EAAK1K,cAIlB,yBAAK9B,UAAU,mBAAmB+E,MAAO,CAAEC,OAAQ,S,WCpH7D8N,GAAe,CACjB,CAAEjS,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,UACnB,CAAEjB,GAAI,EAAGiB,SAAU,WAIR,SAASyX,GAAKhY,GAAQ,IAAD,EAEAK,mBAASkR,IAFT,mBAEzBpR,EAFyB,KAEfsW,EAFe,KAG1BC,EAAUtD,iBAAO,IACjBuD,EAAevD,iBAAO,IAJI,EAKCxO,aAAU,iBAAO,CAAE7F,GAAI,CAAEkZ,OAAQ,GAAIrB,OAAQ,GAAK9R,KAAM,CAAEmT,OAAQ,EAAGrB,QAAS,IAAM7R,OAAQ,CAAEC,SAAU,KAAO6R,OAAO,MALvH,mBAKzBlS,EALyB,KAKZmS,EALY,KAO1BC,GAP0B,KAOR,SAACpW,EAAGsK,EAAMlJ,GAC9BhB,QAAQC,IAAIL,EAAEU,QACdN,QAAQC,IAAIiK,GAEZyL,EAAQ5B,QAAU7J,IAIhB+L,EAAkB,SAACrW,EAAGsW,EAAelV,GAIvC+U,EAAI,CAAEF,OAAQ,IAGd,IAAIM,EAAc,aAAO/W,GAErBgX,EAAeD,EAAelI,WAAU,SAAA/D,GAAI,OAAIA,EAAK3L,KAAOoX,EAAQ5B,QAAQxV,MAE5E8X,EAAiBF,EAAelI,WAAU,SAAA/D,GAAI,OAAIA,EAAK3L,KAAO2X,EAAc3X,MAG5E+X,EAAOH,EAAeC,GAE1BD,EAAeC,GAAgBD,EAAeE,GAE9CF,EAAeE,GAAkBC,EAEjCV,EAAa7B,QAAUmC,EAEvBR,EAAYS,IAahB,OACI,yBAAKzY,UAAU,YAAY6Y,WAAY,SAAC3W,GACpCA,EAAE4W,kBACF5W,EAAEC,kBAEF4W,OAAQ,SAAC7W,GACL+V,EAAQ5B,QAAU,GAClB2B,EAAY,aAAItW,MAGpB,yBAAK1B,UAAU,yBAAf,aACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,qBACV0B,EAAS2B,KAAI,SAACmJ,EAAMlJ,GAEjB,IAAImW,EAAUjN,EAAK3L,KAAOoX,EAAQ5B,QAAQxV,GAAK,UAAY,GACvD6Y,EAAexB,EAAa7B,QAAQxV,IAAM2L,EAAK3L,GAAK,eAAiB,GACzE,MAAqB,KAAjB6Y,EACO,kBAAC,IAASlT,IAAV,CACHzB,MAAO,CACH4U,UAAWzT,EAAYiS,OAAOe,aAAY,SAAAU,GAAC,gBAAOA,EAAP,SAC3CX,SAAU,WACVd,OAAQjS,EAAYiS,OAAOe,aAAY,SAAAU,GAAC,gBAAOA,EAAP,UAK5CR,YAAa,SAAClX,GAAQoW,EAAgBpW,EAAGsK,IACzC6M,YAAa,SAACnX,GAAQqW,EAAgBrW,EAAGsK,IACzC8M,UAAU,OACVxN,UAAW,SAAC5J,KACZ2X,YAAa,SAAC3X,KACdqB,IAAKD,EACLtD,UAAS,wCAAmCyZ,EAAnC,YAA8CC,IACtDlN,EAAK1K,UAGH,yBAEHsX,YAAa,SAAClX,GAAQoW,EAAgBpW,EAAGsK,IACzC6M,YAAa,SAACnX,GAAQqW,EAAgBrW,EAAGsK,IACzC8M,UAAU,OACVxN,UAAW,SAAC5J,KACZ2X,YAAa,SAAC3X,KAEdqB,IAAKD,EACLtD,UAAS,wCAAmCyZ,EAAnC,YAA8CC,IACtDlN,EAAK1K,cAKtB,yBAAK9B,UAAU,mBAAmB+E,MAAO,CAAEC,OAAQ,S,yBC1GpD,SAAS8U,GAAevY,GAAQ,IAAD,EAEhBK,mBAAS,CAC/BmY,KAAM,CACFlZ,GAAI,OACJmZ,MAAO,CACH,CAAEnZ,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,YAG7BmY,WAAY,CACRpZ,GAAI,aACJmZ,MAAO,CACH,CAAEnZ,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,YAG7BoY,KAAM,CACFrZ,GAAI,OACJmZ,MAAO,CACH,CAAEnZ,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,UACrB,CAAEjB,GAAI,IAAKiB,SAAU,cAxBS,mBAEnCjC,EAFmC,KAE5BmC,EAF4B,KA6D1C,OACI,yBAAKhC,UAAU,aACX,wBAAIA,UAAU,yBAAd,0BAEA,kBAAC,KAAD,CAAiB8L,UApCH,SAAC/C,GAAY,IAC1B2C,EAAsB3C,EAAtB2C,YAAYD,EAAU1C,EAAV0C,OAEjB,GAAIC,IAIDA,EAAYpI,QAAUmI,EAAOnI,OAASoI,EAAYC,cAAgBF,EAAOE,aAA5E,CAKA,IAAIwO,EAAQ,eAAOta,EAAM4L,EAAOE,aAAaqO,MAAMvO,EAAOnI,QAC1DhB,QAAQC,IAAI,WAAW4X,GAGvB,IAAI7W,EAAQzD,EAAM4L,EAAOE,aAAaqO,MAAMzJ,WAAU,SAAApN,GAAI,OAAIA,EAAKtC,IAAMsZ,EAAStZ,MAElFhB,EAAM4L,EAAOE,aAAaqO,MAAMI,OAAO9W,EAAM,GAGvBzD,EAAM6L,EAAYC,aAAaqO,MAErCI,OAAO1O,EAAYpI,MAAO,EAAG6W,GAG7CnY,EAASnC,MAYD,yBAAKG,UAAU,OACVqa,KAAEhX,IAAIxD,GAAO,SAACya,EAAYhX,GACvB,OAAO,kBAAC,KAAD,CAAWqI,YAAa2O,EAAWzZ,GAAI0C,IAAKD,IAC9C,SAAC4I,GACE,OAAO,yBAAKlM,UAAU,SAElB,uCAAKA,UAAU,cACXuD,IAAKD,EACL8I,IAAKF,EAASG,UACVH,EAASI,gBAEb,wBAAItM,UAAU,cAAcsa,EAAWzZ,IACtCyZ,EAAWN,MAAM3W,KAAI,SAACF,EAAMG,GACzB,OAAO,kBAAC,KAAD,CAAWC,IAAKJ,EAAKtC,GAAIyC,MAAOA,EAAOgI,YAAanI,EAAKtC,KAC3D,SAACqL,GACE,OAAO,uCACHE,IAAKF,EAASG,UACVH,EAASQ,eACTR,EAASS,gBAHV,CAIH3M,UAAU,kCACTmD,EAAKrB,gBASrBoK,EAAS9K,uBCzBnCmZ,OAlDf,WAEE,IAAM/W,EAAUgX,cACVhZ,EAAWC,cAMjB,OALAW,qBAAU,WACRZ,EAAS,CAAEjB,KAAM,cAAeiD,QAASA,MACxC,IAID,6BAEE,kBAAC7D,EAAD,MACA,kBAACyX,GAAD,MACA,kBAAC,IAAD,KASE,kBAAC,GAAD,CAAcnP,KAAK,QAAQwS,OAAK,EAACxU,UAAWiC,IAC5C,kBAAC,GAAD,CAAcuS,OAAK,EAACxS,KAAK,WAAWhC,UAAWvC,IAC/C,kBAAC,GAAD,CAAc+W,OAAK,EAACxS,KAAK,SAAShC,UAAW5E,IAC7C,kBAAC,GAAD,CAAcoZ,OAAK,EAACxS,KAAK,YAAYhC,UAAW8R,KAChD,kBAAC,GAAD,CAAmB0C,OAAK,EAACxS,KAAK,SAAShC,UAAWyU,IAClD,kBAAC,GAAD,CAAcD,OAAK,EAACxS,KAAK,cAAchC,UAAW6B,IAClD,kBAAC,GAAD,CAAc2S,OAAK,EAACxS,KAAK,WAAWhC,UAAWsC,IAC/C,kBAAC,GAAD,CAAckS,OAAK,EAACxS,KAAK,eAAehC,UAAW+D,IACnD,kBAAC,GAAD,CAAcyQ,OAAK,EAACxS,KAAK,eAAehC,UAAWwC,IACnD,kBAAC,GAAD,CAAcgS,OAAK,EAACxS,KAAK,iBAAiBhC,UAAW2D,IACrD,kBAAC,GAAD,CAAc6Q,OAAK,EAACxS,KAAK,gBAAgBhC,UAAW3E,IACpD,kBAAC,GAAD,CAAcmZ,OAAK,EAACxS,KAAK,gBAAgBhC,UAAW2B,IACpD,kBAAC,GAAD,CAAc6S,OAAK,EAACxS,KAAK,QAAQhC,UAAWsT,KAC5C,kBAAC,GAAD,CAAckB,OAAK,EAACxS,KAAK,mBAAmBhC,UAAW6T,KACvD,kBAAC,GAAD,CAAmBW,OAAK,EAACxS,KAAK,aAAahC,UAAW0U,KACtD,kBAAC,GAAD,CAAmBF,OAAK,EAACxS,KAAK,iBAAiBhC,UAAW2U,KAC1D,kBAAC,GAAD,CAAmBH,OAAK,EAACxS,KAAK,qBAAqBhC,UAAWqO,KAC9D,kBAAC,GAAD,CAAmBmG,OAAK,EAACxS,KAAK,4BAA4BhC,UAAW0U,KACrE,kBAAC,GAAD,CAAmBF,OAAK,EAACxS,KAAK,IAAIhC,UAAWqO,KAC7C,kBAAC,GAAD,CAAcrM,KAAK,IAAI4S,UAAWxS,OC7DtByS,QACW,cAA7B7V,OAAOuC,SAASuT,UAEe,UAA7B9V,OAAOuC,SAASuT,UAEhB9V,OAAOuC,SAASuT,SAAShT,MACvB,2D,aCdAiT,GAAe,CACjBtZ,SAAS,ICHPsZ,GAAe,CACjBjb,WAAU,GCDRkb,GAAe,CACjBhV,UAAW,qE,qCC6CFiV,GAAkB,IA5C3B,aAAc,yBAIdC,WAAa,WACT,OAAOvS,IAAM,CACTN,IAAI,GAAD,OAAKnJ,UAAL,wBACH0J,OAAQ,SAPH,KAWbuS,WAAa,SAACtZ,GACV,OAAO8G,IAAM,CACTN,IAAI,GAAD,OAAKnJ,UAAL,qBACH0J,OAAQ,OACRG,KAAM,CACFlH,SAASA,MAhBR,KAqBbiI,cAAgB,SAACjI,GACb,OAAO8G,IAAM,CACTN,IAAI,GAAD,OAAKnJ,UAAL,yCAA4C2C,GAC/C+G,OAAQ,YAxBH,KA4BbwS,cAAgB,SAACvZ,GACb,OAAO8G,IAAM,CACTN,IAAI,GAAD,OAAKnJ,UAAL,uCAA0C2C,GAC7C+G,OAAQ,SA/BH,KAmCbU,WAAa,SAACzH,GACV,OAAO8G,IAAM,CACTN,IAAI,GAAD,OAAKnJ,UAAL,yCAA4C2C,GAC/C+G,OAAQ,U,YC3BVyS,I,YA2BOC,I,YASPC,I,YAkBOC,I,YASP1R,I,YAuBO2R,I,YAWPC,I,YAoBOC,I,YAUA/R,I,YAqBAgS,IApJjB,SAAUP,GAAiBQ,GAA3B,2EAEI,OAFJ,SAEUC,aAAI,CACNxb,KClBuB,oBDe/B,OAM+B,OAN/B,kBAMqCyb,aAAKd,GAAgBC,YAN1D,OAOQ,OAPR,SAMcnS,EANd,EAMcA,KAAM5F,EANpB,EAMoBA,OANpB,UAOc6Y,aAAM,KAPpB,WAQY7Y,IAAW7D,eAAYC,QARnC,iBAUY,OAVZ,UAUkBuc,aAAI,CACNxb,KhDzBY,egD0BZmB,SAAUsH,IAZ1B,gCAeY1G,QAAQC,IAAI,SAfxB,0DAmBQD,QAAQC,IAAI,OAnBpB,QAqBI,OArBJ,UAqBUwZ,aAAI,CACNxb,KCpCoB,iBDc5B,uDA2BO,SAAUgb,KAAV,iEACH,OADG,SACGW,ahDtCsB,mBgDsCOZ,IADhC,wCASP,SAAUE,GAAiBM,GAA3B,yEAIiC,OAHrBha,EAAaga,EAAbha,SADZ,kBAIuCka,cAAK,WAAQ,OAAOd,GAAgBE,WAAWtZ,MAJtF,qBAIgBkH,KAJhB,EAIsB5F,SACC7D,eAAYC,QALnC,iBAMY,OANZ,UAMkBuc,aAAI,CACNxb,KhDrDgB,qBgD8ChC,0DAYQ+B,QAAQC,IAAR,MAZR,uDAkBO,SAAUkZ,KAAV,iEACH,OADG,SACGS,ahDhEkB,egDgEOV,IAD5B,wCASP,SAAUzR,GAAc+R,GAAxB,yEAKiC,OAJ7BxZ,QAAQC,IAAIuZ,GACJha,EAAaga,EAAbha,SAFZ,kBAKuCka,cAAK,WAChC,OAAOd,GAAgBnR,cAAcjI,MANjD,qBAKgBkH,KALhB,EAKsB5F,SAIC7D,eAAYC,QATnC,iBAWY,OAXZ,UAWkBuc,aAAI,CACNxb,KhDrFgB,qBgDyEhC,0DAiBQ+B,QAAQC,IAAR,MAjBR,uDAuBO,SAAUmZ,KAAV,iEACH,OADG,SACGQ,ahD9FqB,kBgD8FOnS,IAD/B,wCAWP,SAAU4R,GAAiBG,GAA3B,yEAIiC,OAHrBha,EAAaga,EAAbha,SADZ,kBAIuCka,cAAK,WAChC,OAAOd,GAAgBG,cAAcvZ,MALjD,qBAIgBkH,KAJhB,EAIsB5F,SAGC7D,eAAYC,QAPnC,iBAQY,OARZ,UAQkBuc,aAAI,CACNxb,KhDpHgB,qBgD2GhC,0DAaQ+B,QAAQC,IAAR,MAbR,uDAoBO,SAAUqZ,KAAV,iEACH,OADG,SACGM,ahD9HoB,iBgD8HOP,IAD9B,wCAUA,SAAU9R,GAAciS,GAAxB,yEAIuB,OAHlBha,EAAaga,EAAbha,SADL,kBAI6Bka,cAAM,WAC9B,OAAOd,GAAgB3R,WAAWzH,MALvC,qBAIQkH,KAJR,EAIa5F,SAIE7D,eAAYC,QAR3B,iBASK,OATL,UASWuc,aAAK,CACPxb,KhDnJgB,qBgDyIzB,0DAcC+B,QAAQC,IAAR,MAdD,uDAqBA,SAAUsZ,KAAV,iEACH,OADG,SACGK,ahD3JqB,kBgD2JOrS,IAD/B,wC,IEnKUjB,GAAUxI,EAAQ,IAA3B+b,Q,GAC2B/b,EAAQ,IAAnChB,G,GAAAA,gBAAiBC,G,GAAAA,MAEZ+c,GACQ,SAAC3X,GACf,OAAOmE,GAAM,CACRN,IAAI,GAAD,OAAIlJ,GAAJ,iBACHyJ,OAAO,OACPG,KAAMvE,KALL2X,GAQc,WACnB,OAAOxT,GAAM,CACTN,IAAI,GAAD,OAAIlJ,GAAJ,oBACHyJ,OAAQ,SAXPuT,GAqBoB,SAACrI,GAE1B,OADAzR,QAAQC,IAAI0E,aAAauB,QAAQnJ,KAC1BuJ,GAAM,CACTN,IAAI,GAAD,OAAKlJ,GAAL,mCACHyJ,OAAO,OACPG,KAAK+K,EACLsI,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,QA3B3D+c,GA8BO,WACZ,OAAOxT,GAAM,CACTN,IAAI,GAAD,OAAIlJ,GAAJ,0BACHyJ,OAAO,MACPwT,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,QAlC3D+c,GAqCM,SAACE,GACZ,OAAO1T,GAAM,CACTN,IAAI,GAAD,OAAIlJ,GAAJ,4CAAuDkd,EAAczb,IACxEgI,OAAO,MACPG,KAAKsT,EACLD,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,QC1C3Dkd,GAAb,sCAEIR,IAAM,SAACzT,EAAIkU,GACP,OAAQ5T,IAAM,CACVN,IAAI,GAAD,OAAIlJ,mBAAJ,YAAuBkJ,GAC1BO,OAAO,MACPG,KAAKwT,EACLH,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,cAPxE,KAWIod,KAAO,SAACnU,EAAIkU,GACR,OAAO5T,IAAM,CACTN,IAAI,GAAD,OAAIlJ,mBAAJ,YAAuBkJ,GAC1BO,OAAO,OACPG,KAAKwT,EACLH,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,cAhBxE,KAqBIqd,IAAM,SAACpU,GACH,OAAOM,IAAM,CACTN,IAAI,GAAD,OAAIlJ,mBAAJ,YAAuBkJ,GAC1BO,OAAO,MACPwT,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,cAzBxE,KA6BIsd,OAAS,SAACrU,GACN,OAAOM,IAAM,CACTN,IAAI,GAAD,OAAIlJ,mBAAJ,YAAuBkJ,GAC1BO,OAAO,SACPwT,QAAS,CAAC,cAAiB,UAAYpV,aAAauB,QAAQnJ,eCN3Dud,GAAc,IA5B3B,kDAEI,aAAc,IAAD,8BACT,gBAGJC,QAAU,SAACpK,GAER,OAAO,EAAKiK,IAAL,gCAAkCjK,KAN/B,EAUbqK,kBAAoB,SAAC9G,GACjB,OAAO,EAAKyG,KAAL,4BAAsCzG,IAXpC,EAeb+G,sBAAwB,SAAC/G,GACrB,OAAO,EAAKyG,KAAL,gCAA0CzG,IAhBxC,EAoBbgH,mBAAqB,SAACtK,GAClB,OAAO,EAAKgK,IAAL,6CAA+ChK,KArB7C,EAFjB,UAAiC6J,K,YCWvBU,I,YAqCOC,I,YAQPC,I,YAqBOC,I,YASPC,I,YAiBOC,I,YAUPC,I,YAiBOC,I,YAOPC,I,YA6BOC,IA3JjB,SAAUT,GAAWnB,GAArB,yEAEI,OAFJ,SAEUC,aAAI,CACNxb,KJhBuB,oBIa/B,OAKI,OALJ,SAKU0b,aAAM,KALhB,OASiC,OATjC,kBASuCD,cAAK,kBAAMI,GAAiCN,EAAOrX,cAT1F,OAgBQ,OAhBR,SASgBuE,EAThB,EASgBA,KAThB,EASsB5F,OAGd6D,aAAaC,QAAQ7H,SAAO2J,EAAK6F,QAAQ8O,aACzC1W,aAAaC,QAAQ5H,cAAY6H,KAAKC,UAAU4B,EAAK6F,UAb7D,UAgBckN,aAAI,CACNxb,KhDzBW,UgD0BXkE,UAAWuE,EAAK6F,UAlB5B,QAuBQrL,EAAQG,KAAK,SAvBrB,kDA0BQrB,QAAQC,IAAI,KAAI4G,SAASH,MA1BjC,QA8BI,OA9BJ,UA8BU+S,aAAI,CACNxb,KJ3CoB,iBIY5B,uDAqCO,SAAU2c,KAAV,iEACH,OADG,SACGhB,ahDnDqB,kBgDmDOe,IAD/B,wCAQP,SAAUE,GAAYrB,GAAtB,yEAMiC,OAH7BxZ,QAAQC,IAAI,UAAWuZ,EAAOrJ,SAHlC,kBAMuCuJ,cAAK,kBAAMY,GAAYC,QAAQf,EAAOrJ,YAN7E,OAQQ,OARR,SAMgBzJ,EANhB,EAMgBA,KANhB,EAMsB5F,OANtB,SAQc2Y,aAAI,CACNxb,KAAM,kBACNqd,cAAe5U,EAAK6F,UAVhC,OAYQvM,QAAQC,IAAI,OAAQyG,GAZ5B,kDAeQ1G,QAAQC,IAAI,KAAI4G,SAASH,MAfjC,uDAqBO,SAAUoU,KAAV,iEACH,OADG,SACGlB,aAAW,eAAgBiB,IAD9B,wCASP,SAAUE,GAAmBvB,GAA7B,uEAIiC,OAJjC,kBAIuCE,cAAK,kBAAMY,GAAYE,kBAAkBhB,EAAO9F,gBAJvF,OAMQ,OANR,WAIgBhN,KAJhB,EAIsB5F,OAJtB,SAMc2Y,aAAI,CACNxb,KAAM,0BAPlB,yDAWQ+B,QAAQC,IAAI,KAAI4G,SAASH,MAXjC,uDAiBO,SAAUsU,KAAV,iEACH,OADG,SACGpB,aAAW,uBAAwBmB,IADtC,wCAUP,SAAUE,GAAsBzB,GAAhC,uEAIiC,OAJjC,kBAIuCE,cAAK,kBAAMY,GAAYG,sBAAsBjB,EAAO9F,gBAJ3F,OAMQ,OANR,WAIgBhN,KAJhB,EAIsB5F,OAJtB,SAMc2Y,aAAI,CACNxb,KAAM,0BAPlB,yDAWQ+B,QAAQC,IAAI,KAAI4G,SAASH,MAXjC,uDAiBO,SAAUwU,KAAV,iEACH,OADG,SACGtB,aAAW,0BAA2BqB,IADzC,wCAOP,SAAUE,GAAuB3B,GAAjC,iFAKiC,OAJrBpJ,EAAcoJ,EAAdpJ,UACRpQ,QAAQC,IAAI,SAASmQ,GAFzB,kBAKuCsJ,cAAK,kBAAMY,GAAYI,mBAAmBtK,MALjF,mBAKgB1J,EALhB,EAKgBA,KAAM5F,EALtB,EAKsBA,OACdd,QAAQC,IAAI,YAAYyG,GAEpB5F,IAAW7D,eAAYC,QARnC,iBASY,OATZ,UASkBuc,aAAI,CACNxb,KtBpJsB,yBsBqJtB0R,QAAQjJ,EAAK6F,UAX7B,6DAgBQvM,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAI4G,gBAAhB,aAAY,EAAcH,OACvB,eAAIG,gBAAJ,eAAcH,KAAK6U,cAAete,eAAYE,UAlBzD,iBAmBY,OAnBZ,UAmBkBsc,aAAI,CACNxb,KtB9JsB,yBsB+JtB0R,QAAQ,KArBxB,uDA6BO,SAAUyL,KAAV,iEACH,OADG,SACGxB,atBzKiC,8BsByKOuB,IAD3C,wC,gBCnKGK,I,YA6BOC,IA7BjB,SAAUD,GAA0BhC,GAApC,yEAMiC,OAL7BxZ,QAAQC,IAAI,aAAcuZ,GAD9B,kBAMuCE,cAAK,kBAAMI,QANlD,mBAMgBpT,EANhB,EAMgBA,KANhB,EAMsB5F,SAKC7D,eAAYC,QAXnC,iBAYY,OAZZ,UAYkBuc,aAAI,CACNxb,KjDJwB,2BiDKxByI,KAAMA,EAAK6F,UAd3B,0DAoBQvM,QAAQC,IAAR,MApBR,uDA6BO,SAAUwb,KAAV,iEACH,OADG,SACG7B,ajDxBmC,gCiDwBO4B,IAD7C,wCChCA,IAsBME,GAAiB,IAtB9B,kDAEI,aAAc,IAAD,8BACT,gBAGJC,cAAgB,WACZ,OAAO,EAAKvB,IAAL,0BALE,EAQbwB,cAAgB,SAACrd,GAEd,OAAO,EAAK8b,OAAL,0CAA+C9b,KAV5C,EAabsd,iBAAmB,SAAC5S,GAChB,OAAO,EAAKmR,IAAL,sCAAwCnR,KAdtC,EAFjB,UAAoCgR,K,UCAvB6B,GAAiB,SAAC7d,EAAMgH,GAA+B,IAAtBgG,EAAqB,uDAAP,GACxD8Q,KAAa9d,GAAM,CACfgH,QAASA,EACTgG,YAAaA,K,YCIX+Q,I,YAkCOC,I,YAUPC,I,YAsBOC,I,YAKPC,I,YAoCOC,I,YAQPC,I,YAuCOC,I,YAOPC,I,YA6BOC,I,YAMPC,I,YAkCOC,IAtOjB,SAAUX,GAAkBxC,GAA5B,yEAII,OAFAxZ,QAAQC,IAAI,sBAAsBuZ,GAFtC,SAIUC,aAAI,CACNxb,KRduB,oBQS/B,OAOI,OAPJ,SAOU0b,aAAO,KAPjB,OAYiC,OAZjC,kBAYuCD,cAAK,kBAAMI,GAA4CN,EAAO/H,eAZrG,gBAYgB/K,EAZhB,EAYgBA,KAZhB,EAYsB5F,SAEC7D,eAAYC,UACvB8C,QAAQC,IAAIyG,GAEZxF,EAAQG,KAAK,uBAjBzB,kDAsBQrB,QAAQC,IAAR,MAtBR,QAyBI,OAzBJ,UAyBUwZ,aAAI,CACNxb,KRlCoB,iBQQ5B,uDAkCO,SAAUge,KAAV,iEACH,OADG,SACGrC,aAAW,sBAAuBoC,IADrC,wCAUP,SAAUE,GAAmB1C,GAA7B,yEAG8B,OAH9B,kBAGoCE,cAAM,kBAAMI,QAHhD,mBAGepT,EAHf,EAGeA,KAHf,EAGoB5F,SAGE7D,eAAYC,QANlC,gBAOY,OAPZ,SAOkBuc,aAAI,CACNxb,KAAK,mBACLgU,YAAYvL,EAAK6F,UATjC,yDAgBQvM,QAAQC,IAAR,MAhBR,uDAsBO,SAAUkc,KAAV,iEACH,OADG,SACGvC,aAAW,wBAAyBsC,IADvC,wCAKP,SAAUE,GAAkB5C,GAA5B,yEAII,OAJJ,SAIUC,aAAI,CACNxb,KRrFuB,oBQgF/B,OAOI,OAPJ,SAOU0b,aAAO,KAPjB,OAYiC,OAZjC,kBAYuCD,cAAK,kBAAMI,GAA+BN,EAAO1H,iBAZxF,OAsBQ,OAtBR,SAYgBpL,EAZhB,EAYgBA,KAZhB,EAYsB5F,SAEC7D,eAAYC,SACvB8C,QAAQC,IAAIyG,GAfxB,UAsBcgT,aAAKwC,IAtBnB,QAuBQ,OAvBR,UAuBczC,aAAI,CACNxb,KAAK,iBAxBjB,0DA2BQ+B,QAAQC,IAAR,MA3BR,QA8BI,OA9BJ,UA8BUwZ,aAAI,CACNxb,KR9GoB,iBQ+E5B,uDAoCO,SAAUoe,KAAV,iEACH,OADG,SACGzC,aAAW,sBAAuBwC,IADrC,wCAQP,SAAUE,GAAkB9C,GAA5B,yEAII,OAJJ,SAIUC,aAAI,CACNxb,KRjIuB,oBQ4H/B,OAOI,OAPJ,SAOU0b,aAAO,KAPjB,OAUiC,OAVjC,kBAUuCD,cAAK,kBAAMgC,GAAeE,cAAcpC,EAAOpJ,cAVtF,OAwBQ,OAxBR,SAUgB1J,EAVhB,EAUgBA,KAVhB,EAUsB5F,SAEC7D,eAAYC,SACvB8C,QAAQC,IAAIyG,GAEZoV,GAAe,UAAU,kCAIzBA,GAAe,QAAQ,yBAnBnC,UAwBcpC,aAAKwC,IAxBnB,QAyBQ,OAzBR,UAyBczC,aAAI,CACNxb,KAAK,iBA1BjB,0DA6BQ6d,GAAe,QAAQ,yBACvB9b,QAAQC,IAAR,MA9BR,QAiCI,OAjCJ,UAiCUwZ,aAAI,CACNxb,KR7JoB,iBQ2H5B,uDAuCO,SAAUse,KAAV,iEACH,OADG,SACG3C,aAAW,sBAAuB0C,IADrC,wCAOP,SAAUE,GAAqBhD,GAA/B,yEAOI,OAPJ,SAOUG,aAAO,KAPjB,OAUiC,OAVjC,kBAUuCD,cAAK,kBAAMgC,GAAeG,iBAAiBrC,EAAOvQ,cAVzF,OAcQ,OAdR,SAUgBvC,EAVhB,EAUgBA,KAVhB,EAUsB5F,OAEdd,QAAQC,IAAI,OAAOyG,GAZ3B,UAcc+S,aAAI,CACNxb,KAAK,qBACL4K,cAAcnC,EAAK6F,UAhB/B,0DAoBQvM,QAAQC,IAAI,mBACZiB,EAAQG,KAAK,sBArBrB,uDA6BO,SAAUob,KAAV,iEACH,OADG,SACG7C,aAAW,qBAAsB4C,IADpC,wCAMP,SAAUE,GAAkBlD,GAA5B,yEAII,OAJJ,SAIUC,aAAI,CACNxb,KRlNuB,oBQ6M/B,OAOI,OAPJ,SAOU0b,aAAO,KAPjB,OAUiC,OAVjC,kBAUuCD,cAAK,kBAAMgC,GAAeC,mBAVjE,OAcQ,OAdR,SAUgBjV,EAVhB,EAUgBA,KAVhB,EAUsB5F,OAVtB,UAcc2Y,aAAI,CACNxb,K3B5NmB,kB2B6NnBsR,WAAW7I,EAAK6F,UAhB5B,QAmBQ,OAnBR,UAmBckN,aAAI,CACNxb,K1BjO+B,8B0BkO/BmS,UAAU1J,EAAK6F,QAAQ,GAAGhO,KArBtC,0DAyBQyB,QAAQC,IAAI,mBACZiB,EAAQG,KAAK,sBA1BrB,QA6BI,OA7BJ,UA6BUoY,aAAI,CACNxb,KR1OoB,iBQ4M5B,uDAkCO,SAAU0e,KAAV,iEACH,OADG,SACG/C,a3B/O0B,uB2B+OO8C,IADpC,wCC7OA,IAYME,GAAkB,IAZ/B,kDAEI,aAAc,IAAD,8BACT,gBAEJC,eAAiB,WACb,OAAO,EAAKzC,IAAI,oBAJP,EAFjB,UAAqCH,K,YCE1B6C,I,YAqBOC,IArBlB,SAAWD,GAAoBtD,GAA/B,yEAG8B,OAH9B,kBAGoCE,cAAK,kBAAKkD,GAAgBC,oBAH9D,OAKQ,OALR,SAGenW,EAHf,EAGeA,KAHf,EAGoB5F,OAHpB,SAKc2Y,aAAI,CACNxb,K/BVqB,oB+BWrB+N,YAAYtF,EAAK6F,UAP7B,yDAaQvM,QAAQC,IAAR,MAbR,uDAqBO,SAAW8c,KAAX,iEACH,OADG,SACGnD,a/BzB4B,yB+ByBMkD,IADrC,wCCvBA,IAeME,GAAkB,IAf/B,kDAEI,aAAc,IAAD,8BACT,gBAGJC,eAAiB,WACb,OAAO,EAAK7C,IAAL,oBALE,EAFjB,UAAqCH,K,YCE1BiD,I,YAcOC,IAdlB,SAAWD,GAAmB1D,GAA9B,yEAE8B,OAF9B,kBAEoCE,cAAK,kBAAKsD,GAAgBC,oBAF9D,OAIQ,OAJR,SAEevW,EAFf,EAEeA,KAFf,EAEoB5F,OAFpB,SAIc2Y,aAAI,CAACxb,KlCRa,mBkCQS6N,YAAYpF,EAAK6F,UAJ1D,yDAQQvM,QAAQC,IAAR,MARR,uDAcO,SAAWkd,KAAX,iEACH,OADG,SACGvD,alClB2B,wBkCkBMsD,IADpC,wCChBA,IAuBME,GAAc,IAvB3B,kDAEI,aAAc,IAAD,8BACT,gBAEJC,WAAa,SAAC5N,GACV,OAAO,EAAK0K,KAAK,qBAAqB1K,IAJ7B,EAQb6N,cAAgB,SAACpU,GACb,OAAO,EAAKkR,IAAL,uCAAyClR,KATvC,EAYbqU,iBAAmB,SAACC,GAChB,OAAO,EAAK/D,IAAL,uBAAgC+D,IAb9B,EAebC,WAAa,SAACC,GACV,OAAO,EAAKvD,KAAL,qBAA+BuD,IAhB7B,EAFjB,UAAiCzD,K,YCIvB0D,I,YA4BOC,I,YAOPC,I,YAwBOC,I,YAQPC,I,YAgCOC,I,YAOPC,I,YAOOC,I,YAOAC,I,YA+DAC,IAvLjB,SAAUT,GAAenE,GAAzB,yEAGQ,OAHR,kBAGcC,aAAI,CACNxb,KdVmB,oBcM/B,OAMiC,OANjC,SAMuCyb,cAAK,kBAAM0D,GAAYC,WAAW7D,EAAO/J,eANhF,OAaQ,OAbR,SAMgB/I,EANhB,EAMgBA,KANhB,EAMsB5F,SAGC7D,eAAYC,SACvB8C,QAAQC,IAAIyG,GAVxB,UAac+S,aAAI,CACNxb,KAAM,iBAdlB,QAgBQ6d,GAAe,UAAW,8BAhBlC,kDAmBQ9b,QAAQC,IAAI,KAAI4G,SAASH,MAnBjC,QAsBI,OAtBJ,UAsBU+S,aAAI,CACNxb,Kd5BoB,iBcK5B,uDA4BO,SAAU2f,KAAV,iEACH,OADG,SACGhE,aAAW,mBAAoB+D,IADlC,wCAOP,SAAUE,GAAkBrE,GAA5B,6EAKiC,OAHrBtQ,EAAWsQ,EAAXtQ,OAFZ,kBAKuCwQ,cAAK,kBAAM0D,GAAYE,cAAcpU,MAL5E,OAOQ,OAPR,SAKgBxC,EALhB,EAKgBA,KALhB,EAKsB5F,OALtB,SAOc2Y,aAAI,CACNxb,K1ChDmB,kB0CiDnByN,gBAAiBhF,EAAK6F,UATlC,yDAcQvM,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAI4G,gBAAhB,aAAY,EAAcH,MAflC,uDAwBO,SAAUoX,GAAyBtE,GAAnC,iEAEH,OAFG,SAEGI,a1CnE0B,uB0CmEOiE,IAFpC,wCAQP,SAAUE,GAAqBvE,GAA/B,2EAOiC,OALrBlQ,EAAqBkQ,EAArBlQ,iBACRtJ,QAAQC,IAAIuZ,GAHhB,kBAOuCE,cAAK,kBAAM0D,GAAYG,iBAAiBjU,MAP/E,qBAOgB5C,KAPhB,EAOsB5F,QAIA7D,eAAYC,QAXlC,iBAYY,OAZZ,UAYkBuc,aAAI,CACNxb,KAAM,qBACNgL,UAAWK,EAAiBL,YAd5C,QAiBY,OAjBZ,UAiBkBwQ,aAAI,CACNxb,K1C3FoB,uB0C4FpBiL,OAAQI,EAAiBJ,SAnBzC,0DA0BQlJ,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAI4G,gBAAhB,aAAY,EAAcH,MA3BlC,uDAgCO,SAAUsX,KAAV,iEACH,OADG,SACGpE,a1ClG6B,0B0CkGOmE,IADvC,wCAOP,SAAUE,GAAezE,GAAzB,kGAOO,SAAU0E,KAAV,iEACH,OADG,SACGtE,a1C7GsB,mB0C6GOqE,IADhC,wCAOA,SAAUE,GAAoB3E,GAA9B,gGAGKA,EAAO/M,WAHZ,O1C1H0B,sB0C0H1B,O1CzHyB,qB0CyHzB,O1CxH2B,uB0CwH3B,wBAOK,OAFQlM,EAAgBiZ,EAAhBjZ,MAAOH,EAASoZ,EAATpZ,KALpB,SAOWqZ,aAAI,CACNxb,K1ClIiB,oB0CmIjBmC,OACAG,UAVT,0CAeK,OADQ+N,EAAiBkL,EAAjBlL,aAdb,UAeWmL,aAAI,CACNxb,K1CzIgB,mB0C0IhBqQ,iBAjBT,4CAuBK,OADQP,EAAWyL,EAAXzL,OAtBb,UAuBW0L,aAAI,CACNxb,K1ChJkB,qB0CiJlB8P,WAzBT,4CAgCuB,OAhCvB,UAgC6BsQ,cAAO,SAAA9gB,GAAK,OAAIA,EAAMoO,eAhCnD,QA2C0B,OA3C1B,SAgCGD,EAhCH,EAgCGA,gBACN1L,QAAQC,IAAI,6CAAoCyL,GAG1C8D,EApCH,UAoCmB9D,EAAgBlB,iBApCnC,aAoCmB,EAA2BzJ,KAAI,SAACoK,EAAMnK,GACxD,OAAOmK,EAAK5M,MAIV+f,EAzCH,2BAyCwB5S,GAzCxB,IAyCyC8D,kBAzCzC,oBA2CgCkK,cAAK,kBAAM0D,GAAYK,WAAWa,MA3ClE,sBA2CS5X,KA3CT,EA2Ce5F,SAEC7D,eAAYC,QA7C5B,iBA8CK,OA9CL,UA8CWuc,aAAI,CACNxb,KAAM,qBACNgL,UAAWqV,EAAcrV,YAhDlC,QAmDK,OAnDL,UAmDWwQ,aAAI,CACNxb,K1ClLoB,uB0CmLpBiL,OAAQoV,EAAcpV,SArD/B,2DAyDClJ,QAAQC,IAAR,UAAY,KAAI4G,gBAAhB,aAAY,EAAcH,MAC1B1G,QAAQC,IAAR,MA1DD,wDA+DA,SAAUme,KAAV,iEACH,OADG,SACGxE,a1ClLiC,8B0CkLOuE,IAD3C,wCC3LA,IAaMI,GAAgB,IAb7B,kDAEI,aAAc,IAAD,8BACT,gBAGJC,aAAe,WACX,OAAO,EAAKpE,IAAL,kBALE,EAFjB,UAAmCH,K,YCExBwE,I,YAoBMC,IApBjB,SAAWD,GAAkBjF,GAA7B,2EAG8B,OAH9B,kBAGoCE,cAAK,kBAAK6E,GAAcC,kBAH5D,OAKQ,OALR,SAGe9X,EAHf,EAGeA,KAHf,EAGoB5F,OAHpB,SAKc2Y,aAAI,CACNxb,KxCTkB,iBwCUlB2N,UAAUlF,EAAK6F,UAP3B,yDAYQvM,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAI4G,gBAAhB,aAAY,EAAcH,MAblC,uDAoBO,SAAUgY,KAAV,iEAEH,OAFG,SAEG9E,axC1ByB,sBwC0BO6E,IAFnC,wC,gBCVUE,IAAV,SAAUA,KAAV,iEAEL,OAFK,SAECC,aAAI,CAERC,KACAA,KACAA,KACAA,KACAA,KAGAC,KACAA,KACAA,KACAA,KACAA,KACAC,KACAC,KACAA,KACAA,KACAA,KACAA,KACAA,KACAC,KAEAC,KACAC,KAEAC,KACAA,KACAA,KACAA,KACAA,OAhCG,wCCXP,IAAMC,GAAe,CACjBne,QAAQ,ICDJlE,GAAec,EAAQ,IAAvBd,WAEJsiB,GAAU,GAEX3a,aAAauB,QAAQlJ,MACpBsiB,GAAUza,KAAKkE,MAAMpE,aAAauB,QAAQlJ,MAM9C,IAAM2b,GAAgB,CAClBxW,UAAYmd,GACZpN,WAAY,GACZvC,QAAQ,ICdNgJ,GAAe,CACjBnH,mBAAqB,ICDnBmH,GAAe,CACjB1G,YAAa,GACb1C,WAAY,ICJVmJ,GAAe,CACjB1D,SAAS,EACT9D,MAAM,GACN+D,uBAAwB,sCACxBC,eAAgB,SAACqK,GAAiBxa,MAAM,iBCJtC2T,GAAe,CACjB7G,YAAa,CACT,GAAM,EACN,YAAe,SACf,QAAW,EACX,YAAe,SACf,WAAc,KAElBhJ,cAAc,ICPZ6P,GAAe,CACjB1M,YAAa,ICDX0M,GAAe,CACjB5M,YAAc,ICDZ4M,GAAe,CACjB9M,UAAU,ICDR8M,GAAe,CACjBhN,gBAAkB,CAChB,aAAgB,CACd,WAAc,EACd,SAAY,QAEd,eAAkB,CAChB,GAAM,EACN,SAAY,OAEd,UAAa,CACX,CACE,GAAM,GACN,OAAU,6CACV,KAAQ,YACR,MAAS,QAEX,CACE,GAAM,GACN,OAAU,wCACV,KAAQ,OACR,MAAS,SAGb,WAAc,GACd,OAAU,GACV,SAAY,SACZ,MAAS,SACT,YAAe,skBACf,SAAY,IACZ,iBAAoB,GACpB,kBAAqB,GACrB,sBAAyB,GACzB,OAAU,EACV,WAAc,EACd,UAAa,MChBb8T,GAAiBC,eACjBC,GAAcC,aAAgB,CAEhCtgB,gBjChBW,WAAmC,IAAlC9B,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC7C,OAAQA,EAAOvb,MAEf,I5CVwB,e4CYpB,OADAV,EAAM6B,SAAWoa,EAAOpa,SACjB,eAAK7B,GAEhB,QACI,OAAOA,IiCSXC,ehCnBW,WAAmC,IAAlCD,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC7C,OAAQA,EAAOvb,MAEf,IIT2B,kBJWvB,OADAV,EAAME,WAAY,EACX,eAAKF,GAChB,IIXwB,eJapB,OADAA,EAAME,WAAU,EACT,eAAIF,GAEf,QACI,OAAOA,IgCSXqiB,a/BnBwB,WAAkC,IAAjCriB,EAAgC,uDAAxBob,GAAaa,EAAW,uCACzD,OAAOA,EAAOvb,MACV,IAAK,YAED,OADAV,EAAMoG,UAAY6V,EAAO7V,UAClB,eAAIpG,GAIf,QAAU,OAAO,eAAIA,K+BYzBsiB,eVlB0B,WAAkC,IAAjCtiB,EAAgC,uDAAxB8hB,GAAa7F,EAAW,uCAC3D,OAAOA,EAAOvb,MACV,IAAK,cAGD,OAFAV,EAAM2D,QAAUsY,EAAOtY,QACvBlB,QAAQC,IAAI1C,EAAM2D,SACX,eAAI3D,GAEf,QAAS,OAAO,eAAIA,KUYxBsI,0BTLqC,WAAkC,IAAjCtI,EAAgC,uDAAxBob,GAAaa,EAAW,uCACtE,OAAOA,EAAOvb,MACV,I/DpBe,U+DsBX,OADAV,EAAM4E,UAAYqX,EAAOrX,UAClB,eAAI5E,GAGf,IAAK,kBAGD,OAFAA,EAAM2U,WAAasH,EAAO8B,cAC1Btb,QAAQC,IAAI,YAAY1C,GACjB,eAAIA,GAEf,IrClC8B,yBqCmC1B,OAAO,2BAAKA,GAAZ,IAAkBoS,QAAQ6J,EAAO7J,UAGrC,QAAU,OAAO,eAAIpS,KSVzBmU,uBRnBkC,WAAkC,IAAjCnU,EAAgC,uDAAxBob,GAAaa,EAAW,uCACnE,OAAOA,EAAOvb,MAEV,IhECgC,2BgEC5B,OADAV,EAAMiU,mBAAqBgI,EAAO9S,KAC3B,eAAInJ,GAIf,QAAU,OAAO,eAAIA,KQWzBmS,wBPlBmC,WAAkC,IAAjCnS,EAAgC,uDAAxBob,GAAaa,EAAW,uCAGpE,OAAOA,EAAOvb,MAEV,IAAK,mBAGG,OAFAV,EAAM0U,YAAcuH,EAAOvH,YAC3BjS,QAAQC,IAAI,cAAcuZ,EAAOvH,aAC1B,eAAI1U,GAGnB,IxCvBuB,kBwCyBnB,OAAO,2BAAIA,GAAX,IAAiBgS,WAAWiK,EAAOjK,aAGvC,QAAS,OAAO,eAAIhS,KOGxBwX,cNvByB,WAAmC,IAAlCxX,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC3D,OAAQA,EAAOvb,MAEX,IAAK,cACD,OAAO,2BAAKV,GAAZ,IAAmByX,SAAS,IAChC,IAAK,eACD,OAAO,2BAAKzX,GAAZ,IAAmByX,SAAS,IAChC,IAAK,yBAID,OAHAzX,EAAMyX,SAAU,EAChBzX,EAAM0X,uBAAyBuE,EAAO7V,UACtCpG,EAAM2T,MAAQsI,EAAOtI,MACd,eAAK3T,GAGhB,IAAK,0BAED,OADAA,EAAM2X,eAAiBsE,EAAOtJ,eACvB,eAAI3S,GAGf,IAAK,yBACD,OAAO,2BAAIA,GAAX,IAAiB2X,eAAesE,EAAOtJ,iBAG3C,IAAK,wBAID,OAHA3S,EAAMyX,SAAU,EAChBzX,EAAM2T,MAAQsI,EAAOtI,MACrB3T,EAAM0X,uBAAyBuE,EAAO7V,UAC/B,eAAIpG,GAMf,QACI,OAAOA,IMVf2O,eLlB2B,WAAoC,IAAnC3O,EAAkC,uDAA1Bmb,GAAec,EAAW,uCAC9D,OAAQA,EAAOvb,MAEf,IAAM,eAEF,OADAV,EAAMsU,YAAc2H,EAAOtF,iBACpB,eAAI3W,GAGf,IAAK,qBAED,OADAA,EAAMsL,cAAgB2Q,EAAO3Q,cACtB,eAAItL,GAGf,QACI,OAAOA,IKKX0O,gBJ3B2B,WAAmC,IAAlC1O,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC7D,OAAQA,EAAOvb,MAEf,I7CT6B,oB6CUzB,OAAO,2BAAKV,GAAZ,IAAmByO,YAAYwN,EAAOxN,cAE1C,QACI,OAAOzO,IIqBXwO,gBH5B2B,WAAmC,IAAlCxO,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC7D,OAAQA,EAAOvb,MAEf,I/CT4B,mB+CUxB,OAAO,2BAAKV,GAAZ,IAAkBuO,YAAY0N,EAAO1N,cAEzC,QACI,OAAOvO,IGsBXsO,cF7ByB,WAAmC,IAAlCtO,EAAiC,uDAAzBmb,GAAcc,EAAW,uCAC3D,OAAQA,EAAOvb,MAEf,IlDR0B,iBkDWtB,OAAO,2BAAKV,GAAZ,IAAkBqO,UAAW4N,EAAO5N,YAExC,QACI,OAAOrO,IEqBXoO,YDQuB,WAAkC,IAAjCpO,EAAgC,uDAAxBmb,GAAac,EAAW,uCACxD,OAAQA,EAAOvb,MAEf,IvD9C2B,kBuDgDvB,OADA+B,QAAQC,IAAIuZ,EAAO9N,iBACZ,2BAAInO,GAAX,IAAiBmO,gBAAgB8N,EAAO9N,kBAE5C,IvD/C6B,oBuD+CJ,IAChBtL,EAAcoZ,EAAdpZ,KAAKG,EAASiZ,EAATjZ,MAGZ,OAFAP,QAAQC,IAAI,QAAQM,GAEb,2BAAIhD,GAAX,IAAiBmO,gBAAgB,2BAAKnO,EAAMmO,iBAAZ,kBAA6BtL,EAAMG,MAGrE,IvDrD4B,mBuDyD1B,OAFAhD,EAAMmO,gBAAgBlB,UAAtB,uBAAsCjN,EAAMmO,gBAAgBlB,WAA5D,CAAsEgP,EAAOlL,eAEtE,eAAI/Q,GAGb,IvD3D8B,qBuD8D5B,OADAA,EAAMmO,gBAAgBlB,UAAtB,aAAsCjN,EAAMmO,gBAAgBlB,UAAU5J,QAAO,SAAAsN,GAAE,OAAIA,EAAG3P,KAAOib,EAAOzL,WAC7F,eAAIxQ,GAEb,QACI,OAAOA,MChCTuiB,GAAQC,aAAYL,GAAYM,aAAgBC,KAAWT,KAGjEA,GAAeU,IAAIvB,IAGJmB,U,OChCfK,IAAStY,OACP,kBAAC,IAAD,CAAQ3G,QAASA,GACf,kBAAC,IAAD,CAAU4e,MAAOA,IACf,kBAAC,GAAD,QAKJM,SAASC,eAAe,SnC8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBha,MAAK,SAAAia,GACJA,EAAaC,gBAEd/Z,OAAM,SAAAga,GACL3gB,QAAQ2gB,MAAMA,EAAM1b,c","file":"static/js/main.22502e20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","export const DOMAIN = 'http://svcy.myclass.vn/api';\n\nexport const DOMAIN_CYBERBUG = 'http://casestudy.cyberlearn.vn/api/';\n\nexport const TOKEN = 'ACCESSTOKEN';\nexport const USER_LOGIN = 'USER_LOGIN';\n\nexport const STATUS_CODE = {\n    SUCCESS : 200,\n    NOT_FOUND: 404,\n    SERVER_ERROR:500\n}\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/download (1).e96d3ef9.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__2Vf8w\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","import React from 'react'\nimport styleLoading from './LoadingComponent.module.css';\nimport { useSelector } from 'react-redux'\n\nexport default function LoadingComponent() {\n\n    const { isLoading } = useSelector(state => state.LoadingReducer)\n\n    if (isLoading) {\n        return (\n            <div className={styleLoading.bgLoading}>\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\n            </div>\n        )\n    } else {\n        return ''\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/dragdrop\">DemoDragDrop</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demo\">Demo</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demodragdropdnd\">Drag Drop DnD</NavLink>\n                            \n                            \n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nimport {useDispatch,useSelector} from 'react-redux';\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function BaiTapToDoListSaga(props) {\n\n    const dispatch = useDispatch(); \n    const {taskList} = useSelector(state => state.ToDoListReducer)\n\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        //Dispatch action saga\n        dispatch({\n            type:GET_TASKLIST_API,\n           \n        })\n    }\n\n    const addTask = (e) => {\n        e.preventDefault();\n        dispatch({\n            type:ADD_TASK_API,\n            taskName: state.values.taskName\n        })\n    }\n\n    useEffect(() => {\n        //Gọi hàm getTaskList\n        getTaskList();\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch({\n            type:REJECT_TASK_API,\n            taskName\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n      dispatch({\n          type:CHECK_TASK_API,\n          taskName\n      })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        console.log(taskName)\n        dispatch({\n            type:DELETE_TASK_API,\n            taskName:taskName\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <button className=\"btn btn-success\" onClick={()=>{\n                dispatch({\n                    type:'getTaskApiAction'\n                })\n            }}>Dispatch action saga getTaskAPI</button>\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","//-----------action----------\nexport const GET_TASK_API = 'GET_TASK_API';\n\n//---------------saga--------------\n\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\nexport const ADD_TASK_API = 'ADD_TASK_API';\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React from 'react'\nimport { history } from '../../util/history'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n          <button onClick={()=>{history.push('/demohocmodal')}}>123</button>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button, Input } from 'antd';\nimport { UserOutlined, LockOutlined, FacebookOutlined,TwitterOutlined } from '@ant-design/icons';\nimport {withFormik,Formik} from 'formik'\nimport * as Yup from 'yup';\nimport {connect} from 'react-redux';\nimport { USER_SIGNIN_API } from '../../../redux/constants/Cyberbugs/Cyberbugs';\nimport { singinCyberbugAction } from '../../../redux/actions/CyberBugsActions';\nfunction LoginCyberBugs(props) {\n\n\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className=\"container\" style={{ height: window.innerHeight }} >\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\n                <h3 className=\"text-center\" style={{fontWeight:300,fontSize:35}}>Login cyberbugs</h3>\n                <div className=\"d-flex mt-3\" >\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />     \n                </div> \n                <div className=\"text-danger\">{errors.email}</div>\n                <div className=\"d-flex mt-3\">\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"password\" name=\"password\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\n                </div>\n                <div className=\"text-danger\">{errors.password}</div>\n\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Login</Button>\n\n \n                <div className=\"social mt-3 d-flex\">\n                    <Button style={{backgroundColor:'rgb(59,89,152)'}}  shape=\"circle\" size={\"large\"}>\n                        <span className=\"font-weight-bold\" style={{color:'#fff'}} >F</span>\n                    </Button>\n                    <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\n\n                    </Button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nconst LoginCyberBugsWithFormik =  withFormik({\n    mapPropsToValues: () => ({\n        email: '', \n        password:''\n    }),\n    validationSchema: Yup.object().shape({\n        email:Yup.string().required('Email is required!').email('email is invalid!'),\n        password:Yup.string().min(6,'password must have min 6 characters').max(32,'password  have max 32 characters')\n\n    }),\n    handleSubmit: ({email,password}, {props, setSubmitting }) => {\n\n        // let action = {\n        //     type:USER_SIGNIN_API,\n        //     userLogin: {\n        //         email:values.email,\n        //         password:values.password\n        //     }\n        // }\n\n        setSubmitting(true);\n        props.dispatch(singinCyberbugAction(email,password));\n        \n        // console.log(props)\n        // console.log(values);\n\n    },\n    displayName: 'LoginCyberBugs',\n  })(LoginCyberBugs);\n\n\n\n\nexport default connect ()(LoginCyberBugsWithFormik);","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\"\n\n\n\nexport const singinCyberbugAction = (email, password) => {\n    return {\n        type: USER_SIGNIN_API,\n        userLogin: {\n            email: email,\n            password: password\n        }\n    }\n}","export const USER_SIGNIN_API = 'USER_SIGNIN_API';\n\n\n\n//------------------login ------\nexport const USLOGIN = 'USLOGIN';\n\n\n//-------------get project category ---------\n\n\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = 'GET_ALL_PROJECT_CATEGORY_SAGA';\n\n\nexport const GET_ALL_PROJECT_CATEGORY = 'GET_ALL_PROJECT_CATEGORY';","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function SlideDown(Component) {\n\n    const propsSpring = useSpring({\n        to: {\n            marginTop: '0'\n        }, from: {\n            marginTop: '-100px'\n\n        },config: {\n            duration:500\n        }\n    })\n\n\n    return (\n        <div>\n            <animated.div style={propsSpring}>\n                <Component />\n            </animated.div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function Register() {\n    return (\n        <form>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputEmail4\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword4\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress\">Address</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress2\">Address 2</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputCity\">City</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"inputState\">State</label>\n                    <select id=\"inputState\" className=\"form-control\">\n                        <option selected>Choose...</option>\n                        <option>...</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-2\">\n                    <label htmlFor=\"inputZip\">Zip</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                        Check me out\n      </label>\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n        </form>\n\n    )\n}\n","import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport SlideDown from '../../HOC/Modal/SlideDown';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\n\n\n\n\nexport default function DemoHOCModal() {\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {/* Button trigger modal */}\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component: <Login />\n                })\n\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng nhập\n            </button>\n\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component:<Register />\n                })\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng ký\n            </button>\n\n            <LoginWithSlideDown />\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function Home(props) {\n    const userLogin = useSelector(state => state.UserLoginCyberBugsReducer.userLogin)\n    return (\n        <div>\n            {userLogin?.name}\n            <img src={userLogin?.avatar} />\n        </div>\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport style from './Todolist.css'\n\nexport default class Todolist extends Component {\n\n    state = {\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    }\n\n    getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            this.setState({\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    renderTaskToDo = () => {\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\n                        this.checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    \n    renderTaskToDoDone = () => {\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\n                        this.rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    //Xử lý reject task\n    rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n    checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            this.getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\n    componentDidMount() {\n        this.getTaskList();\n    }\n\n\n    handleChange = (e) => {\n        let { value, name } = e.target;\n        console.log(value, name);\n        let newValues = { ...this.state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...this.state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        this.setState({\n            ...this.state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n    addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(this.state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: this.state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            this.getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.addTask}>\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n                <div className=\"card\">\n                    <div className=\"card__header\">\n                        <img src={require('./bg.png')} />\n                    </div>\n                    {/* <h2>hello!</h2> */}\n                    <div className=\"card__body\">\n                        <div className=\"card__content\">\n                            <div className=\"form-group\">\n                                <div className=\"card__title\">\n                                    <h2>My Tasks</h2>\n                                    <p>September 9,2020</p>\n                                </div>\n                                <div className=\"card__add\">\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\n\n                                    <button id=\"addItem\" onClick={this.addTask}>\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\n                            </div>\n\n                            <div className=\"card__todo form-group\">\n                                {/* Uncompleted tasks */}\n                                <ul className=\"todo\" id=\"todo\">\n                                    {this.renderTaskToDo()}\n                                </ul>\n                                {/* Completed tasks */}\n                                <ul className=\"todo\" id=\"completed\">\n                                    {this.renderTaskToDoDone()}\n\n                                    {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import Axios from \"axios\";\nimport Profile from \"../../pages/Profile/Profile\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\n\n\n//Action có 2 loại\n//Action thực thi ngay làm thay đổi reducer (action 1)\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\n\nexport const getTaskListApi = () => {\n\n    //Tiền xử lý dữ liệu => xử lý function \n    return async dispatch => {\n\n        try {\n            let { data, status, ...res } = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n                method: 'GET'\n            });\n            if (status === 200) {\n                dispatch({\n                    type: GET_TASK_API,\n                    taskList: data\n                })\n            }\n        } catch (err) {\n            console.log(err.response.data)\n        }\n\n        // console.log('promise',res.data)\n        // promise.then((result) => {\n        //     console.log(result.data);\n        //     //Nếu gọi api lấy về kết quả thành công \n        //     //=> set lại state của component\n        //     dispatch({\n        //         type: GET_TASK_API,\n        //         taskList: result.data\n        //     })\n\n        //     console.log('thành công')\n        // });\n\n\n        // promise.catch((err) => {\n        //     console.log('thất bại')\n        //     console.log(err.response.data)\n        // });\n    }\n}\n\n\n\nexport const addTaskApi = (taskName) => {\n    return async dispatch => {\n\n        try {\n            //Xử lý trước khi dispatch\n            let {status,data} = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n                method: 'POST',\n                data: { taskName: taskName }\n            });\n            // console.log('res',res)\n            if (status === 200) {\n                dispatch(getTaskListApi())\n            }\n        }catch(err){\n            console.log(err.response.data);\n        }\n        // //Xử lý thành công\n        // promise.then(result => {\n        //     // alert(result.data);\n        //     dispatch(getTaskListApi());\n\n        // })\n\n        // //Xử lý thất bại\n        // promise.catch(errors => {\n        //     alert(errors.response.data)\n\n        // })\n\n\n    }\n}\n\n\nexport const deleteTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n}\n\nexport const checkTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\nexport const rejectTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            alert(res.data);\n            dispatch(getTaskListApi());\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\n\n\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function ToDoListRedux(props) {\n    \n    //Lấy tasklist từ redux về\n    const {taskList} = useSelector(state => state.ToDoListReducer);\n    const dispatch = useDispatch();\n\n    let [state, setState] = useState({\n     \n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n       dispatch(getTaskListApi())\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\n        dispatch(addTaskApi(state.values.taskName))\n       \n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch(rejectTaskApi(taskName));\n\n    }\n\n    //Xử lý done task\n   const checkTask = (taskName) => {\n        dispatch(checkTaskApi(taskName))\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        dispatch(deleteTaskApi(taskName))\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n\n\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nexport default function TodolistRFC(props) {\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            setState({\n                ...state,\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","import React,{Fragment} from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../../components/Home/Header/Header';\n\n\n\n\nexport const HomeTemplate = (props) => {\n\n    const {Component,...restParam} = props;\n    return <Route {...restParam} render={(propsRoute)=>{\n        return <>\n            <Header />\n            <Component {...propsRoute} />\n        </>\n    }} />\n\n}","import React,{useState,useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { Button,Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\n\n\n\n\nexport const UserLoginTemplate = (props) => {\n\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\n\n    useEffect(()=>{\n        window.onresize = () => {\n            setSize({\n                width: Math.round(window.innerWidth),\n                height:Math.round(window.innerHeight)\n            })\n        }\n    },[])\n\n\n    let {Component,...restRoute} =  props;\n\n    return <Route {...restRoute} render={(propsRoute)=>{\n        return <>\n            <Layout>\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\n                  \n                </Sider>\n                <Content>\n                    <Component {...propsRoute} />\n                </Content>\n            </Layout>\n      \n        </>\n    }} />\n\n}","import React from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux'\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\nexport default function ContentMain(props) {\n\n    const { projectDetail } = props;\n    const dispatch = useDispatch();\n\n    const handleDragEnd = (result) => {\n        let {projectId,taskId} = JSON.parse( result.draggableId ); //Lấy ra chuỗi sau mỗi lần draggable\n\n        console.log({projectId,taskId} )\n        let { source, destination } = result;\n        if (!result.destination) {\n            return;\n        }\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\n            return;\n        }\n        \n        \n\n        //gọi api cập nhật lại status\n        dispatch({\n            type: UPDATE_STATUS_TASK_SAGA,\n            taskUpdateStatus: {\n                \"taskId\": taskId,\n                \"statusId\": destination.droppableId,\n                \"projectId\":projectId\n            }\n        })\n    }\n\n    const renderCardTaskList = () => {\n        return <DragDropContext onDragEnd={handleDragEnd}>\n            {\n                projectDetail.lstTask?.map((taskListDetail, index) => {\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\n                        {(provided) => {\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }} >\n                                <div className=\"card-header\">\n                                    {taskListDetail.statusName}\n                                </div>\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    key={index}\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\n                                    {taskListDetail.lstTaskDeTail.map((task, index) => {\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({projectId:task.projectId,taskId:task.taskId})}>\n                                            {(provided) => {\n                                                return <div\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId });\n\n                                                    }}>\n                                                    <p className=\"font-weight-300\">\n                                                        {task.taskName}\n                                                    </p>\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\n                                                        <div className=\"block-left\">\n                                                            <p className=\"text-danger\">{task.priorityTask.priority}</p>\n                                                            {/* <i className=\"fa fa-bookmark\" />\n                                        <i className=\"fa fa-arrow-up\" /> */}\n                                                        </div>\n                                                        <div className=\"block-right\">\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                                                                {task.assigness.map((mem, index) => {\n                                                                    return <div className=\"avatar\" key={index}>\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\n                                                                    </div>\n                                                                })}\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            }}\n                                        </Draggable>\n                                    })}\n\n                                    {provided.placeholder}\n\n                                </div>\n\n\n\n                            </div>\n                        }}\n\n                    </Droppable>\n                })}\n\n        </DragDropContext>\n    }\n\n    return (\n        <div className=\"content\" style={{ display: 'flex' }}>\n\n            {renderCardTaskList()}\n        </div>\n\n\n    )\n}\n\n\n\n{/* <div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    SELECTED FOR DEVELOPMENT 2\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n</ul>\n</div>\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    IN PROGRESS 2\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n</ul>\n</div>\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    DONE 3\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n    <li className=\"list-group-item\">Vestibulum at eros</li>\n</ul>\n</div> */}","export const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\n\n\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS';\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\n\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\n\n\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA';\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';","import React from 'react'\n\nexport default function HeaderMain(props) {\n\n    const {projectDetail} = props;\n\n    return (\n        <div className=\"header\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\n                    <li className=\"breadcrumb-item\">Project</li>\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\n                    <li className=\"breadcrumb-item\">Project management</li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {projectDetail.projectName}\n                    </li>\n                </ol>\n            </nav>\n            \n\n        </div>\n\n\n    )\n}\n","import React from 'react'\nimport ReactHtmlParser from \"react-html-parser\";\n\n\nexport default function InfoMain(props) {\n\n    const {projectDetail} = props;\n\n    const renderAvatar = () => {\n        \n        \n        return projectDetail.members?.map((user,index) => {\n            return   <div key={index} className=\"avatar\">\n            <img src={user.avatar} alt={user.avatar} />\n        </div>\n        })\n    }\n\n\n    return (\n        <>\n            <h3>{projectDetail.projectName}</h3>\n\n            <section>\n                {ReactHtmlParser(projectDetail.description)}\n            </section>\n            <div className=\"info\" style={{ display: 'flex' }}>\n                <div className=\"search-block\">\n                    <input className=\"search\" />\n                    <i className=\"fa fa-search\" />\n                </div>\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                    {renderAvatar()}\n                </div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\n            </div>\n        </>\n\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function MenuCyberbugs() {\n    return (\n        <div className=\"menu\">\n            <div className=\"account\">\n                <div className=\"avatar\">\n                    <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\n                </div>\n                <div className=\"account-info\">\n                    <p>CyberLearn.vn</p>\n                    <p>Report bugs</p>\n                </div>\n            </div>\n            <div className=\"control\">\n                <div>\n                    <i className=\"fa fa-credit-card mr-1\" />\n                    <NavLink className=\"text-dark\" activeStyle={{color:'blue'}} to=\"/cyberbugs\" activeClassName=\"active font-weight-bold text-primary\" >Cyber Board</NavLink>\n                </div>\n                <div>\n                    <i className=\"fa fa-cog mr-1\" /> \n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/projectmanagement' activeClassName=\"active font-weight-bold  text-primary\" >Project management</NavLink>\n                </div>\n                <div>\n                    <i className=\"fa fa-cog mr-1\" /> \n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/createproject' activeClassName=\"active font-weight-bold  text-primary\" >Create project</NavLink>\n                </div>\n               \n            </div>\n            <div className=\"feature\">\n                <div>\n                    <i className=\"fa fa-truck mr-1\" />\n                    <span>Releases</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-equals mr-1\" />\n                    <span>Issues and filters</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-paste mr-1\" />\n                    <span>Pages</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-location-arrow mr-1\" />\n                    <span>Reports</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-box\" />\n                    <span>Components</span>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n","export const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { Editor } from '@tinymce/tinymce-react'\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\nexport default function ModalCyberBugs(props) {\n\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\n    const { arrStatus } = useSelector(state => state.StatusReducer);\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\n\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\n    const [visibleEditor, setVisibleEditor] = useState(false);\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\n    const [content, setContent] = useState(taskDetailModal.description);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: GET_ALL_STATUS_SAGA });\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\n    }, [])\n\n\n    console.log('taskDetailModal', taskDetailModal)\n\n\n    const renderDescription = () => {\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\n        return <div>\n            {visibleEditor ? <div> <Editor\n                name=\"description\"\n                initialValue={taskDetailModal.description}\n                init={{\n                    selector: 'textarea#myTextArea',\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                    ],\n                    toolbar:\n                        'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                }}\n                onEditorChange={(content, editor) => {\n                    setContent(content);\n                }}\n            />\n\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n                    dispatch({\n                        type:HANDLE_CHANGE_POST_API_SAGA,\n                        actionType:CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: content\n                    })\n                    setVisibleEditor(false);\n                }}>Save</button>\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n                    dispatch({\n                        type:HANDLE_CHANGE_POST_API_SAGA,\n                        actionType:CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: historyContent\n                    })\n                   \n                //    dispatch({\n                //         type: CHANGE_TASK_MODAL,\n                //         name: 'description',\n                //         value: historyContent\n                //     })\n                    setVisibleEditor(false)\n                }}>Close</button>\n            </div> : <div onClick={() => {\n\n                setHistoryContent(taskDetailModal.description);\n                setVisibleEditor(!visibleEditor);\n\n            }}>{jsxDescription}</div>}\n\n\n        </div>\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n\n        dispatch({\n            type:HANDLE_CHANGE_POST_API_SAGA,\n            actionType:CHANGE_TASK_MODAL,\n            name,\n            value\n        })\n        \n        // dispatch({\n        //     type: CHANGE_TASK_MODAL,\n        //     name,\n        //     value\n        // });\n\n        \n    }\n    const renderTimeTracking = () => {\n\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\n\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\n\n        return <div>\n            <div style={{ display: 'flex' }}>\n                <i className=\"fa fa-clock\" />\n                <div style={{ width: '100%' }}>\n\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\n                    </div>\n                </div>\n\n\n            </div>\n            <div className=\"row\">\n\n                <div className=\"col-6\">\n                    <input className=\"form-control\" name=\"timeTrackingSpent\" onChange={handleChange} />\n                </div>\n                <div className=\"col-6\">\n                    <input className=\"form-control\" name=\"timeTrackingRemaining\" onChange={handleChange} />\n                </div>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-info\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <div className=\"task-title\">\n                            <i className=\"fa fa-bookmark\" />\n                            <select name=\"typeId\" value={taskDetailModal.typeId} onChange={handleChange}>\n                                {arrTaskType.map((tp, index) => {\n                                    return <option key={index} value={tp.id}>{tp.taskType}</option>\n                                })}\n                            </select>\n\n                            <span>{taskDetailModal.taskName}</span>\n                        </div>\n                        <div style={{ display: 'flex' }} className=\"task-click\">\n                            <div>\n                                <i className=\"fab fa-telegram-plane\" />\n                                <span style={{ paddingRight: 20 }}>Give feedback</span>\n                            </div>\n                            <div>\n                                <i className=\"fa fa-link\" />\n                                <span style={{ paddingRight: 20 }}>Copy link</span>\n                            </div>\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-8\">\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\n                                    <div className=\"description\">\n                                        <p>Description</p>\n                                        {renderDescription()}\n                                    </div>\n                                    <div className=\"comment\">\n                                        <h6>Comment</h6>\n                                        <div className=\"block-comment\" style={{ display: 'flex' }}>\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <div className=\"input-comment\">\n                                                <input type=\"text\" placeholder=\"Add a comment ...\" />\n                                                <p>\n                                                    <span style={{ fontWeight: 500, color: 'gray' }}>Protip:</span>\n                                                    <span>press\n                        <span style={{ fontWeight: 'bold', background: '#ecedf0', color: '#b4bac6' }}>M</span>\n                        to comment</span>\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"lastest-comment\">\n                                            <div className=\"comment-item\">\n                                                <div className=\"display-comment\" style={{ display: 'flex' }}>\n                                                    <div className=\"avatar\">\n                                                        <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                                    </div>\n                                                    <div>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lord Gaben <span>a month ago</span>\n                                                        </p>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lorem ipsum dolor sit amet, consectetur\n                                                            adipisicing elit. Repellendus tempora ex\n                                                            voluptatum saepe ab officiis alias totam ad\n                                                            accusamus molestiae?\n                        </p>\n                                                        <div>\n                                                            <span style={{ color: '#929398' }}>Edit</span>\n                          •\n                          <span style={{ color: '#929398' }}>Delete</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"status\">\n                                        <h6>STATUS</h6>\n                                        <select name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {\n\n                                            handleChange(e)\n\n                                            // const action = {\n                                            //     type:UPDATE_STATUS_TASK_SAGA,\n                                            //     taskUpdateStatus: {\n                                            //         taskId:taskDetailModal.taskId,\n                                            //         statusId:e.target.value,\n                                            //         projectId:taskDetailModal.projectId\n\n                                            //     }\n                                            // }\n\n                                            // // // console.log('action',action);\n                                            // console.log('taskupdatestatus',{\n                                            //     taskId:taskDetailModal.taskId,\n                                            //     statusId:e.target.value\n                                            // })\n\n                                            // dispatch(action)\n\n\n                                        }}>\n                                            {arrStatus.map((status, index) => {\n                                                return <option value={status.statusId} key={index}>{status.statusName}</option>\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div className=\"assignees\">\n                                        <h6>ASSIGNEES</h6>\n                                        <div className=\"row\">\n                                            {\n                                                taskDetailModal.assigness?.map((user, index) => {\n                                                    return <div className=\"col-6  mt-2 mb-2\" key={index}>\n                                                        <div key={index} style={{ display: 'flex' }} className=\"item\">\n\n\n                                                            <div className=\"avatar\">\n                                                                <img src={user.avatar} alt={user.avatar} />\n                                                            </div>\n                                                            <p className=\"name mt-1 ml-1\">\n                                                                {user.name}\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5,cursor:'pointer' }}  onClick={() => {\n                                                                    \n                                                                    dispatch({\n                                                                        type:HANDLE_CHANGE_POST_API_SAGA,\n                                                                        actionType: REMOVE_USER_ASSIGN,\n                                                                        userId:user.id\n                                                                    })\n                                                                    \n                                                                    // dispatch({\n                                                                    //     type:REMOVE_USER_ASSIGN,\n                                                                    //     userId:user.id\n                                                                    // })\n                                                                }}  />\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                })\n                                            }\n\n                                            <div className=\"col-6  mt-2 mb-2\">\n                                             \n                                                <Select \n                                                    options = {projectDetail.members?.filter(mem => {\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\n                                                        if (index !== -1) {\n                                                            return false;\n                                                        }\n                                                        return true;\n                                                    }).map((mem, index) => {\n                                                        return {value:mem.userId,label:mem.name};\n                                                    })}\n                                                    optionFilterProp=\"label\"\n                                                    style={{ width: '100%' }}\n                                                    name=\"lstUser\"\n                                                    value=\"+ Add more\"\n                                                    className=\"form-control\"\n                                                    onSelect={(value) => {\n                                                        if (value == '0') {\n                                                            return;\n                                                        }\n                                                        let userSelected = projectDetail.members.find(mem => mem.userId == value);\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\n\n                                                        dispatch({\n                                                            type:HANDLE_CHANGE_POST_API_SAGA,\n                                                            actionType: CHANGE_ASSIGNESS,\n                                                            userSelected\n                                                        })\n\n                                                        //dispatchReducer\n                                                        // dispatch({\n                                                        //     type: CHANGE_ASSIGNESS,\n                                                        //     userSelected\n                                                        // })\n                                                    }}>\n                                                    \n                                                    \n                                                </Select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"reporter\">\n                                        <h6>REPORTER</h6>\n                                        <div style={{ display: 'flex' }} className=\"item\">\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <p className=\"name\">\n                                                Pickle Rick\n                    <i className=\"fa fa-times\" style={{ marginLeft: 5 }} />\n                                            </p>\n                                        </div>\n                                    </div> */}\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\n                                        <h6>PRIORITY</h6>\n                                        <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\n                                            handleChange(e);\n                                        }}>\n                                            {arrPriority.map((item, index) => {\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\n                                            })}\n\n\n                                        </select>\n                                    </div>\n                                    <div className=\"estimate\">\n                                        <h6>ORIGINAL ESTIMATE (HOURS)</h6>\n                                        <input name=\"originalEstimate\" type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\n                                            handleChange(e);\n                                        }} />\n                                    </div>\n                                    <div className=\"time-tracking\">\n                                        <h6>TIME TRACKING</h6>\n                                        {\n                                            renderTimeTracking()\n                                        }\n\n                                    </div>\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","export const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';","export const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';","import { Editor } from '@tinymce/tinymce-react'\nimport React, { useEffect, useState } from 'react'\nimport { Select, Radio,Slider } from 'antd';\nimport {useSelector,useDispatch,connect} from 'react-redux'\nimport { GET_ALL_PROJECT_SAGA } from '../../../redux/constants/Cyberbugs/ProjectCyberBugsConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\n\nimport {withFormik} from 'formik';\n\nimport * as Yup from 'yup'\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../../redux/constants/Cyberbugs/UserConstatnts';\nconst { Option } = Select;\n\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n function FormCreateTask(props) {\n\n    //Lấy dữ liệu từ redux \n    const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n    const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n    const {arrPriority} = useSelector(state => state.PriorityReducer);\n    const {arrUser} = useSelector(state => state.UserLoginCyberBugsReducer);\n    const {arrStatus} = useSelector(state => state.StatusReducer);\n\n    console.log('arrStatus',arrStatus);\n    //Hàm biến đổi options cho thẻ select\n    const userOptions = arrUser.map((item,index) => {\n        return {value:item.userId,label:item.name}\n    })\n    //Do kết nối với withformik => component có các props\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    const dispatch = useDispatch();\n\n\n \n    \n    const [size, setSize] = React.useState('default');\n\n    const [timeTracking,setTimetracking] = useState({\n        timeTrackingSpent:0,\n        timeTrackingRemaining:0\n    })\n\n\n\n    //hook\n    useEffect(() => {\n        dispatch({type:GET_ALL_PROJECT_SAGA});\n        dispatch({type:GET_ALL_TASK_TYPE_SAGA});\n        dispatch({type:GET_ALL_PRIORITY_SAGA});\n        dispatch({type:GET_ALL_STATUS_SAGA});\n        //Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submitt\n        dispatch({type:'SET_SUBMIT_CREATE_TASK',submitFunction:handleSubmit})\n\n        dispatch({type:'GET_USER_API',keyWord:''});\n\n    },[])\n\n    \n    \n\n    const children = [];\n    return (\n        <form className=\"container\" onSubmit={handleSubmit}>          \n            <div className=\"form-group\">\n                <p>Project</p>\n                <select  name=\"projectId\" className=\"form-control\" onChange={(e) => {\n\n                    //dispatch giá trị làm thay đổi arrUser\n                    let {value} = e.target;\n                    dispatch({\n                        type:GET_USER_BY_PROJECT_ID_SAGA,\n                        idProject:value\n                    })\n                    //Cập nhật giá trị cho project Id\n                    setFieldValue('projectId',e.target.value);\n\n\n                }}>\n                   {arrProject.map((project,index)=>{\n                       return <option key={index} value={project.id}>{project.projectName}</option>\n                   })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <p>Task name</p>\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\n            </div> \n            <div className=\"form-group\">\n                <p>Status</p>\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\n                    {arrStatus.map((statusItem,index) => {\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\n                    })}\n                </select>\n            </div> \n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <p>Priority</p>\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\n                            {arrPriority.map((priority,index)=>{\n                                return <option key={index} value={priority.priorityId}>\n                                    {priority.priority}\n                                </option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Task type</p>\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\n                            {arrTaskType.map((taskType,index)=>{\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                \n            </div>\n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                    <p>Assignees</p>\n                    <Select\n                            \n                            mode=\"multiple\"\n                            size={size}\n                            options={userOptions}\n                            placeholder=\"Please select\"\n                            optionFilterProp=\"label\"\n                            onChange={(values) => {\n                                //set lại giá trị cho lstUserAsign\n                                setFieldValue('listUserAsign',values);\n                            }}\n                            onSelect={(value) => { \n\n                              console.log(value)\n                        \n                            }}\n                            style={{ width: '100%' }}\n                        >\n                            {children}\n                    </Select>\n                    <div className=\"row mt-3\">\n                        <div className=\"col-12\">\n                            <p>Original Estimate</p>\n                            <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange}/>\n                        </div>\n                    </div>\n\n                    </div>\n                    <div className=\"col-6\">\n                         <p>Time tracking</p>\n\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\n                        <div className=\"row\">\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\n                        </div>\n                        <div className=\"row\" style={{marginTop:5}}>\n                            <div className=\"col-6\">\n                                <p>Time spent</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingSpent:e.target.value\n                                    });\n\n                                    setFieldValue('timeTrackingSpent',e.target.value);\n                                }}/>\n                            </div>\n\n                            <div className=\"col-6\">\n                                <p>Time remaining</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\"  onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingRemaining:e.target.value\n                                    });\n                                    setFieldValue('timeTrackingRemaining',e.target.value);\n\n                                }}/>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <p>Description</p>\n                <Editor\n                    name=\"description\"\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={(content, editor) => {\n                            setFieldValue('description',content);\n                        }}\n                />\n            </div>\n            {/* <button type=\"submit\">submit</button> */}\n        </form>\n    )\n}\n\n\n\n\n\nconst frmCreateTask = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const {arrProject,arrTaskType,arrPriority,arrStatus} = props;\n\n\n        // if(arrProject?.length>0){\n        //     props.dispatch({type:GET_USER_BY_PROJECT_ID_SAGA,idProject:arrProject[0]?.id});\n        // }\n\n\n        return {\n            taskName: '',\n            description: '',\n            statusId: arrStatus[0]?.statusId,\n            originalEstimate: 0,\n            timeTrackingSpent:0,\n            timeTrackingRemaining:0,\n            projectId:arrProject[0]?.id,\n            typeId:arrTaskType[0]?.id,\n            priorityId:arrPriority[0]?.priorityId,\n            listUserAsign:[]\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n        props.dispatch({type:'CREATE_TASK_SAGA',taskObject:values})\n        console.log('taskobject',values)\n    },\n    displayName: 'createTaskForm',\n})(FormCreateTask);\n\n// const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n// const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n// const {arrPriority} = useSelector(state => state.PriorityReducer);\n// const {userSearch} = useSelector(state => state.UserLoginCyberBugsReducer);\n// const {arrStatus} = useSelector(state => state.StatusReducer);\nconst mapStateToProps = (state) => {\n    return {\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\n        arrTaskType:state.TaskTypeReducer.arrTaskType,\n        arrPriority:state.PriorityReducer.arrPriority,\n        arrStatus:state.StatusReducer.arrStatus,\n    }\n}\n\n\nexport default connect(mapStateToProps) (frmCreateTask);\n","export const GET_ALL_PROJECT = 'GET_ALL_PROJECT';\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA';\n","export const GET_USER_BY_PROJECT_ID_SAGA = 'GET_USER_BY_PROJECT_ID_SAGA';\nexport const GET_USER_BY_PROJECT_ID = 'GET_USER_BY_PROJECT_ID';","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    BarsOutlined,\n    SearchOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\nimport {useDispatch,useSelector} from 'react-redux'\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\n\nconst { Header, Sider, Content } = Layout;\nexport default function SidebarCyberbugs() {\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        collapsed: false,\n    })\n    const toggle = () => {\n        setState({\n            collapsed: !state.collapsed,\n        });\n    };\n    return (\n        <div>\n\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\n\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={()=>{\n                        dispatch({\n                            type:'OPEN_FORM_CREATE_TASK',\n                            Component:<FormCreateTask />,\n                            title:'Create task'\n                        })\n\n                    }}>\n                        <span className=\"mb-2\">Create task</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\n                        Search\n                     </Menu.Item>\n\n                </Menu>\n            </Sider>\n        </div>\n\n\n    )\n}\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain';\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain';\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain';\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\nimport ModalCyberBugs from '../../components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs';\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\nimport Header from '../../components/Home/Header/Header';\n\nimport '../../index.css';\n\n\n\nexport const CyberbugsTemplate = (props) => {\n\n    const { Component, ...restParam } = props;\n    return <Route {...restParam} render={(propsRoute) => {\n        return <>\n            <div className=\"jira\">\n                <SidebarCyberbugs />\n                <MenuCyberbugs />\n                    <Component {...propsRoute} />\n                <ModalCyberBugs />\n            </div>\n        </>\n    }} />\n\n}","import React, { useEffect } from 'react'\nimport ContentMain from '../../../components/Cyberbugs/Main/ContentMain'\nimport HeaderMain from '../../../components/Cyberbugs/Main/HeaderMain'\nimport InfoMain from '../../../components/Cyberbugs/Main/InfoMain'\nimport {useSelector,useDispatch} from 'react-redux'\n\n\n\nexport default function IndexCyberBugs(props) {\n\n    const {projectDetail} = useSelector(state => state.ProjectReducer)\n    const dispatch = useDispatch();\n\n    console.log('projectDetail',projectDetail)\n\n\n    useEffect(()=>{\n        //Khi người dùng link qua trang này bằng thẻ navlink hoặc người dùng tự gõ url thì ta sẽ lấy tham số từ url => gọi saga\n        const {projectId} = props.match.params;\n        dispatch({\n            type:'GET_PROJECT_DETAIL',\n            projectId\n        });\n    },[])\n\n\n    return (\n        <div className=\"main\">\n            <HeaderMain projectDetail={projectDetail} />\n\n            <InfoMain projectDetail={projectDetail} />\n\n            <ContentMain projectDetail={projectDetail} />\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nfunction CreateProject(props) {\n\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    useEffect(() => {\n        //Gọi api để lấy dữ liệu thẻ select\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n    }, []);\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n\n    return (\n        <div className=\"container m-5\">\n            <h3>CreateProject</h3>\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\n                <div className=\"form-group\">\n                    <p>Name</p>\n                    <input className=\"form-control\" name=\"projectName\" />\n                </div>\n                <div className=\"form-group\">\n                    <p>Description</p>\n                    <Editor\n\n                        name=\"description\"\n\n                        init={{\n                            selector: 'textarea#myTextArea',\n\n                            height: 500,\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={handleEditorChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\n                        {arrProjectCategory.map((item, index) => {\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\n                        })}\n                    </select>\n                </div>\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nconst createProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        console.log('propvalue', props)\n        return {\n            projectName: '',\n            description: '',\n            categoryId: props.arrProjectCategory[0]?.id\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        props.dispatch({ \n            type: 'CREATE_PROJECT_SAGA',\n            newProject: values \n        })\n\n\n    },\n    displayName: 'CreateProjectFormik',\n})(CreateProject);\n\nconst mapStateToProps = (state) => ({\n\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n\n})\n\n\nexport default connect(mapStateToProps)(createProjectForm);","import { Editor } from '@tinymce/tinymce-react'\nimport { withFormik } from 'formik';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\n\n\nfunction FormEditProject(props) {\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n\n\n\n    // const submitForm = (e) => {\n    //     e.preventDefault();\n    //     alert('submit edit');\n    // }\n\n    //componentdidmount\n    useEffect(() => {\n\n        //Gọi api load project category \n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n\n\n        //Load sự kiện submit lên drawer nút submit\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\n        \n\n\n\n    }, [])\n\n\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n    return (\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-4\">\n\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project id</p>\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\n                    </div>\n\n\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project name</p>\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project Category</p>\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId}>\n                            {arrProjectCategory?.map((item, index) => {\n                                return <option key={index} value={item.id}>\n                                    {item.projectCategoryName}\n                                </option>\n                            })}\n                        </select>\n\n\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Description</p>\n                        <Editor\n\n                            name=\"description123\"\n                            initialValue={values.description}\n                            value = {values.description}\n                            init={{\n                                selector: 'textarea#myTextArea',\n                                height: 500,\n                            \n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n        alignleft aligncenter alignright alignjustify | \\\n        bullist numlist outdent indent | removeformat | help'\n                            }}\n                            onEditorChange={handleEditorChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form >\n    )\n}\n\n\n\n\n\nconst EditProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const { projectEdit } = props;\n\n        return {\n            id: projectEdit?.id,\n            projectName: projectEdit.projectName,\n            description: projectEdit.description,\n            categoryId: projectEdit.categoryId\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        //Khi người dùng bấm submit => đưa dữ liệu về backedn thông qua api\n        // const action = {\n        //     type:'UPDATE_PROJECT_SAGA',\n        //     prjectUpdate:values\n        // }\n        //Gọi saga\n        props.dispatch({\n            type:'UPDATE_PROJECT_SAGA',\n            prjectUpdate:values\n        })\n\n    },\n    displayName: 'EditProjectForm',\n})(FormEditProject);\n\nconst mapStateToProps = (state) => ({\n\n    projectEdit: state.ProjectReducer.projectEdit\n\n})\n\n\n\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\nimport { Table, Tag, Space, Button, Avatar, Popconfirm, message, Popover, AutoComplete } from 'antd';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { FormOutlined, DeleteOutlined,CloseSquareOutlined } from '@ant-design/icons'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FormEditProject from '../../../components/Forms/FormEditProject.js/FormEditProject';\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport default function ProjectManagement(props) {\n    //Lấy dữ liệu từ reducer về component\n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList);\n\n    const { userSearch } = useSelector(state => state.UserLoginCyberBugsReducer);\n\n    const [value, setValue] = useState('');\n\n    const searchRef = useRef(null);\n\n    //Sử dụng useDispatch để gọi action\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        filteredInfo: null,\n        sortedInfo: null,\n    });\n\n    useEffect(() => {\n        dispatch({ type: 'GET_LIST_PROJECT_SAGA' })\n    }, [])\n\n    const handleChange = (pagination, filters, sorter) => {\n        console.log('Various parameters', pagination, filters, sorter);\n        setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    };\n\n    const clearFilters = () => {\n        setState({ filteredInfo: null });\n    };\n\n    const clearAll = () => {\n        setState({\n            filteredInfo: null,\n            sortedInfo: null,\n        });\n    };\n\n    const setAgeSort = () => {\n        setState({\n            sortedInfo: {\n                order: 'descend',\n                columnKey: 'age',\n            },\n        });\n    };\n\n    let { sortedInfo, filteredInfo } = state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n        {\n            title: 'id',\n            dataIndex: 'id',\n            key: 'id',\n            sorter: (item2, item1) => {\n                return item2.id - item1.id;\n            },\n            sortDirections: ['descend'],\n\n        },\n        {\n            title: 'projectName',\n            dataIndex: 'projectName',\n            key: 'projectName',\n            render: (text,record,index) => {\n                return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>\n            },\n            sorter: (item2, item1) => {\n                let projectName1 = item1.projectName?.trim().toLowerCase();\n                let projectName2 = item2.projectName?.trim().toLowerCase();\n                if (projectName2 < projectName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n\n        },\n        // {\n        //     title: 'description',\n        //     dataIndex: 'description',\n        //     key: 'description',\n        //     render: (text, record, index) => {\n        //         let contentJSX = ReactHtmlParser(text);\n\n        //         return <div>\n        //             {contentJSX}\n        //         </div>\n        //     }\n        // },\n\n        {\n            title: 'category',\n            dataIndex: 'categoryName',\n            key: 'categoryName',\n            sorter: (item2, item1) => {\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\n                if (categoryName2 < categoryName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'creator',\n            // dataIndex: 'creator',\n            key: 'creator',\n            render: (text, record, index) => {\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\n            },\n            sorter: (item2, item1) => {\n                let creator1 = item1.creator?.name.trim().toLowerCase();\n                let creator2 = item2.creator?.name.trim().toLowerCase();\n                if (creator2 < creator1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'members',\n            key: 'members',\n            render: (text, record, index) => {\n                return <div>\n                    {record.members?.slice(0, 3).map((member, index) => {\n                        return (\n                            <Popover key={index} placement=\"top\" title=\"members\" content={() => {\n                                return <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>avatar</th>\n                                            <th>name</th>\n                                            <th></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {record.members?.map((item, index) => {\n                                            return <tr key={index}>\n                                                <td>{item.userId}</td>\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{borderRadius:'15px'}} /></td>\n                                                <td>{item.name}</td>\n                                                <td>\n                                                    <button onClick={()=>{\n                                                        dispatch({\n                                                            type:'REMOVE_USER_PROJECT_API',\n                                                            userProject: {\n                                                                userId:item.userId,\n                                                                projectId: record.id\n                                                            }\n                                                        })\n\n                                                    }} className=\"btn btn-danger\" style={{borderRadius:'50%'}}>X</button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table>\n                            }}>\n                                <Avatar key={index} src={member.avatar} />\n                            </Popover>\n                        )\n                    })}\n\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\n\n                    <Popover placement=\"rightTop\" title={\"Add user\"} content={() => {\n                        return <AutoComplete\n\n                            options={userSearch?.map((user, index) => {\n                                return { label: user.name, value: user.userId.toString() }\n                            })}\n\n                            value={value}\n\n                            onChange={(text) => {\n                                setValue(text);\n                            }}\n\n                            onSelect={(valueSelect, option) => {\n                                //set giá trị của hộp thọa = option.label\n                                setValue(option.label);\n                                //Gọi api gửi về backend\n                                dispatch({\n                                    type: 'ADD_USER_PROJECT_API',\n                                    userProject: {\n                                        \"projectId\": record.id,\n                                        \"userId\": valueSelect\n                                    }\n                                })\n\n\n                            }}\n                            style={{ width: '100%' }} onSearch={(value) => {\n                                    \n                                if(searchRef.current) {\n                                    clearTimeout(searchRef.current);\n                                }\n                                searchRef.current = setTimeout(()=>{\n                                    dispatch({\n                                        type: 'GET_USER_API',\n                                        keyWord: value\n                                    })\n    \n                                },300)\n                               \n                            }} />\n                    }} trigger=\"click\">\n                        <Button style={{ borderRadius: '50%' }}>+</Button>\n                    </Popover>\n                </div>\n            }\n\n        },\n\n        {\n            title: 'Action',\n            dataIndex: '',\n            key: 'x',\n            render: (text, record, index) => {\n                return <div>\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\n                        const action = {\n                            type: 'OPEN_FORM_EDIT_PROJECT',\n                            title:'Edit Project',\n                            Component: <FormEditProject />,\n                        }\n\n                        //dispatch lên reducer nội dung drawer\n                        dispatch(action);\n                        //dispatch dữ liệu dòng hiện tai lên reducer\n                        const actionEditProject = {\n                            type: 'EDIT_PROJECT',\n                            projectEditModel: record\n                        }\n                        dispatch(actionEditProject);\n                    }}>\n                        <FormOutlined style={{ fontSize: 17 }} />\n                    </button>\n                    <Popconfirm\n                        title=\"Are you sure to delete this project?\"\n                        onConfirm={() => {\n                            dispatch({ type: 'DELETE_PROJECT_SAGA', idProject: record.id })\n                        }}\n\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <button className=\"btn btn-danger\">\n                            <DeleteOutlined style={{ fontSize: 17 }} />\n                        </button>\n                    </Popconfirm>\n\n                </div>\n            },\n        }\n    ];\n    return (\n        <div className=\"container-fluid m-5\">\n            <h3>Project management</h3>\n            <Space style={{ marginBottom: 16 }}>\n                <Button onClick={setAgeSort}>Sort age</Button>\n                <Button onClick={clearFilters}>Clear filters</Button>\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\n            </Space>\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nexport default function DrawerCyberBugs(props) {\n\n\n\n    const { visible, ComponentContentDrawer,callBackSubmit,title } = useSelector(state => state.drawerReducer);\n\n    const dispatch = useDispatch();\n\n    console.log('visible', visible)\n\n\n    const showDrawer = () => {\n        dispatch({ type: 'OPEN_DRAWER' });\n    };\n\n    const onClose = () => {\n        dispatch({ type: 'CLOSE_DRAWER' });\n\n    };\n    return (\n        <>\n            {/* <button onClick={showDrawer}>showdrawer</button> */}\n            <Drawer\n                title={title}\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={callBackSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                }\n            >\n                {/* Nội dung thay đổi của drawer */}\n                {ComponentContentDrawer}\n     \n            </Drawer>\n        </>\n    )\n}\n","import React, { useRef, useState } from 'react';\r\n\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nimport './DemoDragDrop.css'\r\n\r\n\r\nconst defaultValue = [\r\n    { id: 1, taskName: 'Task 1' },\r\n    { id: 2, taskName: 'Task 2' },\r\n    { id: 3, taskName: 'Task 3' },\r\n    { id: 4, taskName: 'Task 4' },\r\n    { id: 5, taskName: 'Task 5' },\r\n];\r\n\r\n\r\nexport default function DemoDragDrop(props) {\r\n\r\n    const [taskList, setTaskList] = useState(defaultValue);\r\n    const tagDrag = useRef({})\r\n    const tagDragEnter = useRef({});\r\n    //Animation\r\n    const [propsSpring, set, stop] = useSpring(() => ({ from: { bottom: -25 }, to: { bottom: 0 },config:{duration:250},reset:true }));\r\n\r\n\r\n\r\n    const handleDragStart = (e, task, index) => {\r\n        console.log(e.target);\r\n        console.log('dragEnd');\r\n        //Lưu lại giá trị của task đang drag\r\n        tagDrag.current = task;\r\n    }\r\n\r\n\r\n    const handleDragEnter = (e, taskDragEnter, index) => {\r\n        // console.log('dragEnterTag',e.target)\r\n        // console.log('targertOver',task)\r\n        // console.log('index',index)\r\n        //Lưu lại giá trị của task được kéo ngang qua\r\n        set({bottom:0});\r\n        tagDragEnter.current = { ...taskDragEnter };\r\n\r\n        let taskListUpdate = [...taskList];\r\n        //Láy ra index thằng đang kéo\r\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\r\n        //Lấy ra index thằng bị kéo qua \r\n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\r\n\r\n        //Bién6 chứa giá trị thằng đang kéo\r\n        let temp = taskListUpdate[indexDragTag];\r\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\r\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\r\n        //Lấy thằng kéo qua gán = đang keo\r\n        taskListUpdate[indexDragEnter] = temp;\r\n\r\n\r\n\r\n        setTaskList(taskListUpdate);\r\n\r\n\r\n    }\r\n\r\n    const handleDragEnd = (e) => {\r\n       \r\n    }\r\n    const handleDrop = (e) => {\r\n        // console.log('drop', e.target);\r\n    }\r\n    return (\r\n        <div className=\"container\" onDragOver={(e)=> {\r\n            e.stopPropagation();\r\n             e.preventDefault();\r\n\r\n         }}  onDrop={(e)=> {\r\n\r\n            tagDrag.current = {};\r\n            console.log('dragEnd')\r\n            setTaskList([...taskList])\r\n\r\n         }}>\r\n            <div className=\"text-center display-4\">Task list</div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"bg-dark p-5 col-4\">\r\n                    {taskList.map((task, index) => {\r\n\r\n                        let cssDragTag = task.id === tagDrag.current.id ? 'dragTag' : '';\r\n\r\n                        if (task.id === tagDragEnter.current.id) {\r\n                            return <animated.div\r\n                                style={{\r\n                                    position:'relative',\r\n                                    bottom: propsSpring.bottom.interpolate(numBottom => `${numBottom}px`)\r\n                                }}\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                draggable=\"true\"\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3`}\r\n                            >\r\n\r\n\r\n                                {task.taskName}\r\n\r\n\r\n                            </animated.div>\r\n                        }\r\n\r\n                        return <div\r\n                            onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                            onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                            onDragEnd={(e) => { handleDragEnd(e) }}\r\n                            draggable=\"true\"\r\n                            key={index}\r\n                            className={`bg-success text-white m-1 p-3 ${cssDragTag}`}>\r\n                            {task.taskName}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// onDragOver={(e)=>{\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }}","import React, { useRef, useState } from 'react';\r\nimport './Demo.css';\r\nimport { useSpring, useSprings, animated } from 'react-spring'\r\n\r\nconst defaultValue = [\r\n    { id: 1, taskName: 'Task 1' },\r\n    { id: 2, taskName: 'Task 2' },\r\n    { id: 3, taskName: 'Task 3' },\r\n    { id: 4, taskName: 'Task 4' },\r\n    { id: 5, taskName: 'Task 5' },\r\n]\r\n\r\n\r\nexport default function Demo(props) {\r\n\r\n    const [taskList, setTaskList] = useState(defaultValue);\r\n    const tagDrag = useRef({});\r\n    const tagDragEnter = useRef({});\r\n    const [propsSpring, set, stop] = useSpring(() => ({ to: { rotate: 25, bottom: 0 }, from: { rotate: 0, bottom: -50 }, config: { duration: 250 }, reset: true }))\r\n\r\n    const handleDragStart = (e, task, index) => {\r\n        console.log(e.target);\r\n        console.log(task);\r\n        //Lưu lại giá trị của task đang drag\r\n        tagDrag.current = task;\r\n    }\r\n\r\n\r\n    const handleDragEnter = (e, taskDragEnter, index) => {\r\n        // console.log('dragEnterTag',e.target)\r\n        // console.log('targertOver',task)\r\n        // console.log('index',index)\r\n        set({ bottom: 0 })\r\n       \r\n\r\n        let taskListUpdate = [...taskList];\r\n        //Láy ra index thằng đang kéo\r\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\r\n        //Lấy ra index thằng bị kéo qua \r\n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\r\n\r\n        //Bién6 chứa giá trị thằng đang kéo\r\n        let temp = taskListUpdate[indexDragTag];\r\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\r\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\r\n        //Lấy thằng kéo qua gán = đang keo\r\n        taskListUpdate[indexDragEnter] = temp;\r\n\r\n        tagDragEnter.current = taskDragEnter;\r\n\r\n        setTaskList(taskListUpdate);\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleDragEnd = (e) => {\r\n\r\n\r\n    }\r\n    const handleDrop = (e) => {\r\n        // console.log('drop', e.target);\r\n    }\r\n    return (\r\n        <div className=\"container\" onDragOver={(e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }}\r\n            onDrop={(e) => {\r\n                tagDrag.current = {}\r\n                setTaskList([...taskList])\r\n            }}\r\n        >\r\n            <div className=\"text-center display-4\">Task list</div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"bg-dark p-5 col-4\">\r\n                    {taskList.map((task, index) => {\r\n\r\n                        let cssDrag = task.id === tagDrag.current.id ? 'tagDrag' : ''\r\n                        let cssDragEnter = tagDragEnter.current.id == task.id ? 'tagDragEnter' : '';\r\n                        if (cssDragEnter !== '') {\r\n                            return <animated.div\r\n                                style={{\r\n                                    transform: propsSpring.bottom.interpolate(r => `${r}px`),\r\n                                    position: 'relative',\r\n                                    bottom: propsSpring.bottom.interpolate(r => `${r}px`),\r\n\r\n\r\n                                }}\r\n\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                draggable=\"true\"\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                onDragLeave={(e) => { handleDragEnd(e) }}\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\r\n                                {task.taskName}\r\n                            </animated.div>\r\n                        } else {\r\n                            return <div\r\n\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                draggable=\"true\"\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                onDragLeave={(e) => { handleDragEnd(e) }}\r\n\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\r\n                                {task.taskName}\r\n                            </div>\r\n                        }\r\n                    })}\r\n                </div>\r\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// onDragOver={(e)=>{\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }}","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function DragAndDropDnD(props) {\r\n\r\n    const [state, setState] = useState({\r\n        toDo: {\r\n            id: 'toDo',\r\n            items: [\r\n                { id: '1', taskName: 'Task 1' },\r\n                { id: '2', taskName: 'Task 2' },\r\n                { id: '3', taskName: 'Task 3' },\r\n            ]\r\n        },\r\n        inProgress: {\r\n            id: 'inProgress',\r\n            items: [\r\n                { id: '4', taskName: 'Task 4' },\r\n                { id: '5', taskName: 'Task 5' },\r\n                { id: '6', taskName: 'Task 6' },\r\n            ]\r\n        },\r\n        done: {\r\n            id: 'done',\r\n            items: [\r\n                { id: '7', taskName: 'Task 7' },\r\n                { id: '8', taskName: 'Task 8' },\r\n                { id: '9', taskName: 'Task 9' },\r\n            ]\r\n        }\r\n    })\r\n\r\n    const handleDragEnd = (result) => { \r\n        let {destination,source} = result;\r\n\r\n        if(!destination){\r\n            return ;\r\n        }\r\n\r\n        if(destination.index === source.index && destination.droppableId === source.droppableId){\r\n            return;\r\n        }\r\n\r\n        //tạo ra 1 tag drag\r\n        let itemCopy = {...state[source.droppableId].items[source.index]};\r\n        console.log('itemCopy',itemCopy)\r\n\r\n        //Droppable bắt đầu kéo\r\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\r\n        \r\n        state[source.droppableId].items.splice(index,1);\r\n\r\n        //Droppable thả vào\r\n        let dropDestination = state[destination.droppableId].items;\r\n\r\n        dropDestination.splice(destination.index, 0, itemCopy)\r\n\r\n\r\n        setState(state);\r\n        \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"text-center display-4\">Demo DraggAndDropp DND</h3>\r\n\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n\r\n                <div className=\"row\">\r\n                    {_.map(state, (statusTask, index) => {\r\n                        return <Droppable droppableId={statusTask.id} key={index}>\r\n                            {(provided) => {\r\n                                return <div className=\"col-4\" >\r\n\r\n                                    <div className=\"bg-dark p-5\"\r\n                                        key={index}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}\r\n                                    >\r\n                                        <h3 className=\"text-white\">{statusTask.id}</h3>\r\n                                        {statusTask.items.map((item, index) => {\r\n                                            return <Draggable key={item.id} index={index} draggableId={item.id}>\r\n                                                {(provided) => {\r\n                                                    return <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        className=\"mt-2 p-2 bg-white text-center\">\r\n                                                        {item.taskName}\r\n                                                    </div>\r\n                                                }}\r\n                                            </Draggable>\r\n\r\n\r\n                                        })}\r\n\r\n\r\n                                        {provided.placeholder}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }}\r\n\r\n                        </Droppable>\r\n                    })}\r\n\r\n                </div>\r\n            </DragDropContext>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, useHistory } from 'react-router-dom';\nimport LoadingComponent from './components/GlobalSetting/LoadingComponent/LoadingComponent';\nimport Header from './components/Home/Header/Header';\nimport Modal from './HOC/Modal/Modal';\nimport About from './pages/About/About';\nimport BaiTapToDoListSaga from './pages/BaiTapToDoListSaga/BaiTapToDoListSaga';\nimport Contact from './pages/Contact/Contact';\nimport LoginCyberBugs from './pages/CyberBugs/LoginCyberBugs/LoginCyberBugs';\nimport DemoHOCModal from './pages/DemoHOCModal/DemoHOCModal';\nimport Detail from './pages/Detail/Detail';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\nimport Profile from './pages/Profile/Profile';\nimport Todolist from './pages/Todolist/Todolist';\nimport ToDoListRedux from './pages/Todolist/ToDoListRedux';\nimport TodolistRFC from './pages/Todolist/TodolistRFC';\nimport { HomeTemplate } from './templates/HomeTemplate/HomeTemplate';\nimport { UserLoginTemplate } from './templates/HomeTemplate/UserLoginTemplate';\nimport { useDispatch } from 'react-redux';\nimport { CyberbugsTemplate } from './templates/HomeTemplate/CyberbugsTemplate';\nimport indexCyberBugs from './pages/CyberBugs/ProjectDetail/indexCyberBugs';\nimport CreateProject from './pages/CyberBugs/CreateProject/CreateProject';\nimport ProjectManagement from './pages/CyberBugs/ProjectManagement/ProjectManagement';\nimport DrawerCyberBugs from './HOC/CyberbugsHOC/DrawerCyberBugs';\nimport NotificationComponent from './components/Notification/NotificationComponent';\nimport DemoDragDrop from './pages/DemoDragDrop/DemoDragDrop';\nimport Demo from './pages/Demo/Demo';\nimport DragAndDropDnD from './pages/DragAndDropDnD/DragAndDropDnD';\n\nfunction App() {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: 'ADD_HISTORY', history: history });\n  }, [])\n\n\n  return (\n    <div>\n      {/* <Modal /> */}\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch>\n\n        {/* <Route exact path='/home'  render={(propsRoute)=>{\n          return <div>\n                <Header />\n                <Home {...propsRoute} />\n          </div>\n        }}/> */}\n\n        <HomeTemplate path=\"/home\" exact Component={Home} />\n        <HomeTemplate exact path='/contact' Component={Contact} />\n        <HomeTemplate exact path='/about' Component={About} />\n        <HomeTemplate exact path='/dragdrop' Component={DemoDragDrop} />\n        <UserLoginTemplate exact path='/login' Component={LoginCyberBugs} />\n        <HomeTemplate exact path='/detail/:id' Component={Detail} />\n        <HomeTemplate exact path='/profile' Component={Profile} />\n        <HomeTemplate exact path='/todolistrfc' Component={TodolistRFC} />\n        <HomeTemplate exact path='/todolistrcc' Component={Todolist} />\n        <HomeTemplate exact path='/todolistredux' Component={ToDoListRedux} />\n        <HomeTemplate exact path='/todolistsaga' Component={BaiTapToDoListSaga} />\n        <HomeTemplate exact path='/demohocmodal' Component={DemoHOCModal} />\n        <HomeTemplate exact path='/demo' Component={Demo} />\n        <HomeTemplate exact path='/demodragdropdnd' Component={DragAndDropDnD} />\n        <CyberbugsTemplate exact path='/cyberbugs' Component={indexCyberBugs} />\n        <CyberbugsTemplate exact path='/createproject' Component={CreateProject} />\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement} />\n        <CyberbugsTemplate exact path='/projectdetail/:projectId' Component={indexCyberBugs} />\n        <CyberbugsTemplate exact path='/' Component={ProjectManagement} />\n        <HomeTemplate path=\"*\" component={PageNotFound} />\n        \n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\"\n\n\nconst initialState = {\n    taskList:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_TASK_API:\n        state.taskList = action.taskList;\n        return { ...state }\n\n    default:\n        return state\n    }\n}\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading:false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case DISPLAY_LOADING:\n        state.isLoading = true;\n        return { ...state }\n    case HIDE_LOADING:{\n        state.isLoading=false;\n        return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import React from 'react'\n\nconst stateDefault = {\n    Component: <p>Nội dung mặc định</p>\n}\n\n\nexport const ModalReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case 'OPEN_FORM' : {\n            state.Component = action.Component;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import Axios from \"axios\";\nimport { DOMAIN } from \"../util/constants/settingSystem\"\n\nexport class ToDoListService {\n    constructor(){\n\n    }\n\n    getTaskApi = () => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\n            method: 'GET'\n        })\n    }\n\n    addTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/addTask`,\n            method: 'POST',\n            data: {\n                taskName:taskName\n            }\n        })\n    }\n\n    deleteTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE',\n        })\n    }\n\n    checkDoneTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n    rejectTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n}\n\nexport const toDoListService = new ToDoListService();\n\n","import Axios from 'axios'\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\nimport { toDoListService } from '../../services/ToDoListService'\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\n/*redux 2 loại action: \n    Loại 1: action => object (action thường)\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\n*/\n\n/*\n    01/01/2020 Khải viết chức năng getTask\n    Action saga lấy danh sách task từ api \n*/\nfunction* getTaskApiAction(action) {\n    //put giống dispatch action\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    try {\n        let { data, status } = yield call(toDoListService.getTaskApi)\n        yield delay(300);\n        if (status === STATUS_CODE.SUCCESS) {\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \n            yield put({\n                type: GET_TASK_API,\n                taskList: data\n            });\n        } else {\n            console.log('error')\n        }\n    }\n    catch (err) {\n        console.log('err')\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\nexport function* theoDoiActionGetTaskApi() {\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng addTask\n    Action saga nghiệp vụ thêm task\n*/\n\nfunction* addTaskApiAction(action) {\n    const { taskName } = action;\n    //Gọi api\n    try {\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n    //Hiển thị loading\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\n}\n\nexport function* theoDoiActionAddTaskApi() {\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga nghiệp vụ xóa task\n*/\n\nfunction* deleteTaskApi(action) {\n    console.log(action)\n    const { taskName } = action;\n    try {\n        //Gọi api deletetask\n        const { data, status } = yield call(() => {\n            return toDoListService.deleteTaskApi(taskName);\n        });\n\n        if (status === STATUS_CODE.SUCCESS) {\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\n            yield put({\n                type: GET_TASKLIST_API,\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function* theoDoiActionDeleteTask() {\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ done task\n*/\n\nfunction* checkDoneTaskApi(action) {\n    const { taskName } = action;\n\n    try {\n        const { data, status } = yield call(() => {\n            return toDoListService.checkDoneTask(taskName);\n        });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\n\nexport function* theoDoiDoneTask() {\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ reject task\n*/\nexport function* rejectTaskApi(action) {\n    const { taskName } = action;\n\n    try{\n        const {data,status} = yield call (()=>{\n            return toDoListService.rejectTask(taskName);\n        })\n        \n        if(status === STATUS_CODE.SUCCESS) {\n            yield put ({\n                type:GET_TASKLIST_API\n            })\n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n\n}\n\n\nexport function* theoDoiRejectTask() {\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\n}\n\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","const { default: Axios } = require(\"axios\")\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\")\n\nexport const cyberbugsService = { \n    signinCyberBugs: (userLogin) => {\n       return Axios({\n            url:`${DOMAIN_CYBERBUG}/users/signin`,\n            method:'POST',\n            data: userLogin\n        }) \n    },\n    getAllProjectCategory: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/ProjectCategory`,\n            method: 'GET'\n        })\n    },\n    createProject: (newProject) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/createProject`,\n            method:'POST',\n            data:newProject\n        })\n    },\n    createProjectAuthorization : (newProject) => {\n        console.log(localStorage.getItem(TOKEN))\n        return Axios({\n            url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\n            method:'POST',\n            data:newProject,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT \n        })\n    },\n    getListProject: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/getAllProject`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    },\n    updateProject: (projectUpdate) => { \n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\n            method:'PUT',\n            data:projectUpdate,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}\n\n\n\n","import Axios from \"axios\"\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\n\nexport class baseService {\n    //put json về phía backend\n    put = (url,model) => {\n        return  Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'PUT',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n    post = (url,model) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'POST',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n\n    get = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n\n    delete = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'DELETE',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}","import { baseService } from \"./baseService\";\n\nexport class UserService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getUser = (keyWord) => {\n        \n       return this.get(`Users/getUser?keyword=${keyWord}`);\n    }\n\n\n    assignUserProject = (userProject) => {\n        return this.post(`Project/assignUserProject`,userProject);\n    }\n\n\n    deleteUserFromProject = (userProject) => {\n        return this.post(`Project/removeUserFromProject`,userProject);\n    } \n\n\n    getUserByProjectId = (idProject) =>{ \n        return this.get(`Users/getUserByProjectId?idProject=${idProject}`)\n    }\n}\n\n\nexport const userService = new UserService();\n","import Axios from 'axios';\nimport { call, delay, fork, take, takeEvery, takeLatest, put, select } from 'redux-saga/effects';\nimport { cyberbugsService } from '../../../services/CyberbugsService';\nimport { USER_SIGNIN_API, USLOGIN } from '../../constants/Cyberbugs/Cyberbugs';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\nimport { STATUS_CODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem'\n\nimport { history } from '../../../util/history';\nimport { userService } from '../../../services/UserService';\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../constants/Cyberbugs/UserConstatnts';\nimport { array } from 'yup';\n\n//Quản lý các action saga\nfunction* signinSaga(action) {\n    // console.log(action);\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => cyberbugsService.signinCyberBugs(action.userLogin));\n\n        //Lưu vào localstorage khi đăng nhập thành công\n        localStorage.setItem(TOKEN, data.content.accessToken);\n        localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\n\n\n        yield put({\n            type: USLOGIN,\n            userLogin: data.content\n        })\n\n        // let history = yield select(state=> state.HistoryReducer.history)\n\n        history.push('/home');\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n\n\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\n\nexport function* theoDoiSignin() {\n    yield takeLatest(USER_SIGNIN_API, signinSaga);\n}\n\n\n\n\n//Quản lý các action saga\nfunction* getUserSaga(action) {\n\n    //action.keyWord\n    console.log(\"keyword\", action.keyWord);\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => userService.getUser(action.keyWord));\n\n        yield put({\n            type: 'GET_USER_SEARCH',\n            lstUserSearch: data.content\n        })\n        console.log(\"data\", data);\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiGetUser() {\n    yield takeLatest(\"GET_USER_API\", getUserSaga);\n}\n\n\n\n\n\n//Quản lý các action saga\nfunction* addUserProjectSaga(action) {\n\n\n    try {\n        const { data, status } = yield call(() => userService.assignUserProject(action.userProject));\n\n        yield put({\n            type: 'GET_LIST_PROJECT_SAGA'\n        })\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiAddUserProject() {\n    yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\n}\n\n\n\n\n\n\n//Quản lý các action saga\nfunction* removeUserProjectSaga(action) {\n\n\n    try {\n        const { data, status } = yield call(() => userService.deleteUserFromProject(action.userProject));\n\n        yield put({\n            type: 'GET_LIST_PROJECT_SAGA'\n        })\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiRemoveUserProject() {\n    yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\n}\n\n\n\n\nfunction* getUserByProjectIdSaga(action) {\n    const { idProject } = action;\n    console.log('action',idProject)\n\n    try {\n        const { data, status } = yield call(() => userService.getUserByProjectId(idProject));\n        console.log('checkdata',data);\n\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type:GET_USER_BY_PROJECT_ID,\n                arrUser:data.content\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n        console.log(err.response?.data);\n        if(err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\n            yield put({\n                type:GET_USER_BY_PROJECT_ID,\n                arrUser:[]\n            })\n        }\n    }\n}\n\n\n\nexport function* theoDoiGetUserByProjectIdSaga() {\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga)\n}","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\nfunction* getAllProjectCategorySaga(action) {\n    console.log('actionSaga', action);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\n\n\n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_PROJECT_CATEGORY,\n                data: data.content\n            });\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\n\n\n\n\nexport function* theoDoigetAllProjectCategory() {\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\n}","import { baseService } from \"./baseService\";\n\nexport class ProjectService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllProject = () => {\n        return this.get(`Project/getAllProject`);\n    }\n\n    deleteProject = (id) => {\n        \n       return this.delete(`Project/deleteProject?projectId=${id}`);\n    }\n\n    getProjectDetail = (projectId) => {\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\n    }\n\n}\n\n\nexport const projectService = new ProjectService();\n","import { notification } from \"antd\"\n\nexport const notifiFunction = (type, message, description = '') => {\n    notification[type]({ //action.typeNotification = success | warning | info | error,\n        message: message,\n        description: description\n    })\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport {history} from '../../../util/history';\nimport { projectService } from \"../../../services/ProjectService\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport { GET_ALL_PROJECT, GET_ALL_PROJECT_SAGA } from \"../../constants/Cyberbugs/ProjectCyberBugsConstants\";\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/Cyberbugs/UserConstatnts\";\nfunction* createProjectSaga(action) {\n\n    console.log('actionCreateProject',action)\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay (500);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.createProjectAuthorization(action.newProject));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            history.push('/projectmanagement');\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n   \n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\n\n\n\nexport function* theoDoiCreateProjectSaga() {\n    yield takeLatest('CREATE_PROJECT_SAGA', createProjectSaga);\n}\n\n\n\n\n//Saga dùng để get all project từ api \n//Khải - Code ngày dd/MM/yyyy\n\nfunction *getListProjectSaga(action) { \n\n    try {\n        const {data,status} = yield call( () => cyberbugsService.getListProject());\n \n        //Sau khi lấy dữ liệu từ api về thành công\n        if(status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type:'GET_LIST_PROJECT',\n                projectList:data.content\n            })\n\n\n         \n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n}\n\n\nexport function* theoDoiGetListProjectSaga() {\n    yield takeLatest('GET_LIST_PROJECT_SAGA', getListProjectSaga);\n}\n\n//UpdateProject\nfunction* updateProjectSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay (500);\n\n    try {\n\n        \n        const { data, status } = yield call(() => cyberbugsService.updateProject(action.prjectUpdate));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            // history.push('/projectmanagement');\n        }\n        // yield put({\n        //     type:'GET_LIST_PROJECT_SAGA'\n        // })\n        yield call(getListProjectSaga);\n        yield put({\n            type:'CLOSE_DRAWER'\n        })\n    } catch (err) {\n        console.log(err);\n    }\n   \n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiUpdateProjectSaga() {\n    yield takeLatest('UPDATE_PROJECT_SAGA', updateProjectSaga);\n}\n\n\n\n\n//UpdateProject\nfunction* deleteProjectSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay (500);\n\n    try {\n        const { data, status } = yield call(() => projectService.deleteProject(action.idProject));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            notifiFunction('success','Delete project successfully !')\n\n            // history.push('/projectmanagement');\n        }else {\n            notifiFunction('error','Delete project fail !')\n        }\n        // yield put({\n        //     type:'GET_LIST_PROJECT_SAGA'\n        // })\n        yield call(getListProjectSaga);\n        yield put({\n            type:'CLOSE_DRAWER'\n        })\n    } catch (err) {\n        notifiFunction('error','Delete project fail !')\n        console.log(err);\n    }\n   \n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiDeleteProject() {\n    yield takeLatest('DELETE_PROJECT_SAGA', deleteProjectSaga);\n}\n\n\n\n\nfunction* getProjectDetailSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    // yield put({\n    //     type: DISPLAY_LOADING\n    // })\n    yield delay (500);\n\n    try {\n        const { data, status } = yield call(() => projectService.getProjectDetail(action.projectId));\n        \n        console.log('data',data);\n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\n        yield put({\n            type:'PUT_PROJECT_DETAIL',\n            projectDetail:data.content\n        })\n    \n    } catch (err) {\n        console.log('404 not found !')\n        history.push('/projectmanagement');\n    }\n   \n    // yield put({\n    //     type: HIDE_LOADING\n    // })\n}\n\nexport function* theoDoiGetProjectDetail() {\n    yield takeLatest('GET_PROJECT_DETAIL', getProjectDetailSaga);\n}\n\n\n\nfunction* getProjectAllSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay (500);\n\n    try {\n        const { data, status } = yield call(() => projectService.getAllProject());\n        \n      \n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\n        yield put({\n            type:GET_ALL_PROJECT,\n            arrProject:data.content\n        })\n\n        yield put({\n            type:GET_USER_BY_PROJECT_ID_SAGA,\n            idProject:data.content[0].id\n        })\n    \n    } catch (err) {\n        console.log('404 not found !')\n        history.push('/projectmanagement');\n    }\n   \n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\nexport function* theoDoiGetAllProjectSaga() {\n    yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\n}\n\n","import { baseService } from \"./baseService\";\n\nexport class TaskTypeService extends baseService {\n\n    constructor(){\n        super();\n    }\n    getAllTaskType = () => {\n        return this.get('TaskType/getAll');\n    }\n\n}\n\n\nexport const taskTypeService = new TaskTypeService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from \"../../constants/Cyberbugs/TaskTypeConstants\";\n\nfunction * getAllTaskTypeSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> taskTypeService.getAllTaskType());\n\n        yield put({\n            type: GET_ALL_TASK_TYPE,\n            arrTaskType:data.content\n        })\n\n\n\n    }catch (err) {\n        console.log(err);\n    }\n\n\n\n}\n\n\nexport function * theoDoiGetAllTaskTypeSaga () {\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA,getAllTaskTypeSaga)\n}","import { baseService } from \"./baseService\";\n\nexport class PriorityService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllPriority = () => {\n        return this.get(`Priority/getAll`);\n    }\n\n    \n\n}\n\n\nexport const priorityService = new PriorityService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { priorityService } from \"../../../services/PriorityService\";\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/Cyberbugs/PriorityConstants\";\n\nfunction * getAllPrioritySaga(action) {\n    try {\n        const {data,status} = yield call(()=> priorityService.getAllPriority());\n\n        yield put({type:GET_ALL_PRIORITY,arrPriority:data.content});\n\n\n    }catch(err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function * theoDoiGetAllPriority() {\n    yield takeLatest(GET_ALL_PRIORITY_SAGA,getAllPrioritySaga)\n}","import { baseService } from \"./baseService\";\n\nexport class TaskService extends baseService {\n\n    constructor(){\n        super();\n    }\n    createTask = (taskObject) => {\n        return this.post('Project/createTask',taskObject);\n    }\n\n\n    getTaskDetail = (taskId) => {\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\n    }\n\n    updateStatusTask = (taskStatusUpdate) => {\n        return this.put(`Project/updateStatus`,taskStatusUpdate);\n    }\n    updateTask = (taskUpdate) => {\n        return this.post(`Project/updateTask`,taskUpdate);\n    }\n}   \n\n\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from 'redux-saga/effects'\nimport { taskService } from '../../../services/TaskService'\nimport { STATUS_CODE } from '../../../util/constants/settingSystem';\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs'\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\nimport { HANDLE_CHANGE_POST_API_SAGA, GET_TASK_DETAIL_SAGA, GET_TASK_DETAIL, UPDATE_STATUS_TASK_SAGA, UPDATE_TASK_SAGA, CHANGE_TASK_MODAL, CHANGE_ASSIGNESS, REMOVE_USER_ASSIGN } from '../../constants/Cyberbugs/TaskConstants'\nfunction* createTaskSaga(action) {\n\n    try {\n        yield put({\n            type: DISPLAY_LOADING\n        })\n        const { data, status } = yield call(() => taskService.createTask(action.taskObject));\n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n        }\n        yield put({\n            type: 'CLOSE_DRAWER'\n        })\n        notifiFunction('success', 'Create task successfully !');\n    }\n    catch (err) {\n        console.log(err.response.data)\n    }\n\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiCreateTaskSaga() {\n    yield takeLatest('CREATE_TASK_SAGA', createTaskSaga);\n}\n\n\n\n\nfunction* getTaskDetailSaga(action) {\n\n    const { taskId } = action;\n\n    try {\n        const { data, status } = yield call(() => taskService.getTaskDetail(taskId));\n\n        yield put({\n            type: GET_TASK_DETAIL,\n            taskDetailModal: data.content\n        })\n\n    } catch (err) {\n\n        console.log(err);\n        console.log(err.response?.data);\n\n    }\n\n\n}\n\n\n\nexport function* theoDoiGetTaskDetailSaga(action) {\n\n    yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga)\n\n}\n\n//update task \n\nfunction* updateTaskStatusSaga(action) {\n\n    const { taskUpdateStatus } = action;\n    console.log(action)\n    try {\n\n        //Cập nhật api status cho task hiện tại (Task đang mở modal)\n        const { data, status } = yield call(() => taskService.updateStatusTask(taskUpdateStatus));\n\n        //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task \n        // console.log(data)\n        if (status == STATUS_CODE.SUCCESS) {\n            yield put({\n                type: 'GET_PROJECT_DETAIL',\n                projectId: taskUpdateStatus.projectId\n            })\n\n            yield put({\n                type: GET_TASK_DETAIL_SAGA,\n                taskId: taskUpdateStatus.taskId\n            })\n        }\n\n\n\n    } catch (err) {\n        console.log(err);\n        console.log(err.response?.data);\n\n    }\n}\n\nexport function* theoDoiUpdateTaskStatusSaga() {\n    yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga)\n}\n\n\n\n\nfunction* updateTaskSaga(action) {\n\n\n\n}\n\n\nexport function* theoDoiUdpateTask() {\n    yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga);\n}\n\n\n\n\nexport function* handelChangePostApi(action) {\n    // console.log('abc', action)\n    //Gọi action làm thay đổi taskDetail modal\n    switch (action.actionType) {\n        case CHANGE_TASK_MODAL: {\n            const { value, name } = action;\n\n            yield put({\n                type: CHANGE_TASK_MODAL,\n                name,\n                value\n            });\n        };break;\n        case CHANGE_ASSIGNESS: {\n            const { userSelected } = action;\n            yield put({\n                type: CHANGE_ASSIGNESS,\n                userSelected\n            })\n\n        };break;\n        case REMOVE_USER_ASSIGN: {\n            const { userId } = action;\n            yield put({\n                type: REMOVE_USER_ASSIGN,\n                userId\n            })\n        }break;\n    }\n\n    //Save qua api updateTaskSaga\n    //Lây dữ liệu từ state.taskDetailModal \n    let { taskDetailModal } = yield select(state => state.TaskReducer);\n    console.log('taskDetailModal sau khi thay đổi', taskDetailModal)\n    //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\n\n    const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\n        return user.id;\n    });\n\n\n    const taskUpdateApi = { ...taskDetailModal, listUserAsign }\n    try {\n        const { data, status } = yield call(() => taskService.updateTask(taskUpdateApi));\n\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: 'GET_PROJECT_DETAIL',\n                projectId: taskUpdateApi.projectId\n            })\n\n            yield put({\n                type: GET_TASK_DETAIL_SAGA,\n                taskId: taskUpdateApi.taskId\n            })\n        }\n    } catch(err) {\n        console.log(err.response?.data);\n        console.log(err);\n    }\n\n}\n\nexport function* theoDoiHandleChangePostApi() {\n    yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\n}\n","import { baseService } from \"./baseService\";\n\nexport class StatusService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllStatus = () => {\n        return this.get(`Status/getAll`)\n    }\n\n}\n\n\nexport const statusService = new StatusService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { statusService } from \"../../../services/StatusService\";\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/StatusConstant\";\n\nfunction * getAllStatusSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> statusService.getAllStatus());\n\n        yield put({\n            type: GET_ALL_STATUS,\n            arrStatus:data.content\n        })\n\n\n    }catch(err) {\n        console.log(err);\n        console.log(err.response?.data)\n    }\n\n}\n\n\n\nexport function *theoDoiGetAllStatusSaga() {\n\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\n\n}","import { all } from \"redux-saga/effects\";\nimport Todolist from \"../../pages/Todolist/Todolist\";\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\nimport * as ToDoListSaga from './ToDoListSaga'\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\nimport * as Cyberbugs from './Cyberbugs/UserCyberbugsSaga';\nimport * as ProjectCategorySaga from './Cyberbugs/ProjectCategorySaga';\nimport * as ProjectSaga from './Cyberbugs/ProjectSaga';\nimport * as TaskTypeSaga from './Cyberbugs/TaskTypeSaga';\nimport * as PrioritySaga from './Cyberbugs/PrioritySaga';\nimport * as TaskSaga from './Cyberbugs/TaskSaga';\nimport * as StatusSaga from './Cyberbugs/StatusSaga'\nimport { cyberbugsService } from \"../../services/CyberbugsService\";\n\nexport function* rootSaga() {\n\n  yield all([\n    //Nghiệp vụ theo dõi các action saga todolist\n    ToDoListSaga.theoDoiActionGetTaskApi(),\n    ToDoListSaga.theoDoiActionAddTaskApi(),\n    ToDoListSaga.theoDoiActionDeleteTask(),\n    ToDoListSaga.theoDoiDoneTask(),\n    ToDoListSaga.theoDoiRejectTask(),\n    \n    //Nghiệp vụ cyberbugs .... ,\n    Cyberbugs.theoDoiSignin(),\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiRemoveUserProject(),\n    Cyberbugs.theoDoiAddUserProject(),\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\n    ProjectCategorySaga.theoDoigetAllProjectCategory(),\n    ProjectSaga.theoDoiCreateProjectSaga(),\n    ProjectSaga.theoDoiGetListProjectSaga(),\n    ProjectSaga.theoDoiUpdateProjectSaga(),\n    ProjectSaga.theoDoiDeleteProject(),\n    ProjectSaga.theoDoiGetProjectDetail(),\n    ProjectSaga.theoDoiGetAllProjectSaga(),\n    StatusSaga.theoDoiGetAllStatusSaga(),\n\n    TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\n    PrioritySaga.theoDoiGetAllPriority(),\n\n    TaskSaga.theoDoiCreateTaskSaga(),\n    TaskSaga.theoDoiGetTaskDetailSaga(),\n    TaskSaga.theoDoiUpdateTaskStatusSaga(),\n    TaskSaga.theoDoiHandleChangePostApi(),\n    TaskSaga.theoDoiUdpateTask()\n\n    \n    \n  ])\n\n\n}","\n\n\nconst historyState = {\n    history:{}\n};\n\n\n\nexport const HistoryReducer = (state = historyState,action) => {\n    switch(action.type) {\n        case 'ADD_HISTORY':{\n            state.history = action.history;\n            console.log(state.history);\n            return {...state}\n        }\n        default: return {...state}\n    }\n}","import { USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/Cyberbugs/UserConstatnts\";\n\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\n\nlet usLogin = {};\n\nif(localStorage.getItem(USER_LOGIN)) {\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\n}\n\n\n\n\nconst stateDefault =  {\n    userLogin : usLogin,\n    userSearch: [],\n    arrUser:[]//Array user cho thẻ select create task\n\n}\n\n\n\nexport const UserLoginCyberBugsReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case USLOGIN: {\n            state.userLogin = action.userLogin;\n            return {...state}\n        }\n\n        case 'GET_USER_SEARCH' :{\n            state.userSearch = action.lstUserSearch;\n            console.log('stateUser',state);\n            return {...state}\n        }\n        case GET_USER_BY_PROJECT_ID: {\n            return  {...state,arrUser:action.arrUser}\n        }\n\n        default : return {...state};\n    }\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\n\n\nconst stateDefault = {\n    arrProjectCategory : []\n}\n\n\n\n\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\n    switch(action.type){\n\n        case GET_ALL_PROJECT_CATEGORY: {\n            state.arrProjectCategory = action.data;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import { GET_ALL_PROJECT } from \"../constants/Cyberbugs/ProjectCyberBugsConstants\";\n\n\nconst stateDefault = {\n    projectList: [],\n    arrProject: [] //Get allproject cho dropdown\n\n}\n\n\n\n\nexport const ProjectCyberBugsReducer = (state = stateDefault,action) => {\n\n\n    switch(action.type){\n\n        case 'GET_LIST_PROJECT': {\n                state.projectList = action.projectList;\n                console.log(\"projectList\",action.projectList)\n                return {...state};\n        }\n\n        case GET_ALL_PROJECT : {\n            // state.arrProject = action.arrProject;\n            return {...state,arrProject:action.arrProject}\n        }\n\n        default: return {...state}\n    }\n}","import React from 'react'\nconst initialState = {\n    visible: false,\n    title:'',\n    ComponentContentDrawer: <p>default</p>,\n    callBackSubmit: (propsValue) => { alert('click demo!') }\n}\n\nexport const drawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'OPEN_DRAWER':\n            return { ...state, visible: true }\n        case 'CLOSE_DRAWER':\n            return { ...state, visible: false }\n        case 'OPEN_FORM_EDIT_PROJECT': {\n            state.visible = true;\n            state.ComponentContentDrawer = action.Component;\n            state.title = action.title;\n            return { ...state }\n\n        }\n        case 'SET_SUBMIT_EDIT_PROJECT': {\n            state.callBackSubmit = action.submitFunction;\n            return {...state};\n        }\n\n        case 'SET_SUBMIT_CREATE_TASK' : {\n            return {...state,callBackSubmit:action.submitFunction}\n        }\n\n        case 'OPEN_FORM_CREATE_TASK' : {\n            state.visible = true;\n            state.title = action.title;\n            state.ComponentContentDrawer = action.Component;\n            return {...state};\n\n        }\n\n        \n\n        default:\n            return state\n    }\n}\n","\nconst initialState = {\n    projectEdit: {\n        \"id\": 0,\n        \"projectName\": \"string\",\n        \"creator\": 0,\n        \"description\": \"string\",\n        \"categoryId\": \"2\"\n      },\n    projectDetail:{\n        \n    }\n}\n\nexport const ProjectReducer =  (state = initialState,  action) => {\n    switch (action.type) {\n    \n    case  'EDIT_PROJECT': {\n        state.projectEdit = action.projectEditModel;\n        return {...state}\n\n    }\n    case 'PUT_PROJECT_DETAIL': {\n        state.projectDetail = action.projectDetail;\n        return {...state}\n    } \n    \n    default:\n        return state\n    }\n}\n","import { GET_ALL_TASK_TYPE } from \"../constants/Cyberbugs/TaskTypeConstants\"\n\nconst initialState = {\n    arrTaskType: []\n}\n\nexport const TaskTypeReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_TASK_TYPE:\n        return { ...state, arrTaskType:action.arrTaskType }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_PRIORITY } from \"../constants/Cyberbugs/PriorityConstants\"\n\nconst initialState = {\n    arrPriority : []\n}\n\nexport const PriorityReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_PRIORITY:\n        return { ...state,arrPriority:action.arrPriority }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/StatusConstant\"\n\nconst initialState = {\n    arrStatus:[]\n}\n\nexport const StatusReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_STATUS:\n\n        // state.arrStatus = action.arrStatus;\n        return { ...state,arrStatus :action.arrStatus }\n\n    default:\n        return state\n    }\n}\n","import { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/Cyberbugs/TaskConstants\"\n\nconst initialState = {\n    taskDetailModal:  {\n      \"priorityTask\": {\n        \"priorityId\": 1,\n        \"priority\": \"High\"\n      },\n      \"taskTypeDetail\": {\n        \"id\": 1,\n        \"taskType\": \"bug\"\n      },\n      \"assigness\": [\n        {\n          \"id\": 68,\n          \"avatar\": \"https://ui-avatars.com/api/?name=khải\",\n          \"name\": \"khải\",\n          \"alias\": \"khai\"\n        },\n        {\n          \"id\": 69,\n          \"avatar\": \"https://ui-avatars.com/api/?name=thoa\",\n          \"name\": \"thoa\",\n          \"alias\": \"thoa\"\n        }\n      ],\n      \"lstComment\": [],\n      \"taskId\": 54,\n      \"taskName\": \"task 1\",\n      \"alias\": \"task-1\",\n      \"description\": \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\n      \"statusId\": \"2\",\n      \"originalEstimate\": 30,\n      \"timeTrackingSpent\": 10,\n      \"timeTrackingRemaining\": 10,\n      \"typeId\": 1,\n      \"priorityId\": 1,\n      \"projectId\": 109\n    }\n}\n\n\n\n\nexport const TaskReducer = (state = initialState,action) => {\n    switch (action.type) {\n\n    case GET_TASK_DETAIL: {\n        console.log(action.taskDetailModal);\n        return {...state,taskDetailModal:action.taskDetailModal}\n    }\n    case CHANGE_TASK_MODAL: {\n      const {name,value} = action;\n      console.log('value',value)\n      // console.log(state.taskDetailModal)\n      return {...state,taskDetailModal: {...state.taskDetailModal,[name]:value}}\n    }\n\n    case CHANGE_ASSIGNESS : {\n\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness,action.userSelected];\n      // console.log('state',state)\n      return {...state}\n    }\n\n    case REMOVE_USER_ASSIGN:{\n\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\n      return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport ToDoListReducer from './reducers/ToDoListReducer'\nimport LoadingReducer from './reducers/LoadingReducer';\nimport {ModalReducer} from './reducers/ModalReducer'\nimport reduxThunk from 'redux-thunk'\n\n\n//middleware saga\nimport createMiddleWareSaga from 'redux-saga';\nimport { rootSaga } from './sagas/rootSaga';\nimport { HistoryReducer } from './reducers/HistoryReducer';\nimport { UserLoginCyberBugsReducer } from './reducers/UserCyberBugsReducer';\nimport { ProjectCategoryReducer } from './reducers/ProjectCategoryReducer';\nimport { ProjectCyberBugsReducer } from './reducers/ProjectCyberBugsReducer';\nimport { drawerReducer } from './reducers/DrawerCyberbugs';\nimport { ProjectReducer } from './reducers/ProjectReducer';\nimport { TaskTypeReducer } from './reducers/TaskTypeReducer';\nimport { PriorityReducer } from './reducers/PriorityReducer';\nimport { StatusReducer } from './reducers/StatusReducer';\nimport {TaskReducer} from './reducers/TaskReducer';\n\nconst middleWareSaga = createMiddleWareSaga();\nconst rootReducer = combineReducers({\n    //reducer khai báo tại đây\n    ToDoListReducer,\n    LoadingReducer,\n    ModalReducer,\n    HistoryReducer,\n    UserLoginCyberBugsReducer,\n    ProjectCategoryReducer,\n    ProjectCyberBugsReducer,\n    drawerReducer,\n    ProjectReducer,\n    TaskTypeReducer,\n    PriorityReducer,\n    StatusReducer,\n    TaskReducer\n})\n\nconst store = createStore(rootReducer,applyMiddleware(reduxThunk,middleWareSaga));\n\n//Gọi saga\nmiddleWareSaga.run(rootSaga);\n\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { BrowserRouter,Router } from 'react-router-dom';\nimport {history} from './util/history'\n\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}